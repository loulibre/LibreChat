{
  "project": "UltraRepo Documentation",
  "version": "1.0",
  "taxonomy": [
    {
      "folder": ".",
      "files": [
        {
          "name": "librechat.example.yaml",
          "path": "librechat.example.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "# For more information, see the Configuration Guide:"
          }
        },
        {
          "name": "LICENSE",
          "path": "LICENSE",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": "",
            "ai_description": "Project license terms",
            "extracted_description": "MIT License"
          }
        },
        {
          "name": "CHANGELOG.md",
          "path": "CHANGELOG.md",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".md",
            "ai_description": "Markdown documentation file",
            "extracted_description": "# Changelog"
          }
        },
        {
          "name": "Dockerfile",
          "path": "Dockerfile",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": "",
            "ai_description": "Docker container build instructions",
            "extracted_description": "# v0.7.7"
          }
        },
        {
          "name": "repo-schema.py",
          "path": "repo-schema.py",
          "metadata": {
            "modified": "2025-03-11T21:20:31.419851",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import os"
          }
        },
        {
          "name": "Dockerfile.multi",
          "path": "Dockerfile.multi",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".multi",
            "ai_description": "File with .multi extension",
            "extracted_description": "# Dockerfile.multi"
          }
        },
        {
          "name": "README.md",
          "path": "README.md",
          "metadata": {
            "modified": "2025-03-11T21:30:11.649935",
            "type": ".md",
            "ai_description": "Project documentation and overview",
            "extracted_description": "<p align=\"center\">"
          }
        },
        {
          "name": "package-lock.json",
          "path": "package-lock.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "package.json",
          "path": "package.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "Node.js package configuration and dependencies",
            "extracted_description": "{"
          }
        },
        {
          "name": "docker-compose.override.yml.example",
          "path": "docker-compose.override.yml.example",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".example",
            "ai_description": "File with .example extension",
            "extracted_description": "# Please consult our docs for more info: https://www.librechat.ai/docs/configuration/docker_override"
          }
        },
        {
          "name": "rag.yml",
          "path": "rag.yml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yml",
            "ai_description": "YAML configuration file",
            "extracted_description": "version: '3.8'"
          }
        },
        {
          "name": "docker-compose.yml",
          "path": "docker-compose.yml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yml",
            "ai_description": "YAML configuration file",
            "extracted_description": "# Do not edit this file directly. Use a \u2018docker-compose.override.yaml\u2019 file if you can."
          }
        },
        {
          "name": "eslint.config.mjs",
          "path": "eslint.config.mjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mjs",
            "ai_description": "File with .mjs extension",
            "extracted_description": "import { fileURLToPath } from 'node:url';"
          }
        }
      ],
      "subfolders": [
        ".cursor",
        "config",
        "charts",
        "utils",
        ".venv",
        "packages",
        "api",
        "e2e",
        "client"
      ]
    },
    {
      "folder": ".cursor/rules",
      "files": [
        {
          "name": "frontend.mdc",
          "path": ".cursor/rules/frontend.mdc",
          "metadata": {
            "modified": "2025-03-11T21:34:59.148442",
            "type": ".mdc",
            "ai_description": "File with .mdc extension",
            "extracted_description": "---"
          }
        },
        {
          "name": "backend.mdc",
          "path": ".cursor/rules/backend.mdc",
          "metadata": {
            "modified": "2025-03-11T21:34:56.600521",
            "type": ".mdc",
            "ai_description": "File with .mdc extension",
            "extracted_description": "---"
          }
        },
        {
          "name": "schema.mdc",
          "path": ".cursor/rules/schema.mdc",
          "metadata": {
            "modified": "2025-03-11T21:40:50.759674",
            "type": ".mdc",
            "ai_description": "File with .mdc extension",
            "extracted_description": "---"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "config",
      "files": [
        {
          "name": "deployed-update.js",
          "path": "config/deployed-update.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { execSync } = require('child_process');"
          }
        },
        {
          "name": "update-banner.js",
          "path": "config/update-banner.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "ban-user.js",
          "path": "config/ban-user.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "stop-backend.js",
          "path": "config/stop-backend.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { promisify } = require('util');"
          }
        },
        {
          "name": "create-user.js",
          "path": "config/create-user.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "packages.js",
          "path": "config/packages.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "list-users.js",
          "path": "config/list-users.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "list-balances.js",
          "path": "config/list-balances.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "set-balance.js",
          "path": "config/set-balance.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "update.js",
          "path": "config/update.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "reset-password.js",
          "path": "config/reset-password.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "connect.js",
          "path": "config/connect.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "add-balance.js",
          "path": "config/add-balance.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "delete-user.js",
          "path": "config/delete-user.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "prepare.js",
          "path": "config/prepare.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { exec } = require('child_process');"
          }
        },
        {
          "name": "helpers.js",
          "path": "config/helpers.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "delete-banner.js",
          "path": "config/delete-banner.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "invite-user.js",
          "path": "config/invite-user.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "user-stats.js",
          "path": "config/user-stats.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "reset-terms.js",
          "path": "config/reset-terms.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        }
      ],
      "subfolders": [
        "translations"
      ]
    },
    {
      "folder": "config/translations",
      "files": [
        {
          "name": "main.ts",
          "path": "config/translations/main.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import fs from 'fs';"
          }
        },
        {
          "name": "scan.ts",
          "path": "config/translations/scan.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import fs from 'fs';"
          }
        },
        {
          "name": "process.ts",
          "path": "config/translations/process.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import fs from 'fs';"
          }
        },
        {
          "name": "anthropic.ts",
          "path": "config/translations/anthropic.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import Anthropic from '@anthropic-ai/sdk';"
          }
        },
        {
          "name": "file.ts",
          "path": "config/translations/file.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import path from 'path';"
          }
        },
        {
          "name": "embeddings.ts",
          "path": "config/translations/embeddings.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import dotenv from 'dotenv';"
          }
        },
        {
          "name": "README.md",
          "path": "config/translations/README.md",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".md",
            "ai_description": "Project documentation and overview",
            "extracted_description": "## Translations"
          }
        },
        {
          "name": "keys.ts",
          "path": "config/translations/keys.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import fs from 'fs';"
          }
        },
        {
          "name": "instructions.ts",
          "path": "config/translations/instructions.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import fs from 'fs';"
          }
        },
        {
          "name": "tsconfig.json",
          "path": "config/translations/tsconfig.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "TypeScript compiler configuration",
            "extracted_description": "{"
          }
        },
        {
          "name": "comparisons.ts",
          "path": "config/translations/comparisons.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import fs from 'fs';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "charts/librechat",
      "files": [
        {
          "name": "Chart.yaml",
          "path": "charts/librechat/Chart.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "apiVersion: v2"
          }
        },
        {
          "name": ".helmignore",
          "path": "charts/librechat/.helmignore",
          "metadata": {
            "modified": "2025-03-11T20:15:19.395343",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "# Patterns to ignore when building packages."
          }
        },
        {
          "name": "values.yaml",
          "path": "charts/librechat/values.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "# Default values for librechat."
          }
        }
      ],
      "subfolders": [
        "templates"
      ]
    },
    {
      "folder": "charts/librechat/templates",
      "files": [
        {
          "name": "deployment.yaml",
          "path": "charts/librechat/templates/deployment.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "apiVersion: apps/v1"
          }
        },
        {
          "name": "NOTES.txt",
          "path": "charts/librechat/templates/NOTES.txt",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".txt",
            "ai_description": "Plain text file",
            "extracted_description": "1. Get the application URL by running these commands:"
          }
        },
        {
          "name": "ingress.yaml",
          "path": "charts/librechat/templates/ingress.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "{{- if .Values.ingress.enabled -}}"
          }
        },
        {
          "name": "service.yaml",
          "path": "charts/librechat/templates/service.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "apiVersion: v1"
          }
        },
        {
          "name": "hpa.yaml",
          "path": "charts/librechat/templates/hpa.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "{{- if .Values.autoscaling.enabled }}"
          }
        },
        {
          "name": "serviceaccount.yaml",
          "path": "charts/librechat/templates/serviceaccount.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "{{- if .Values.serviceAccount.create -}}"
          }
        },
        {
          "name": "_helpers.tpl",
          "path": "charts/librechat/templates/_helpers.tpl",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tpl",
            "ai_description": "File with .tpl extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "configmap-env.yaml",
          "path": "charts/librechat/templates/configmap-env.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "apiVersion: v1"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "utils",
      "files": [
        {
          "name": "update_env.py",
          "path": "utils/update_env.py",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import os"
          }
        }
      ],
      "subfolders": [
        "docker"
      ]
    },
    {
      "folder": "utils/docker",
      "files": [
        {
          "name": "test-compose.yml",
          "path": "utils/docker/test-compose.yml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yml",
            "ai_description": "YAML configuration file",
            "extracted_description": "version: \"3.8\""
          }
        },
        {
          "name": "docker-build.sh",
          "path": "utils/docker/docker-build.sh",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".sh",
            "ai_description": "Shell script file",
            "extracted_description": "#!/bin/bash"
          }
        },
        {
          "name": "docker-push.sh",
          "path": "utils/docker/docker-push.sh",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".sh",
            "ai_description": "Shell script file",
            "extracted_description": "#!/bin/bash"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": ".venv",
      "files": [
        {
          "name": "pyvenv.cfg",
          "path": ".venv/pyvenv.cfg",
          "metadata": {
            "modified": "2025-03-11T21:20:58.542086",
            "type": ".cfg",
            "ai_description": "File with .cfg extension",
            "extracted_description": "home = /opt/homebrew/opt/python@3.13/bin"
          }
        }
      ],
      "subfolders": [
        "bin",
        "include",
        "lib"
      ]
    },
    {
      "folder": ".venv/bin",
      "files": [
        {
          "name": "Activate.ps1",
          "path": ".venv/bin/Activate.ps1",
          "metadata": {
            "modified": "2025-02-04T06:51:09",
            "type": ".ps1",
            "ai_description": "File with .ps1 extension",
            "extracted_description": "<#"
          }
        },
        {
          "name": "python3",
          "path": ".venv/bin/python3",
          "metadata": {
            "modified": "2025-03-07T01:07:24.592368",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "pip3.13",
          "path": ".venv/bin/pip3.13",
          "metadata": {
            "modified": "2025-03-11T21:00:55.550439",
            "type": ".13",
            "ai_description": "File with .13 extension",
            "extracted_description": "#!/Users/jetstart/dev/libre/librechat/.venv/bin/python3.13"
          }
        },
        {
          "name": "python",
          "path": ".venv/bin/python",
          "metadata": {
            "modified": "2025-03-07T01:07:24.592368",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "pip3",
          "path": ".venv/bin/pip3",
          "metadata": {
            "modified": "2025-03-11T21:00:55.550341",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "#!/Users/jetstart/dev/libre/librechat/.venv/bin/python3.13"
          }
        },
        {
          "name": "activate.fish",
          "path": ".venv/bin/activate.fish",
          "metadata": {
            "modified": "2025-03-11T21:20:59.487047",
            "type": ".fish",
            "ai_description": "File with .fish extension",
            "extracted_description": "# This file must be used with \"source <venv>/bin/activate.fish\" *from fish*"
          }
        },
        {
          "name": "pip",
          "path": ".venv/bin/pip",
          "metadata": {
            "modified": "2025-03-11T21:00:55.550230",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "#!/Users/jetstart/dev/libre/librechat/.venv/bin/python3.13"
          }
        },
        {
          "name": "activate",
          "path": ".venv/bin/activate",
          "metadata": {
            "modified": "2025-03-11T21:20:59.487280",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "# This file must be used with \"source bin/activate\" *from bash*"
          }
        },
        {
          "name": "python3.13",
          "path": ".venv/bin/python3.13",
          "metadata": {
            "modified": "2025-03-07T01:07:24.592368",
            "type": ".13",
            "ai_description": "File with .13 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "activate.csh",
          "path": ".venv/bin/activate.csh",
          "metadata": {
            "modified": "2025-03-11T21:20:59.486191",
            "type": ".csh",
            "ai_description": "File with .csh extension",
            "extracted_description": "(Binary file)"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pathspec",
      "files": [
        {
          "name": "_meta.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/_meta.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.310188",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "util.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/util.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.311059",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.310049",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "pattern.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/pattern.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.310813",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "pathspec.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/pathspec.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.310606",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "gitignore.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/gitignore.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.310423",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "py.typed",
          "path": ".venv/lib/python3.13/site-packages/pathspec/py.typed",
          "metadata": {
            "modified": "2025-03-11T21:04:04.310917",
            "type": ".typed",
            "ai_description": "File with .typed extension",
            "extracted_description": "# Marker file for PEP 561.  The pathspec package uses inline types."
          }
        }
      ],
      "subfolders": [
        "patterns",
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pathspec/patterns",
      "files": [
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/patterns/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.311229",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "gitwildmatch.py",
          "path": ".venv/lib/python3.13/site-packages/pathspec/patterns/gitwildmatch.py",
          "metadata": {
            "modified": "2025-03-11T21:04:04.311401",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pathspec-0.12.1.dist-info",
      "files": [
        {
          "name": "RECORD",
          "path": ".venv/lib/python3.13/site-packages/pathspec-0.12.1.dist-info/RECORD",
          "metadata": {
            "modified": "2025-03-11T21:04:04.319831",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "pathspec-0.12.1.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4"
          }
        },
        {
          "name": "LICENSE",
          "path": ".venv/lib/python3.13/site-packages/pathspec-0.12.1.dist-info/LICENSE",
          "metadata": {
            "modified": "2025-03-11T21:04:04.311601",
            "type": "",
            "ai_description": "Project license terms",
            "extracted_description": "Mozilla Public License Version 2.0"
          }
        },
        {
          "name": "WHEEL",
          "path": ".venv/lib/python3.13/site-packages/pathspec-0.12.1.dist-info/WHEEL",
          "metadata": {
            "modified": "2025-03-11T21:04:04.311717",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "Wheel-Version: 1.0"
          }
        },
        {
          "name": "REQUESTED",
          "path": ".venv/lib/python3.13/site-packages/pathspec-0.12.1.dist-info/REQUESTED",
          "metadata": {
            "modified": "2025-03-11T21:04:04.319577",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "INSTALLER",
          "path": ".venv/lib/python3.13/site-packages/pathspec-0.12.1.dist-info/INSTALLER",
          "metadata": {
            "modified": "2025-03-11T21:04:04.319438",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "pip"
          }
        },
        {
          "name": "METADATA",
          "path": ".venv/lib/python3.13/site-packages/pathspec-0.12.1.dist-info/METADATA",
          "metadata": {
            "modified": "2025-03-11T21:04:04.311853",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "Metadata-Version: 2.1"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info",
      "files": [
        {
          "name": "RECORD",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/RECORD",
          "metadata": {
            "modified": "2025-03-11T21:00:55.552448",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "../../../bin/pip,sha256=15iJpHzVyGJ77NxzyvZdVd96-y_FZGBx9HV3VbfXHaw,261"
          }
        },
        {
          "name": "WHEEL",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/WHEEL",
          "metadata": {
            "modified": "2025-03-11T21:00:55.069605",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "Wheel-Version: 1.0"
          }
        },
        {
          "name": "entry_points.txt",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/entry_points.txt",
          "metadata": {
            "modified": "2025-03-11T21:00:55.069714",
            "type": ".txt",
            "ai_description": "Plain text file",
            "extracted_description": "[console_scripts]"
          }
        },
        {
          "name": "top_level.txt",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/top_level.txt",
          "metadata": {
            "modified": "2025-03-11T21:00:55.069826",
            "type": ".txt",
            "ai_description": "Plain text file",
            "extracted_description": "pip"
          }
        },
        {
          "name": "LICENSE.txt",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/LICENSE.txt",
          "metadata": {
            "modified": "2025-03-11T21:00:55.069391",
            "type": ".txt",
            "ai_description": "Plain text file",
            "extracted_description": "Copyright (c) 2008-present The pip developers (see AUTHORS.txt file)"
          }
        },
        {
          "name": "AUTHORS.txt",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/AUTHORS.txt",
          "metadata": {
            "modified": "2025-03-11T21:00:55.069279",
            "type": ".txt",
            "ai_description": "Plain text file",
            "extracted_description": "@Switch01"
          }
        },
        {
          "name": "REQUESTED",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/REQUESTED",
          "metadata": {
            "modified": "2025-03-11T21:00:55.550745",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "INSTALLER",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/INSTALLER",
          "metadata": {
            "modified": "2025-03-11T21:00:55.550635",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "pip"
          }
        },
        {
          "name": "METADATA",
          "path": ".venv/lib/python3.13/site-packages/pip-25.0.dist-info/METADATA",
          "metadata": {
            "modified": "2025-03-11T21:00:55.069500",
            "type": "",
            "ai_description": "Configuration or data file",
            "extracted_description": "Metadata-Version: 2.2"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip",
      "files": [
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.004630",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import List, Optional"
          }
        },
        {
          "name": "py.typed",
          "path": ".venv/lib/python3.13/site-packages/pip/py.typed",
          "metadata": {
            "modified": "2025-03-11T21:00:55.005011",
            "type": ".typed",
            "ai_description": "File with .typed extension",
            "extracted_description": "pip is a command line program. While it is implemented in Python, and so is"
          }
        },
        {
          "name": "__pip-runner__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/__pip-runner__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.004896",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Execute exactly this copy of pip, within a different environment."
          }
        },
        {
          "name": "__main__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/__main__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.004776",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import os"
          }
        }
      ],
      "subfolders": [
        "_internal",
        "_vendor",
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal",
      "files": [
        {
          "name": "configuration.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/configuration.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.005685",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Configuration management setup"
          }
        },
        {
          "name": "pyproject.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/pyproject.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.006102",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import importlib.util"
          }
        },
        {
          "name": "cache.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cache.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.005538",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Cache Management"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.005175",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import List, Optional"
          }
        },
        {
          "name": "exceptions.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/exceptions.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.005821",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Exceptions used throughout package."
          }
        },
        {
          "name": "main.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/main.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.005914",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import List, Optional"
          }
        },
        {
          "name": "wheel_builder.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/wheel_builder.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.006426",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Orchestrator for building wheels from InstallRequirements."
          }
        },
        {
          "name": "self_outdated_check.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/self_outdated_check.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.006264",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import datetime"
          }
        },
        {
          "name": "build_env.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/build_env.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.005364",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Build Environment used for isolation during sdist building"
          }
        }
      ],
      "subfolders": [
        "network",
        "utils",
        "models",
        "__pycache__",
        "cli",
        "operations",
        "req",
        "resolution",
        "vcs",
        "locations",
        "index",
        "commands",
        "metadata",
        "distributions"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/network",
      "files": [
        {
          "name": "auth.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/auth.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.016664",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Network Authentication Helpers"
          }
        },
        {
          "name": "xmlrpc.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/xmlrpc.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.017538",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"xmlrpclib.Transport implementation"
          }
        },
        {
          "name": "download.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/download.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.017010",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Download files with progress indicators."
          }
        },
        {
          "name": "session.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/session.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.017339",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"PipSession and supporting code, containing all pip-specific"
          }
        },
        {
          "name": "cache.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/cache.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.016841",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"HTTP cache implementation."
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.016534",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Contains purely network-related utilities."
          }
        },
        {
          "name": "utils.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/utils.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.017446",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import Dict, Generator"
          }
        },
        {
          "name": "lazy_wheel.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/network/lazy_wheel.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.017191",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Lazy ZIP over HTTP\"\"\""
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/utils",
      "files": [
        {
          "name": "logging.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/logging.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023707",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import contextlib"
          }
        },
        {
          "name": "misc.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/misc.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023832",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import errno"
          }
        },
        {
          "name": "egg_link.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/egg_link.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022907",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import os"
          }
        },
        {
          "name": "compat.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/compat.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022346",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Stuff that differs in different Python versions and platform"
          }
        },
        {
          "name": "deprecation.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/deprecation.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022723",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "subprocess.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/subprocess.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.024355",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "filesystem.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/filesystem.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023180",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import fnmatch"
          }
        },
        {
          "name": "direct_url_helpers.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/direct_url_helpers.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022816",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import Optional"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.021948",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "_jaraco_text.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/_jaraco_text.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022068",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Functions brought over from jaraco.text."
          }
        },
        {
          "name": "temp_dir.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/temp_dir.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.024519",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import errno"
          }
        },
        {
          "name": "retry.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/retry.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.024012",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        },
        {
          "name": "appdirs.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/appdirs.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022252",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "setuptools_build.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/setuptools_build.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.024189",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import sys"
          }
        },
        {
          "name": "packaging.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/packaging.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023925",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        },
        {
          "name": "entrypoints.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/entrypoints.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023002",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import itertools"
          }
        },
        {
          "name": "filetypes.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/filetypes.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023273",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Filetype information."
          }
        },
        {
          "name": "compatibility_tags.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/compatibility_tags.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022525",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Generate and work with PEP 425 Compatibility Tags."
          }
        },
        {
          "name": "datetime.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/datetime.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022623",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"For when pip wants to check the date or time."
          }
        },
        {
          "name": "urls.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/urls.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.024775",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import os"
          }
        },
        {
          "name": "hashes.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/hashes.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023540",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import hashlib"
          }
        },
        {
          "name": "virtualenv.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/virtualenv.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.024901",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "_log.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/_log.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.022161",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Customize logging"
          }
        },
        {
          "name": "glibc.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/glibc.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.023362",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import os"
          }
        },
        {
          "name": "wheel.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/wheel.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.025103",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Support functions for working with wheel files."
          }
        },
        {
          "name": "unpacking.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/utils/unpacking.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.024676",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Utilities related archives."
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/models",
      "files": [
        {
          "name": "link.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/link.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015663",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        },
        {
          "name": "selection_prefs.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/selection_prefs.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.016044",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import Optional"
          }
        },
        {
          "name": "direct_url.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/direct_url.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015219",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\" PEP 610 \"\"\""
          }
        },
        {
          "name": "index.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/index.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015442",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import urllib.parse"
          }
        },
        {
          "name": "target_python.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/target_python.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.016225",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import sys"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.014949",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"A package that contains models that represent entities."
          }
        },
        {
          "name": "search_scope.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/search_scope.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015936",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import itertools"
          }
        },
        {
          "name": "candidate.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/candidate.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015044",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from dataclasses import dataclass"
          }
        },
        {
          "name": "format_control.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/format_control.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015333",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import FrozenSet, Optional, Set"
          }
        },
        {
          "name": "installation_report.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/installation_report.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015541",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import Any, Dict, Sequence"
          }
        },
        {
          "name": "scheme.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/scheme.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.015759",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "wheel.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/models/wheel.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.016402",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Represents a wheel file and provides access to the various parts of the"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/cli",
      "files": [
        {
          "name": "cmdoptions.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/cmdoptions.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.007116",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.006592",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Subpackage containing all of pip's command line interface related code"
          }
        },
        {
          "name": "index_command.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/index_command.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.007418",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "status_codes.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/status_codes.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.009077",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "SUCCESS = 0"
          }
        },
        {
          "name": "parser.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/parser.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.008187",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Base option parser setup\"\"\""
          }
        },
        {
          "name": "command_context.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/command_context.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.007217",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from contextlib import ExitStack, contextmanager"
          }
        },
        {
          "name": "spinners.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/spinners.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.008888",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import contextlib"
          }
        },
        {
          "name": "autocompletion.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/autocompletion.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.006798",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Logic that powers autocompletion installed by ``pip completion``."
          }
        },
        {
          "name": "base_command.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/base_command.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.006967",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Base Command class, and related routines\"\"\""
          }
        },
        {
          "name": "main_parser.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/main_parser.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.007898",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"A single place for constructing and exposing the main parser"
          }
        },
        {
          "name": "progress_bars.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/progress_bars.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.008383",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        },
        {
          "name": "main.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/main.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.007533",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Primary application entrypoint."
          }
        },
        {
          "name": "req_command.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/cli/req_command.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.008624",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Contains the RequirementCommand base class."
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/operations",
      "files": [
        {
          "name": "check.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/check.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.017844",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Validation of dependencies of packages"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.017641",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "freeze.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/freeze.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018003",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import collections"
          }
        },
        {
          "name": "prepare.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/prepare.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018137",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Prepares a distribution for installation"
          }
        }
      ],
      "subfolders": [
        "install",
        "__pycache__",
        "build"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/operations/install",
      "files": [
        {
          "name": "editable_legacy.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/install/editable_legacy.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019233",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Legacy editable installation process, i.e. `setup.py develop`."
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/install/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019146",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"For modules related to installing packages."
          }
        },
        {
          "name": "wheel.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/install/wheel.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019358",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Support for installing and building the \"wheel\" binary package format."
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build",
      "files": [
        {
          "name": "wheel_legacy.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/wheel_legacy.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019022",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "metadata.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/metadata.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018558",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Metadata generation logic for source distributions."
          }
        },
        {
          "name": "metadata_editable.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/metadata_editable.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018650",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Metadata generation logic for source distributions."
          }
        },
        {
          "name": "wheel_editable.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/wheel_editable.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018929",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018252",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "metadata_legacy.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/metadata_legacy.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018753",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Metadata generation logic for legacy source distributions."
          }
        },
        {
          "name": "wheel.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/wheel.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018840",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "build_tracker.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/operations/build/build_tracker.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.018453",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import contextlib"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/req",
      "files": [
        {
          "name": "req_install.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/req/req_install.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019889",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        },
        {
          "name": "req_set.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/req/req_set.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019983",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "req_uninstall.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/req/req_uninstall.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020101",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/req/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019500",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import collections"
          }
        },
        {
          "name": "req_file.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/req/req_file.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019749",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "constructors.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/req/constructors.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.019621",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Backing implementation for InstallRequirement's various constructors"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/resolution",
      "files": [
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020191",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "base.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/base.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020291",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import Callable, List, Optional"
          }
        }
      ],
      "subfolders": [
        "legacy",
        "__pycache__",
        "resolvelib"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/legacy",
      "files": [
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/legacy/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020374",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "resolver.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/legacy/resolver.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020521",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Dependency Resolution"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib",
      "files": [
        {
          "name": "provider.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/provider.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.021415",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import collections"
          }
        },
        {
          "name": "found_candidates.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/found_candidates.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.021248",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Utilities to lazily create and visit candidates found."
          }
        },
        {
          "name": "reporter.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/reporter.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.021519",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from collections import defaultdict"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020620",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "(Empty file)"
          }
        },
        {
          "name": "factory.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/factory.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.021059",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import contextlib"
          }
        },
        {
          "name": "requirements.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/requirements.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.021704",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import Any, Optional"
          }
        },
        {
          "name": "resolver.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/resolver.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.021849",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import contextlib"
          }
        },
        {
          "name": "candidates.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/candidates.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020930",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "base.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/resolution/resolvelib/base.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.020811",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from dataclasses import dataclass"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/vcs",
      "files": [
        {
          "name": "git.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/vcs/git.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.025923",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/vcs/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.025468",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "# Expose a limited set of classes and functions so callers outside of"
          }
        },
        {
          "name": "mercurial.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/vcs/mercurial.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.026234",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import configparser"
          }
        },
        {
          "name": "bazaar.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/vcs/bazaar.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.025687",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "versioncontrol.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/vcs/versioncontrol.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.026638",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Handles all VCS (version control) support\"\"\""
          }
        },
        {
          "name": "subversion.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/vcs/subversion.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.026472",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/locations",
      "files": [
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/locations/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.013208",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        },
        {
          "name": "_sysconfig.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/locations/_sysconfig.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.013563",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "_distutils.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/locations/_distutils.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.013387",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Locations where we look for configs, install stuff, etc\"\"\""
          }
        },
        {
          "name": "base.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/locations/base.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.013655",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/index",
      "files": [
        {
          "name": "collector.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/index/collector.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.012703",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/index/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.012565",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Index interaction code"
          }
        },
        {
          "name": "sources.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/index/sources.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.013021",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "package_finder.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/index/package_finder.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.012866",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\"Routines related to PyPI, indexes\"\"\""
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/commands",
      "files": [
        {
          "name": "configuration.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/configuration.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.009916",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "show.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/show.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.011514",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "list.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/list.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.011156",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import json"
          }
        },
        {
          "name": "check.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/check.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.009557",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "index.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/index.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010755",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "completion.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/completion.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.009743",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import sys"
          }
        },
        {
          "name": "download.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/download.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010297",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "cache.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/cache.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.009447",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import os"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.009252",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "\"\"\""
          }
        },
        {
          "name": "hash.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/hash.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010481",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import hashlib"
          }
        },
        {
          "name": "inspect.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/inspect.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010855",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "debug.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/debug.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010105",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import locale"
          }
        },
        {
          "name": "uninstall.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/uninstall.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.011609",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "freeze.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/freeze.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010397",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import sys"
          }
        },
        {
          "name": "search.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/search.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.011338",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "install.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/install.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010988",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import errno"
          }
        },
        {
          "name": "help.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/help.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.010573",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from optparse import Values"
          }
        },
        {
          "name": "wheel.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/commands/wheel.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.011795",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/metadata",
      "files": [
        {
          "name": "_json.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/_json.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.013974",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "# Extracted from https://github.com/pfmoore/pkg_metadata"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.013869",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import contextlib"
          }
        },
        {
          "name": "pkg_resources.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/pkg_resources.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.014263",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import email.message"
          }
        },
        {
          "name": "base.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/base.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.014105",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import csv"
          }
        }
      ],
      "subfolders": [
        "__pycache__",
        "importlib"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib",
      "files": [
        {
          "name": "_dists.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/_dists.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.014637",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import email.message"
          }
        },
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.014400",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from ._dists import Distribution"
          }
        },
        {
          "name": "_compat.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/_compat.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.014492",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import importlib.metadata"
          }
        },
        {
          "name": "_envs.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/metadata/importlib/_envs.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.014814",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import functools"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": ".venv/lib/python3.13/site-packages/pip/_internal/distributions",
      "files": [
        {
          "name": "__init__.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/distributions/__init__.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.011945",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from pip._internal.distributions.base import AbstractDistribution"
          }
        },
        {
          "name": "sdist.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/distributions/sdist.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.012319",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import logging"
          }
        },
        {
          "name": "installed.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/distributions/installed.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.012134",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import Optional"
          }
        },
        {
          "name": "base.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/distributions/base.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.012039",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "import abc"
          }
        },
        {
          "name": "wheel.py",
          "path": ".venv/lib/python3.13/site-packages/pip/_internal/distributions/wheel.py",
          "metadata": {
            "modified": "2025-03-11T21:00:55.012425",
            "type": ".py",
            "ai_description": "Python source code file",
            "extracted_description": "from typing import TYPE_CHECKING, Optional"
          }
        }
      ],
      "subfolders": [
        "__pycache__"
      ]
    },
    {
      "folder": "packages/data-schemas",
      "files": [
        {
          "name": "LICENSE",
          "path": "packages/data-schemas/LICENSE",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": "",
            "ai_description": "Project license terms",
            "extracted_description": "MIT License"
          }
        },
        {
          "name": "README.md",
          "path": "packages/data-schemas/README.md",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".md",
            "ai_description": "Project documentation and overview",
            "extracted_description": "# `@librechat/data-schemas`"
          }
        },
        {
          "name": "jest.config.mjs",
          "path": "packages/data-schemas/jest.config.mjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mjs",
            "ai_description": "File with .mjs extension",
            "extracted_description": "export default {"
          }
        },
        {
          "name": "rollup.config.js",
          "path": "packages/data-schemas/rollup.config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "import json from '@rollup/plugin-json';"
          }
        },
        {
          "name": "package.json",
          "path": "packages/data-schemas/package.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "Node.js package configuration and dependencies",
            "extracted_description": "{"
          }
        },
        {
          "name": "tsconfig.json",
          "path": "packages/data-schemas/tsconfig.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "TypeScript compiler configuration",
            "extracted_description": "{"
          }
        },
        {
          "name": "babel.config.cjs",
          "path": "packages/data-schemas/babel.config.cjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".cjs",
            "ai_description": "File with .cjs extension",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "tsconfig.spec.json",
          "path": "packages/data-schemas/tsconfig.spec.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": [
        "src"
      ]
    },
    {
      "folder": "packages/data-schemas/src",
      "files": [
        {
          "name": "index.ts",
          "path": "packages/data-schemas/src/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import actionSchema from './schema/action';"
          }
        }
      ],
      "subfolders": [
        "schema"
      ]
    },
    {
      "folder": "packages/data-schemas/src/schema",
      "files": [
        {
          "name": "project.ts",
          "path": "packages/data-schemas/src/schema/project.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "banner.ts",
          "path": "packages/data-schemas/src/schema/banner.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "balance.ts",
          "path": "packages/data-schemas/src/schema/balance.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "prompt.ts",
          "path": "packages/data-schemas/src/schema/prompt.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "defaults.ts",
          "path": "packages/data-schemas/src/schema/defaults.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema } from 'mongoose';"
          }
        },
        {
          "name": "agent.ts",
          "path": "packages/data-schemas/src/schema/agent.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "share.ts",
          "path": "packages/data-schemas/src/schema/share.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "file.ts",
          "path": "packages/data-schemas/src/schema/file.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "conversationTag.ts",
          "path": "packages/data-schemas/src/schema/conversationTag.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "action.ts",
          "path": "packages/data-schemas/src/schema/action.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "preset.ts",
          "path": "packages/data-schemas/src/schema/preset.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "role.ts",
          "path": "packages/data-schemas/src/schema/role.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "message.ts",
          "path": "packages/data-schemas/src/schema/message.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "session.ts",
          "path": "packages/data-schemas/src/schema/session.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "assistant.ts",
          "path": "packages/data-schemas/src/schema/assistant.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "toolCall.ts",
          "path": "packages/data-schemas/src/schema/toolCall.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "categories.ts",
          "path": "packages/data-schemas/src/schema/categories.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "transaction.ts",
          "path": "packages/data-schemas/src/schema/transaction.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "key.ts",
          "path": "packages/data-schemas/src/schema/key.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "promptGroup.ts",
          "path": "packages/data-schemas/src/schema/promptGroup.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "convo.ts",
          "path": "packages/data-schemas/src/schema/convo.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import mongoose, { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "pluginAuth.ts",
          "path": "packages/data-schemas/src/schema/pluginAuth.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document } from 'mongoose';"
          }
        },
        {
          "name": "token.ts",
          "path": "packages/data-schemas/src/schema/token.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document, Types } from 'mongoose';"
          }
        },
        {
          "name": "user.ts",
          "path": "packages/data-schemas/src/schema/user.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Schema, Document } from 'mongoose';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/mcp",
      "files": [
        {
          "name": "tsconfig-paths-bootstrap.mjs",
          "path": "packages/mcp/tsconfig-paths-bootstrap.mjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mjs",
            "ai_description": "File with .mjs extension",
            "extracted_description": "import path from 'path';"
          }
        },
        {
          "name": "jest.config.mjs",
          "path": "packages/mcp/jest.config.mjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mjs",
            "ai_description": "File with .mjs extension",
            "extracted_description": "export default {"
          }
        },
        {
          "name": "rollup.config.js",
          "path": "packages/mcp/rollup.config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// rollup.config.js"
          }
        },
        {
          "name": "package.json",
          "path": "packages/mcp/package.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "Node.js package configuration and dependencies",
            "extracted_description": "{"
          }
        },
        {
          "name": "tsconfig.json",
          "path": "packages/mcp/tsconfig.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "TypeScript compiler configuration",
            "extracted_description": "{"
          }
        },
        {
          "name": "babel.config.cjs",
          "path": "packages/mcp/babel.config.cjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".cjs",
            "ai_description": "File with .cjs extension",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "tsconfig.spec.json",
          "path": "packages/mcp/tsconfig.spec.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": [
        "src"
      ]
    },
    {
      "folder": "packages/mcp/src",
      "files": [
        {
          "name": "manager.ts",
          "path": "packages/mcp/src/manager.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { CallToolResultSchema } from '@modelcontextprotocol/sdk/types.js';"
          }
        },
        {
          "name": "enum.ts",
          "path": "packages/mcp/src/enum.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export enum CONSTANTS {"
          }
        },
        {
          "name": "connection.ts",
          "path": "packages/mcp/src/connection.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EventEmitter } from 'events';"
          }
        },
        {
          "name": "parsers.ts",
          "path": "packages/mcp/src/parsers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type * as t from './types/mcp';"
          }
        },
        {
          "name": "index.ts",
          "path": "packages/mcp/src/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* MCP */"
          }
        }
      ],
      "subfolders": [
        "demo",
        "types",
        "examples",
        "flow"
      ]
    },
    {
      "folder": "packages/mcp/src/demo",
      "files": [
        {
          "name": "servers.ts",
          "path": "packages/mcp/src/demo/servers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// server.ts"
          }
        },
        {
          "name": "everything.ts",
          "path": "packages/mcp/src/demo/everything.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import express from 'express';"
          }
        },
        {
          "name": "filesystem.ts",
          "path": "packages/mcp/src/demo/filesystem.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import express from 'express';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/mcp/src/types",
      "files": [
        {
          "name": "mcp.ts",
          "path": "packages/mcp/src/types/mcp.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/mcp/src/examples",
      "files": [
        {
          "name": "filesystem.ts",
          "path": "packages/mcp/src/examples/filesystem.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "#!/usr/bin/env node"
          }
        }
      ],
      "subfolders": [
        "everything"
      ]
    },
    {
      "folder": "packages/mcp/src/examples/everything",
      "files": [
        {
          "name": "sse.ts",
          "path": "packages/mcp/src/examples/everything/sse.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { SSEServerTransport } from '@modelcontextprotocol/sdk/server/sse.js';"
          }
        },
        {
          "name": "everything.ts",
          "path": "packages/mcp/src/examples/everything/everything.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Server } from '@modelcontextprotocol/sdk/server/index.js';"
          }
        },
        {
          "name": "index.ts",
          "path": "packages/mcp/src/examples/everything/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "#!/usr/bin/env node"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/mcp/src/flow",
      "files": [
        {
          "name": "manager.ts",
          "path": "packages/mcp/src/flow/manager.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import Keyv from 'keyv';"
          }
        },
        {
          "name": "manager.spec.ts",
          "path": "packages/mcp/src/flow/manager.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { FlowStateManager } from './manager';"
          }
        },
        {
          "name": "types.ts",
          "path": "packages/mcp/src/flow/types.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { Logger } from 'winston';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/data-provider",
      "files": [
        {
          "name": "server-rollup.config.js",
          "path": "packages/data-provider/server-rollup.config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "import path from 'path';"
          }
        },
        {
          "name": "check_updates.sh",
          "path": "packages/data-provider/check_updates.sh",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".sh",
            "ai_description": "Shell script file",
            "extracted_description": "#!/bin/bash"
          }
        },
        {
          "name": "jest.config.js",
          "path": "packages/data-provider/jest.config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "rollup.config.js",
          "path": "packages/data-provider/rollup.config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "import typescript from 'rollup-plugin-typescript2';"
          }
        },
        {
          "name": "babel.config.js",
          "path": "packages/data-provider/babel.config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "package.json",
          "path": "packages/data-provider/package.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "Node.js package configuration and dependencies",
            "extracted_description": "{"
          }
        },
        {
          "name": "tsconfig.json",
          "path": "packages/data-provider/tsconfig.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "TypeScript compiler configuration",
            "extracted_description": "{"
          }
        },
        {
          "name": "tsconfig.spec.json",
          "path": "packages/data-provider/tsconfig.spec.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": [
        "react-query",
        "specs",
        "src"
      ]
    },
    {
      "folder": "packages/data-provider/react-query",
      "files": [
        {
          "name": "package.json",
          "path": "packages/data-provider/react-query/package.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "Node.js package configuration and dependencies",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/data-provider/specs",
      "files": [
        {
          "name": "utils.spec.ts",
          "path": "packages/data-provider/specs/utils.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { extractEnvVariable } from '../src/utils';"
          }
        },
        {
          "name": "mcp.spec.ts",
          "path": "packages/data-provider/specs/mcp.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { StdioOptionsSchema } from '../src/mcp';"
          }
        },
        {
          "name": "openapiSpecs.ts",
          "path": "packages/data-provider/specs/openapiSpecs.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { OpenAPIV3 } from 'openapi-types';"
          }
        },
        {
          "name": "filetypes.spec.ts",
          "path": "packages/data-provider/specs/filetypes.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "generate.spec.ts",
          "path": "packages/data-provider/specs/generate.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* eslint-disable jest/no-conditional-expect */"
          }
        },
        {
          "name": "actions.spec.ts",
          "path": "packages/data-provider/specs/actions.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import axios from 'axios';"
          }
        },
        {
          "name": "azure.spec.ts",
          "path": "packages/data-provider/specs/azure.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { TAzureGroups } from '../src/config';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/data-provider/src",
      "files": [
        {
          "name": "bedrock.ts",
          "path": "packages/data-provider/src/bedrock.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "artifacts.ts",
          "path": "packages/data-provider/src/artifacts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export enum ArtifactModes {"
          }
        },
        {
          "name": "file-config.ts",
          "path": "packages/data-provider/src/file-config.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* eslint-disable max-len */"
          }
        },
        {
          "name": "createPayload.ts",
          "path": "packages/data-provider/src/createPayload.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type * as t from './types';"
          }
        },
        {
          "name": "mcp.ts",
          "path": "packages/data-provider/src/mcp.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "schemas.ts",
          "path": "packages/data-provider/src/schemas.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "utils.ts",
          "path": "packages/data-provider/src/utils.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export const envVarRegex = /^\\${(.+)}$/;"
          }
        },
        {
          "name": "ocr.ts",
          "path": "packages/data-provider/src/ocr.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { TCustomConfig } from '../src/config';"
          }
        },
        {
          "name": "types.ts",
          "path": "packages/data-provider/src/types.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type OpenAI from 'openai';"
          }
        },
        {
          "name": "parsers.ts",
          "path": "packages/data-provider/src/parsers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { ZodIssue } from 'zod';"
          }
        },
        {
          "name": "keys.ts",
          "path": "packages/data-provider/src/keys.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export enum QueryKeys {"
          }
        },
        {
          "name": "request.ts",
          "path": "packages/data-provider/src/request.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* eslint-disable @typescript-eslint/no-explicit-any */"
          }
        },
        {
          "name": "actions.ts",
          "path": "packages/data-provider/src/actions.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "azure.ts",
          "path": "packages/data-provider/src/azure.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { ZodError } from 'zod';"
          }
        },
        {
          "name": "generate.ts",
          "path": "packages/data-provider/src/generate.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';"
          }
        },
        {
          "name": "roles.ts",
          "path": "packages/data-provider/src/roles.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "data-service.ts",
          "path": "packages/data-provider/src/data-service.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { AxiosResponse } from 'axios';"
          }
        },
        {
          "name": "zod.spec.ts",
          "path": "packages/data-provider/src/zod.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* eslint-disable jest/no-conditional-expect */"
          }
        },
        {
          "name": "index.ts",
          "path": "packages/data-provider/src/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* config */"
          }
        },
        {
          "name": "models.ts",
          "path": "packages/data-provider/src/models.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "headers-helpers.ts",
          "path": "packages/data-provider/src/headers-helpers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import axios from 'axios';"
          }
        },
        {
          "name": "config.ts",
          "path": "packages/data-provider/src/config.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "zod.ts",
          "path": "packages/data-provider/src/zod.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { z } from 'zod';"
          }
        },
        {
          "name": "api-endpoints.ts",
          "path": "packages/data-provider/src/api-endpoints.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { AssistantsEndpoint } from './schemas';"
          }
        }
      ],
      "subfolders": [
        "types",
        "react-query"
      ]
    },
    {
      "folder": "packages/data-provider/src/types",
      "files": [
        {
          "name": "runs.ts",
          "path": "packages/data-provider/src/types/runs.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export enum ContentTypes {"
          }
        },
        {
          "name": "queries.ts",
          "path": "packages/data-provider/src/types/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { InfiniteData } from '@tanstack/react-query';"
          }
        },
        {
          "name": "agents.ts",
          "path": "packages/data-provider/src/types/agents.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* eslint-disable @typescript-eslint/no-namespace */"
          }
        },
        {
          "name": "mutations.ts",
          "path": "packages/data-provider/src/types/mutations.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import * as types from '../types';"
          }
        },
        {
          "name": "assistants.ts",
          "path": "packages/data-provider/src/types/assistants.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { OpenAPIV3 } from 'openapi-types';"
          }
        },
        {
          "name": "files.ts",
          "path": "packages/data-provider/src/types/files.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EToolResources } from './assistants';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "packages/data-provider/src/react-query",
      "files": [
        {
          "name": "react-query-service.ts",
          "path": "packages/data-provider/src/react-query/react-query-service.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';"
          }
        },
        {
          "name": "index.ts",
          "path": "packages/data-provider/src/react-query/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './react-query-service';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api",
      "files": [
        {
          "name": "jsconfig.json",
          "path": "api/jsconfig.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "jest.config.js",
          "path": "api/jest.config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "package.json",
          "path": "api/package.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "Node.js package configuration and dependencies",
            "extracted_description": "{"
          }
        },
        {
          "name": "typedefs.js",
          "path": "api/typedefs.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        }
      ],
      "subfolders": [
        "app",
        "cache",
        "test",
        "config",
        "strategies",
        "server",
        "utils",
        "models",
        "lib"
      ]
    },
    {
      "folder": "api/app",
      "files": [
        {
          "name": "index.js",
          "path": "api/app/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const clients = require('./clients');"
          }
        }
      ],
      "subfolders": [
        "clients"
      ]
    },
    {
      "folder": "api/app/clients",
      "files": [
        {
          "name": "OllamaClient.js",
          "path": "api/app/clients/OllamaClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "AnthropicClient.js",
          "path": "api/app/clients/AnthropicClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Anthropic = require('@anthropic-ai/sdk');"
          }
        },
        {
          "name": "GoogleClient.js",
          "path": "api/app/clients/GoogleClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { google } = require('googleapis');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const ChatGPTClient = require('./ChatGPTClient');"
          }
        },
        {
          "name": "OpenAIClient.js",
          "path": "api/app/clients/OpenAIClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const OpenAI = require('openai');"
          }
        },
        {
          "name": "PluginsClient.js",
          "path": "api/app/clients/PluginsClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const OpenAIClient = require('./OpenAIClient');"
          }
        },
        {
          "name": "BaseClient.js",
          "path": "api/app/clients/BaseClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crypto = require('crypto');"
          }
        },
        {
          "name": "ChatGPTClient.js",
          "path": "api/app/clients/ChatGPTClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Keyv = require('keyv');"
          }
        },
        {
          "name": "TextStream.js",
          "path": "api/app/clients/TextStream.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Readable } = require('stream');"
          }
        }
      ],
      "subfolders": [
        "tools",
        "llm",
        "memory",
        "callbacks",
        "specs",
        "agents",
        "document",
        "output_parsers",
        "prompts",
        "chains"
      ]
    },
    {
      "folder": "api/app/clients/tools",
      "files": [
        {
          "name": "index.js",
          "path": "api/app/clients/tools/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const availableTools = require('./manifest.json');"
          }
        },
        {
          "name": "manifest.json",
          "path": "api/app/clients/tools/manifest.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "["
          }
        }
      ],
      "subfolders": [
        "dynamic",
        "util",
        ".well-known",
        "structured"
      ]
    },
    {
      "folder": "api/app/clients/tools/dynamic",
      "files": [
        {
          "name": "OpenAPIPlugin.spec.js",
          "path": "api/app/clients/tools/dynamic/OpenAPIPlugin.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "OpenAPIPlugin.js",
          "path": "api/app/clients/tools/dynamic/OpenAPIPlugin.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "require('dotenv').config();"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/tools/util",
      "files": [
        {
          "name": "loadSpecs.spec.js",
          "path": "api/app/clients/tools/util/loadSpecs.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "addOpenAPISpecs.spec.js",
          "path": "api/app/clients/tools/util/addOpenAPISpecs.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { addOpenAPISpecs, transformSpec } = require('./addOpenAPISpecs');"
          }
        },
        {
          "name": "handleOpenAIErrors.js",
          "path": "api/app/clients/tools/util/handleOpenAIErrors.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const OpenAI = require('openai');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/tools/util/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { validateTools, loadTools } = require('./handleTools');"
          }
        },
        {
          "name": "loadSpecs.js",
          "path": "api/app/clients/tools/util/loadSpecs.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "handleTools.test.js",
          "path": "api/app/clients/tools/util/handleTools.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mockUser = {"
          }
        },
        {
          "name": "fileSearch.js",
          "path": "api/app/clients/tools/util/fileSearch.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "addOpenAPISpecs.js",
          "path": "api/app/clients/tools/util/addOpenAPISpecs.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { loadSpecs } = require('./loadSpecs');"
          }
        },
        {
          "name": "handleTools.js",
          "path": "api/app/clients/tools/util/handleTools.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Tools, Constants } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/tools/.well-known",
      "files": [
        {
          "name": "askyourpdf.json",
          "path": "api/app/clients/tools/.well-known/askyourpdf.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "drink_maestro.json",
          "path": "api/app/clients/tools/.well-known/drink_maestro.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "Ai_PDF.json",
          "path": "api/app/clients/tools/.well-known/Ai_PDF.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "uberchord.json",
          "path": "api/app/clients/tools/.well-known/uberchord.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "web_search.json",
          "path": "api/app/clients/tools/.well-known/web_search.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "DreamInterpreter.json",
          "path": "api/app/clients/tools/.well-known/DreamInterpreter.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "Dr_Thoths_Tarot.json",
          "path": "api/app/clients/tools/.well-known/Dr_Thoths_Tarot.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "image_prompt_enhancer.json",
          "path": "api/app/clients/tools/.well-known/image_prompt_enhancer.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "earthImagesAndVisualizations.json",
          "path": "api/app/clients/tools/.well-known/earthImagesAndVisualizations.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "qrCodes.json",
          "path": "api/app/clients/tools/.well-known/qrCodes.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "BrowserOp.json",
          "path": "api/app/clients/tools/.well-known/BrowserOp.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "VoxScript.json",
          "path": "api/app/clients/tools/.well-known/VoxScript.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "scholarai.json",
          "path": "api/app/clients/tools/.well-known/scholarai.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": [
        "openapi",
        "has-issues"
      ]
    },
    {
      "folder": "api/app/clients/tools/.well-known/openapi",
      "files": [
        {
          "name": "askyourpdf.yaml",
          "path": "api/app/clients/tools/.well-known/openapi/askyourpdf.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "openapi: 3.0.2"
          }
        },
        {
          "name": "scholarai.yaml",
          "path": "api/app/clients/tools/.well-known/openapi/scholarai.yaml",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".yaml",
            "ai_description": "YAML configuration file",
            "extracted_description": "openapi: 3.0.1"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/tools/.well-known/has-issues",
      "files": [
        {
          "name": "scholarly_graph_link.json",
          "path": "api/app/clients/tools/.well-known/has-issues/scholarly_graph_link.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "web_pilot.json",
          "path": "api/app/clients/tools/.well-known/has-issues/web_pilot.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/tools/structured",
      "files": [
        {
          "name": "StableDiffusion.js",
          "path": "api/app/clients/tools/structured/StableDiffusion.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// Generates image using stable diffusion webui's api (automatic1111)"
          }
        },
        {
          "name": "OpenWeather.js",
          "path": "api/app/clients/tools/structured/OpenWeather.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Tool } = require('@langchain/core/tools');"
          }
        },
        {
          "name": "TraversaalSearch.js",
          "path": "api/app/clients/tools/structured/TraversaalSearch.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "Wolfram.js",
          "path": "api/app/clients/tools/structured/Wolfram.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/* eslint-disable no-useless-escape */"
          }
        },
        {
          "name": "FluxAPI.js",
          "path": "api/app/clients/tools/structured/FluxAPI.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "credentials.js",
          "path": "api/app/clients/tools/structured/credentials.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getEnvironmentVariable } = require('@langchain/core/utils/env');"
          }
        },
        {
          "name": "TavilySearchResults.js",
          "path": "api/app/clients/tools/structured/TavilySearchResults.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "AzureAISearch.js",
          "path": "api/app/clients/tools/structured/AzureAISearch.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "YouTube.js",
          "path": "api/app/clients/tools/structured/YouTube.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "DALLE3.js",
          "path": "api/app/clients/tools/structured/DALLE3.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "GoogleSearch.js",
          "path": "api/app/clients/tools/structured/GoogleSearch.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "TavilySearch.js",
          "path": "api/app/clients/tools/structured/TavilySearch.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        }
      ],
      "subfolders": [
        "specs"
      ]
    },
    {
      "folder": "api/app/clients/tools/structured/specs",
      "files": [
        {
          "name": "DALLE3.spec.js",
          "path": "api/app/clients/tools/structured/specs/DALLE3.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const OpenAI = require('openai');"
          }
        },
        {
          "name": "openWeather.integration.test.js",
          "path": "api/app/clients/tools/structured/specs/openWeather.integration.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// __tests__/openWeather.integration.test.js"
          }
        },
        {
          "name": "GoogleSearch.spec.js",
          "path": "api/app/clients/tools/structured/specs/GoogleSearch.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const GoogleSearch = require('../GoogleSearch');"
          }
        },
        {
          "name": "openweather.test.js",
          "path": "api/app/clients/tools/structured/specs/openweather.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// __tests__/openweather.test.js"
          }
        },
        {
          "name": "TavilySearchResults.spec.js",
          "path": "api/app/clients/tools/structured/specs/TavilySearchResults.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const TavilySearchResults = require('../TavilySearchResults');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/llm",
      "files": [
        {
          "name": "createCoherePayload.js",
          "path": "api/app/clients/llm/createCoherePayload.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CohereConstants } = require('librechat-data-provider');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/llm/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const createLLM = require('./createLLM');"
          }
        },
        {
          "name": "createLLM.js",
          "path": "api/app/clients/llm/createLLM.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ChatOpenAI } = require('@langchain/openai');"
          }
        },
        {
          "name": "RunManager.js",
          "path": "api/app/clients/llm/RunManager.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { createStartHandler } = require('~/app/clients/callbacks');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/memory",
      "files": [
        {
          "name": "index.js",
          "path": "api/app/clients/memory/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const summaryBuffer = require('./summaryBuffer');"
          }
        },
        {
          "name": "summaryBuffer.js",
          "path": "api/app/clients/memory/summaryBuffer.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ConversationSummaryBufferMemory, ChatMessageHistory } = require('langchain/memory');"
          }
        },
        {
          "name": "example.js",
          "path": "api/app/clients/memory/example.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "["
          }
        },
        {
          "name": "summaryBuffer.demo.js",
          "path": "api/app/clients/memory/summaryBuffer.demo.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "require('dotenv').config();"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/callbacks",
      "files": [
        {
          "name": "createStartHandler.js",
          "path": "api/app/clients/callbacks/createStartHandler.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { promptTokensEstimate } = require('openai-chat-tokens');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/callbacks/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const createStartHandler = require('./createStartHandler');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/specs",
      "files": [
        {
          "name": "FakeClient.js",
          "path": "api/app/clients/specs/FakeClient.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const BaseClient = require('../BaseClient');"
          }
        },
        {
          "name": "AnthropicClient.test.js",
          "path": "api/app/clients/specs/AnthropicClient.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { SplitStreamHandler } = require('@librechat/agents');"
          }
        },
        {
          "name": "OpenAIClient.test.js",
          "path": "api/app/clients/specs/OpenAIClient.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "jest.mock('~/cache/getLogStores');"
          }
        },
        {
          "name": "PluginsClient.test.js",
          "path": "api/app/clients/specs/PluginsClient.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crypto = require('crypto');"
          }
        },
        {
          "name": "OpenAIClient.tokens.js",
          "path": "api/app/clients/specs/OpenAIClient.tokens.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/*"
          }
        },
        {
          "name": "BaseClient.test.js",
          "path": "api/app/clients/specs/BaseClient.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Constants } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/agents",
      "files": [
        {
          "name": "index.js",
          "path": "api/app/clients/agents/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const initializeCustomAgent = require('./CustomAgent/initializeCustomAgent');"
          }
        }
      ],
      "subfolders": [
        "CustomAgent",
        "Functions"
      ]
    },
    {
      "folder": "api/app/clients/agents/CustomAgent",
      "files": [
        {
          "name": "instructions.js",
          "path": "api/app/clients/agents/CustomAgent/instructions.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "CustomAgent.js",
          "path": "api/app/clients/agents/CustomAgent/CustomAgent.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ZeroShotAgent } = require('langchain/agents');"
          }
        },
        {
          "name": "outputParser.js",
          "path": "api/app/clients/agents/CustomAgent/outputParser.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ZeroShotAgentOutputParser } = require('langchain/agents');"
          }
        },
        {
          "name": "initializeCustomAgent.js",
          "path": "api/app/clients/agents/CustomAgent/initializeCustomAgent.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const CustomAgent = require('./CustomAgent');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/agents/Functions",
      "files": [
        {
          "name": "addToolDescriptions.js",
          "path": "api/app/clients/agents/Functions/addToolDescriptions.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addToolDescriptions = (prefix, tools) => {"
          }
        },
        {
          "name": "initializeFunctionsAgent.js",
          "path": "api/app/clients/agents/Functions/initializeFunctionsAgent.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { initializeAgentExecutorWithOptions } = require('langchain/agents');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/document",
      "files": [
        {
          "name": "tokenSplit.spec.js",
          "path": "api/app/clients/document/tokenSplit.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const tokenSplit = require('./tokenSplit');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/document/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const tokenSplit = require('./tokenSplit');"
          }
        },
        {
          "name": "tokenSplit.js",
          "path": "api/app/clients/document/tokenSplit.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { TokenTextSplitter } = require('@langchain/textsplitters');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/output_parsers",
      "files": [
        {
          "name": "addImages.spec.js",
          "path": "api/app/clients/output_parsers/addImages.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "let addImages = require('./addImages');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/output_parsers/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addImages = require('./addImages');"
          }
        },
        {
          "name": "handleOutputs.js",
          "path": "api/app/clients/output_parsers/handleOutputs.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { instructions, imageInstructions, errorInstructions } = require('../prompts');"
          }
        },
        {
          "name": "addImages.js",
          "path": "api/app/clients/output_parsers/addImages.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { logger } = require('~/config');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/prompts",
      "files": [
        {
          "name": "instructions.js",
          "path": "api/app/clients/prompts/instructions.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "addCacheControl.js",
          "path": "api/app/clients/prompts/addCacheControl.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "summaryPrompts.js",
          "path": "api/app/clients/prompts/summaryPrompts.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { PromptTemplate } = require('@langchain/core/prompts');"
          }
        },
        {
          "name": "titlePrompts.js",
          "path": "api/app/clients/prompts/titlePrompts.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "truncate.js",
          "path": "api/app/clients/prompts/truncate.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const MAX_CHAR = 255;"
          }
        },
        {
          "name": "formatGoogleInputs.spec.js",
          "path": "api/app/clients/prompts/formatGoogleInputs.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const formatGoogleInputs = require('./formatGoogleInputs');"
          }
        },
        {
          "name": "createContextHandlers.js",
          "path": "api/app/clients/prompts/createContextHandlers.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/prompts/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addCacheControl = require('./addCacheControl');"
          }
        },
        {
          "name": "formatMessages.js",
          "path": "api/app/clients/prompts/formatMessages.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ToolMessage } = require('@langchain/core/messages');"
          }
        },
        {
          "name": "artifacts.js",
          "path": "api/app/clients/prompts/artifacts.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const dedent = require('dedent');"
          }
        },
        {
          "name": "titlePrompts.spec.js",
          "path": "api/app/clients/prompts/titlePrompts.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { parseParamFromPrompt } = require('./titlePrompts');"
          }
        },
        {
          "name": "addCacheControl.spec.js",
          "path": "api/app/clients/prompts/addCacheControl.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addCacheControl = require('./addCacheControl');"
          }
        },
        {
          "name": "formatAgentMessages.spec.js",
          "path": "api/app/clients/prompts/formatAgentMessages.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ToolMessage } = require('@langchain/core/messages');"
          }
        },
        {
          "name": "createVisionPrompt.js",
          "path": "api/app/clients/prompts/createVisionPrompt.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "formatGoogleInputs.js",
          "path": "api/app/clients/prompts/formatGoogleInputs.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "handleInputs.js",
          "path": "api/app/clients/prompts/handleInputs.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// Escaping curly braces is necessary for LangChain to correctly process the prompt"
          }
        },
        {
          "name": "formatMessages.spec.js",
          "path": "api/app/clients/prompts/formatMessages.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Constants } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": [
        "shadcn-docs"
      ]
    },
    {
      "folder": "api/app/clients/prompts/shadcn-docs",
      "files": [
        {
          "name": "generate.js",
          "path": "api/app/clients/prompts/shadcn-docs/generate.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const dedent = require('dedent');"
          }
        },
        {
          "name": "components.js",
          "path": "api/app/clients/prompts/shadcn-docs/components.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// Essential Components"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/app/clients/chains",
      "files": [
        {
          "name": "predictNewSummary.js",
          "path": "api/app/clients/chains/predictNewSummary.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { LLMChain } = require('langchain/chains');"
          }
        },
        {
          "name": "runTitleChain.js",
          "path": "api/app/clients/chains/runTitleChain.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "index.js",
          "path": "api/app/clients/chains/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const runTitleChain = require('./runTitleChain');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/cache",
      "files": [
        {
          "name": "logViolation.js",
          "path": "api/cache/logViolation.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEnabled } = require('~/server/utils');"
          }
        },
        {
          "name": "getLogStores.js",
          "path": "api/cache/getLogStores.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Keyv = require('keyv');"
          }
        },
        {
          "name": "keyvFiles.js",
          "path": "api/cache/keyvFiles.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { KeyvFile } = require('keyv-file');"
          }
        },
        {
          "name": "index.js",
          "path": "api/cache/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const keyvFiles = require('./keyvFiles');"
          }
        },
        {
          "name": "keyvMongo.js",
          "path": "api/cache/keyvMongo.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const KeyvMongo = require('@keyv/mongo');"
          }
        },
        {
          "name": "redis.js",
          "path": "api/cache/redis.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Redis = require('ioredis');"
          }
        },
        {
          "name": "clearPendingReq.js",
          "path": "api/cache/clearPendingReq.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const getLogStores = require('./getLogStores');"
          }
        },
        {
          "name": "keyvRedis.js",
          "path": "api/cache/keyvRedis.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "banViolation.js",
          "path": "api/cache/banViolation.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ViolationTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "banViolation.spec.js",
          "path": "api/cache/banViolation.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const banViolation = require('./banViolation');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/test",
      "files": [
        {
          "name": "jestSetup.js",
          "path": "api/test/jestSetup.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// See .env.test.example for an example of the '.env.test' file."
          }
        },
        {
          "name": ".env.test.example",
          "path": "api/test/.env.test.example",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".example",
            "ai_description": "File with .example extension",
            "extracted_description": "# Test DB URI. You can use your actual MONGO_URI if you don't mind it potentially including test dat"
          }
        }
      ],
      "subfolders": [
        "__mocks__"
      ]
    },
    {
      "folder": "api/test/__mocks__",
      "files": [
        {
          "name": "logger.js",
          "path": "api/test/__mocks__/logger.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "jest.mock('winston', () => {"
          }
        },
        {
          "name": "fetchEventSource.js",
          "path": "api/test/__mocks__/fetchEventSource.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "jest.mock('@waylaidwanderer/fetch-event-source', () => ({"
          }
        },
        {
          "name": "KeyvMongo.js",
          "path": "api/test/__mocks__/KeyvMongo.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mockGet = jest.fn();"
          }
        },
        {
          "name": "auth.mock.json",
          "path": "api/test/__mocks__/auth.mock.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/config",
      "files": [
        {
          "name": "parsers.js",
          "path": "api/config/parsers.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { klona } = require('klona');"
          }
        },
        {
          "name": "index.js",
          "path": "api/config/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "paths.js",
          "path": "api/config/paths.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "winston.js",
          "path": "api/config/winston.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "index.spec.js",
          "path": "api/config/index.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "meiliLogger.js",
          "path": "api/config/meiliLogger.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/strategies",
      "files": [
        {
          "name": "openidStrategy.js",
          "path": "api/strategies/openidStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fetch = require('node-fetch');"
          }
        },
        {
          "name": "validators.js",
          "path": "api/strategies/validators.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "localStrategy.js",
          "path": "api/strategies/localStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { errorsToString } = require('librechat-data-provider');"
          }
        },
        {
          "name": "appleStrategy.test.js",
          "path": "api/strategies/appleStrategy.test.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "githubStrategy.js",
          "path": "api/strategies/githubStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Strategy: GitHubStrategy } = require('passport-github2');"
          }
        },
        {
          "name": "socialLogin.js",
          "path": "api/strategies/socialLogin.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { createSocialUser, handleExistingUser } = require('./process');"
          }
        },
        {
          "name": "appleStrategy.js",
          "path": "api/strategies/appleStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const socialLogin = require('./socialLogin');"
          }
        },
        {
          "name": "facebookStrategy.js",
          "path": "api/strategies/facebookStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const FacebookStrategy = require('passport-facebook').Strategy;"
          }
        },
        {
          "name": "index.js",
          "path": "api/strategies/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const appleLogin = require('./appleStrategy');"
          }
        },
        {
          "name": "jwtStrategy.js",
          "path": "api/strategies/jwtStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { SystemRoles } = require('librechat-data-provider');"
          }
        },
        {
          "name": "ldapStrategy.js",
          "path": "api/strategies/ldapStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "openidStrategy.spec.js",
          "path": "api/strategies/openidStrategy.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fetch = require('node-fetch');"
          }
        },
        {
          "name": "discordStrategy.js",
          "path": "api/strategies/discordStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Strategy: DiscordStrategy } = require('passport-discord');"
          }
        },
        {
          "name": "validators.spec.js",
          "path": "api/strategies/validators.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// file deepcode ignore NoHardcodedPasswords: No hard-coded passwords in tests"
          }
        },
        {
          "name": "googleStrategy.js",
          "path": "api/strategies/googleStrategy.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Strategy: GoogleStrategy } = require('passport-google-oauth20');"
          }
        },
        {
          "name": "process.js",
          "path": "api/strategies/process.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { FileSources } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "require('dotenv').config();"
          }
        },
        {
          "name": "socialLogins.js",
          "path": "api/server/socialLogins.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Redis = require('ioredis');"
          }
        }
      ],
      "subfolders": [
        "middleware",
        "utils",
        "controllers",
        "routes",
        "services"
      ]
    },
    {
      "folder": "api/server/middleware",
      "files": [
        {
          "name": "abortControllers.js",
          "path": "api/server/middleware/abortControllers.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// abortControllers.js"
          }
        },
        {
          "name": "validateRegistration.js",
          "path": "api/server/middleware/validateRegistration.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEnabled } = require('~/server/utils');"
          }
        },
        {
          "name": "checkBan.js",
          "path": "api/server/middleware/checkBan.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Keyv = require('keyv');"
          }
        },
        {
          "name": "validateModel.js",
          "path": "api/server/middleware/validateModel.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ViolationTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "denyRequest.js",
          "path": "api/server/middleware/denyRequest.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crypto = require('crypto');"
          }
        },
        {
          "name": "requireLdapAuth.js",
          "path": "api/server/middleware/requireLdapAuth.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const passport = require('passport');"
          }
        },
        {
          "name": "setHeaders.js",
          "path": "api/server/middleware/setHeaders.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "function setHeaders(req, res, next) {"
          }
        },
        {
          "name": "noIndex.js",
          "path": "api/server/middleware/noIndex.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const noIndex = (req, res, next) => {"
          }
        },
        {
          "name": "validatePasswordReset.js",
          "path": "api/server/middleware/validatePasswordReset.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEnabled } = require('~/server/utils');"
          }
        },
        {
          "name": "canDeleteAccount.js",
          "path": "api/server/middleware/canDeleteAccount.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { SystemRoles } = require('librechat-data-provider');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/middleware/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const validatePasswordReset = require('./validatePasswordReset');"
          }
        },
        {
          "name": "validateEndpoint.js",
          "path": "api/server/middleware/validateEndpoint.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { handleError } = require('../utils');"
          }
        },
        {
          "name": "validateMessageReq.js",
          "path": "api/server/middleware/validateMessageReq.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getConvo } = require('~/models');"
          }
        },
        {
          "name": "concurrentLimiter.js",
          "path": "api/server/middleware/concurrentLimiter.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Time } = require('librechat-data-provider');"
          }
        },
        {
          "name": "requireJwtAuth.js",
          "path": "api/server/middleware/requireJwtAuth.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const passport = require('passport');"
          }
        },
        {
          "name": "buildEndpointOption.js",
          "path": "api/server/middleware/buildEndpointOption.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { parseCompactConvo, EModelEndpoint, isAgentsEndpoint } = require('librechat-data-provider');"
          }
        },
        {
          "name": "validateImageRequest.js",
          "path": "api/server/middleware/validateImageRequest.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const cookies = require('cookie');"
          }
        },
        {
          "name": "abortRun.js",
          "path": "api/server/middleware/abortRun.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys, RunStatus, isUUID } = require('librechat-data-provider');"
          }
        },
        {
          "name": "optionalJwtAuth.js",
          "path": "api/server/middleware/optionalJwtAuth.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const passport = require('passport');"
          }
        },
        {
          "name": "checkDomainAllowed.js",
          "path": "api/server/middleware/checkDomainAllowed.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEmailDomainAllowed } = require('~/server/services/domains');"
          }
        },
        {
          "name": "abortMiddleware.js",
          "path": "api/server/middleware/abortMiddleware.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isAssistantsEndpoint, ErrorTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "requireLocalAuth.js",
          "path": "api/server/middleware/requireLocalAuth.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const passport = require('passport');"
          }
        },
        {
          "name": "uaParser.js",
          "path": "api/server/middleware/uaParser.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const uap = require('ua-parser-js');"
          }
        },
        {
          "name": "moderateText.js",
          "path": "api/server/middleware/moderateText.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "checkInviteUser.js",
          "path": "api/server/middleware/checkInviteUser.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getInvite } = require('~/models/inviteUser');"
          }
        }
      ],
      "subfolders": [
        "validate",
        "assistants",
        "limiters",
        "spec",
        "roles"
      ]
    },
    {
      "folder": "api/server/middleware/validate",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/middleware/validate/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const validateConvoAccess = require('./convoAccess');"
          }
        },
        {
          "name": "convoAccess.js",
          "path": "api/server/middleware/validate/convoAccess.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Constants, ViolationTypes, Time } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/middleware/assistants",
      "files": [
        {
          "name": "validateAuthor.js",
          "path": "api/server/middleware/assistants/validateAuthor.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { SystemRoles } = require('librechat-data-provider');"
          }
        },
        {
          "name": "validate.js",
          "path": "api/server/middleware/assistants/validate.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { v4 } = require('uuid');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/middleware/limiters",
      "files": [
        {
          "name": "verifyEmailLimiter.js",
          "path": "api/server/middleware/limiters/verifyEmailLimiter.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "importLimiters.js",
          "path": "api/server/middleware/limiters/importLimiters.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "uploadLimiters.js",
          "path": "api/server/middleware/limiters/uploadLimiters.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "registerLimiter.js",
          "path": "api/server/middleware/limiters/registerLimiter.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/middleware/limiters/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const createTTSLimiters = require('./ttsLimiters');"
          }
        },
        {
          "name": "messageLimiters.js",
          "path": "api/server/middleware/limiters/messageLimiters.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "toolCallLimiter.js",
          "path": "api/server/middleware/limiters/toolCallLimiter.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "sttLimiters.js",
          "path": "api/server/middleware/limiters/sttLimiters.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "ttsLimiters.js",
          "path": "api/server/middleware/limiters/ttsLimiters.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "resetPasswordLimiter.js",
          "path": "api/server/middleware/limiters/resetPasswordLimiter.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        },
        {
          "name": "loginLimiter.js",
          "path": "api/server/middleware/limiters/loginLimiter.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const rateLimit = require('express-rate-limit');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/middleware/spec",
      "files": [
        {
          "name": "validateImages.spec.js",
          "path": "api/server/middleware/spec/validateImages.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const jwt = require('jsonwebtoken');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/middleware/roles",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/middleware/roles/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const checkAdmin = require('./checkAdmin');"
          }
        },
        {
          "name": "checkAdmin.js",
          "path": "api/server/middleware/roles/checkAdmin.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { SystemRoles } = require('librechat-data-provider');"
          }
        },
        {
          "name": "generateCheckAccess.js",
          "path": "api/server/middleware/roles/generateCheckAccess.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getRoleByName } = require('~/models/Role');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/utils",
      "files": [
        {
          "name": "sendEmail.js",
          "path": "api/server/utils/sendEmail.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "handleText.spec.js",
          "path": "api/server/utils/handleText.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEnabled, sanitizeFilename } = require('./handleText');"
          }
        },
        {
          "name": "files.js",
          "path": "api/server/utils/files.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const sharp = require('sharp');"
          }
        },
        {
          "name": "queue.js",
          "path": "api/server/utils/queue.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "countTokens.js",
          "path": "api/server/utils/countTokens.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Tiktoken } = require('tiktoken/lite');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/utils/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const streamResponse = require('./streamResponse');"
          }
        },
        {
          "name": "handleText.js",
          "path": "api/server/utils/handleText.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "math.js",
          "path": "api/server/utils/math.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "streamResponse.js",
          "path": "api/server/utils/streamResponse.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crypto = require('crypto');"
          }
        },
        {
          "name": "removePorts.js",
          "path": "api/server/utils/removePorts.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "module.exports = (req) => req?.ip?.replace(/:\\d+[^:]*$/, '');"
          }
        },
        {
          "name": "staticCache.js",
          "path": "api/server/utils/staticCache.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const expressStaticGzip = require('express-static-gzip');"
          }
        },
        {
          "name": "crypto.js",
          "path": "api/server/utils/crypto.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "require('dotenv').config();"
          }
        }
      ],
      "subfolders": [
        "emails",
        "import"
      ]
    },
    {
      "folder": "api/server/utils/emails",
      "files": [
        {
          "name": "verifyEmail.handlebars",
          "path": "api/server/utils/emails/verifyEmail.handlebars",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".handlebars",
            "ai_description": "File with .handlebars extension",
            "extracted_description": "<html"
          }
        },
        {
          "name": "inviteUser.handlebars",
          "path": "api/server/utils/emails/inviteUser.handlebars",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".handlebars",
            "ai_description": "File with .handlebars extension",
            "extracted_description": "<html"
          }
        },
        {
          "name": "requestPasswordReset.handlebars",
          "path": "api/server/utils/emails/requestPasswordReset.handlebars",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".handlebars",
            "ai_description": "File with .handlebars extension",
            "extracted_description": "<html"
          }
        },
        {
          "name": "passwordReset.handlebars",
          "path": "api/server/utils/emails/passwordReset.handlebars",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".handlebars",
            "ai_description": "File with .handlebars extension",
            "extracted_description": "<html"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/utils/import",
      "files": [
        {
          "name": "fork.js",
          "path": "api/server/utils/import/fork.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { v4: uuidv4 } = require('uuid');"
          }
        },
        {
          "name": "importers.spec.js",
          "path": "api/server/utils/import/importers.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "importers.js",
          "path": "api/server/utils/import/importers.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { v4: uuidv4 } = require('uuid');"
          }
        },
        {
          "name": "importBatchBuilder.js",
          "path": "api/server/utils/import/importBatchBuilder.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { v4: uuidv4 } = require('uuid');"
          }
        },
        {
          "name": "fork.spec.js",
          "path": "api/server/utils/import/fork.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Constants, ForkOptions } = require('librechat-data-provider');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/utils/import/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const importers = require('./importers');"
          }
        },
        {
          "name": "importConversations.js",
          "path": "api/server/utils/import/importConversations.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs').promises;"
          }
        }
      ],
      "subfolders": [
        "__data__"
      ]
    },
    {
      "folder": "api/server/utils/import/__data__",
      "files": [
        {
          "name": "chatgpt-export.json",
          "path": "api/server/utils/import/__data__/chatgpt-export.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "["
          }
        },
        {
          "name": "librechat-opts-nonr-branches.json",
          "path": "api/server/utils/import/__data__/librechat-opts-nonr-branches.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "chatbotui-export.json",
          "path": "api/server/utils/import/__data__/chatbotui-export.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "librechat-linear.json",
          "path": "api/server/utils/import/__data__/librechat-linear.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "chatgpt-tree.json",
          "path": "api/server/utils/import/__data__/chatgpt-tree.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "["
          }
        },
        {
          "name": "chatgpt-citations.json",
          "path": "api/server/utils/import/__data__/chatgpt-citations.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "["
          }
        },
        {
          "name": "librechat-export.json",
          "path": "api/server/utils/import/__data__/librechat-export.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        },
        {
          "name": "librechat-tree.json",
          "path": "api/server/utils/import/__data__/librechat-tree.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/controllers",
      "files": [
        {
          "name": "tools.js",
          "path": "api/server/controllers/tools.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { nanoid } = require('nanoid');"
          }
        },
        {
          "name": "EndpointController.js",
          "path": "api/server/controllers/EndpointController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getEndpointsConfig } = require('~/server/services/Config');"
          }
        },
        {
          "name": "UserController.js",
          "path": "api/server/controllers/UserController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "TwoFactorController.js",
          "path": "api/server/controllers/TwoFactorController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "PluginController.js",
          "path": "api/server/controllers/PluginController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys, AuthType } = require('librechat-data-provider');"
          }
        },
        {
          "name": "ErrorController.js",
          "path": "api/server/controllers/ErrorController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { logger } = require('~/config');"
          }
        },
        {
          "name": "OverrideController.js",
          "path": "api/server/controllers/OverrideController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys } = require('librechat-data-provider');"
          }
        },
        {
          "name": "ModelController.js",
          "path": "api/server/controllers/ModelController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys } = require('librechat-data-provider');"
          }
        },
        {
          "name": "Balance.js",
          "path": "api/server/controllers/Balance.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Balance = require('~/models/Balance');"
          }
        },
        {
          "name": "EditController.js",
          "path": "api/server/controllers/EditController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getResponseSender } = require('librechat-data-provider');"
          }
        },
        {
          "name": "AuthController.js",
          "path": "api/server/controllers/AuthController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const cookies = require('cookie');"
          }
        },
        {
          "name": "AskController.js",
          "path": "api/server/controllers/AskController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getResponseSender, Constants } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": [
        "assistants",
        "auth",
        "agents"
      ]
    },
    {
      "folder": "api/server/controllers/assistants",
      "files": [
        {
          "name": "v1.js",
          "path": "api/server/controllers/assistants/v1.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs').promises;"
          }
        },
        {
          "name": "chatV2.js",
          "path": "api/server/controllers/assistants/chatV2.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { v4 } = require('uuid');"
          }
        },
        {
          "name": "v2.js",
          "path": "api/server/controllers/assistants/v2.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ToolCallTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "chatV1.js",
          "path": "api/server/controllers/assistants/chatV1.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { v4 } = require('uuid');"
          }
        },
        {
          "name": "errors.js",
          "path": "api/server/controllers/assistants/errors.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// errorHandler.js"
          }
        },
        {
          "name": "helpers.js",
          "path": "api/server/controllers/assistants/helpers.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/controllers/auth",
      "files": [
        {
          "name": "LogoutController.js",
          "path": "api/server/controllers/auth/LogoutController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const cookies = require('cookie');"
          }
        },
        {
          "name": "TwoFactorAuthController.js",
          "path": "api/server/controllers/auth/TwoFactorAuthController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const jwt = require('jsonwebtoken');"
          }
        },
        {
          "name": "LoginController.js",
          "path": "api/server/controllers/auth/LoginController.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { generate2FATempToken } = require('~/server/services/twoFactorService');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/controllers/agents",
      "files": [
        {
          "name": "client.js",
          "path": "api/server/controllers/agents/client.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// const { HttpsProxyAgent } = require('https-proxy-agent');"
          }
        },
        {
          "name": "llm.js",
          "path": "api/server/controllers/agents/llm.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { HttpsProxyAgent } = require('https-proxy-agent');"
          }
        },
        {
          "name": "request.js",
          "path": "api/server/controllers/agents/request.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Constants } = require('librechat-data-provider');"
          }
        },
        {
          "name": "run.js",
          "path": "api/server/controllers/agents/run.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Run, Providers } = require('@librechat/agents');"
          }
        },
        {
          "name": "v1.js",
          "path": "api/server/controllers/agents/v1.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs').promises;"
          }
        },
        {
          "name": "errors.js",
          "path": "api/server/controllers/agents/errors.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// errorHandler.js"
          }
        },
        {
          "name": "callbacks.js",
          "path": "api/server/controllers/agents/callbacks.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { nanoid } = require('nanoid');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes",
      "files": [
        {
          "name": "categories.js",
          "path": "api/server/routes/categories.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "presets.js",
          "path": "api/server/routes/presets.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "prompts.js",
          "path": "api/server/routes/prompts.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "keys.js",
          "path": "api/server/routes/keys.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "actions.js",
          "path": "api/server/routes/actions.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "user.js",
          "path": "api/server/routes/user.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "auth.js",
          "path": "api/server/routes/auth.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "plugins.js",
          "path": "api/server/routes/plugins.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "tags.js",
          "path": "api/server/routes/tags.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "roles.js",
          "path": "api/server/routes/roles.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/routes/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const assistants = require('./assistants');"
          }
        },
        {
          "name": "models.js",
          "path": "api/server/routes/models.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "config.js",
          "path": "api/server/routes/config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "convos.js",
          "path": "api/server/routes/convos.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const multer = require('multer');"
          }
        },
        {
          "name": "oauth.js",
          "path": "api/server/routes/oauth.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// file deepcode ignore NoRateLimitingForLogin: Rate limiting is handled by the `loginLimiter` middl"
          }
        },
        {
          "name": "banner.js",
          "path": "api/server/routes/banner.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "balance.js",
          "path": "api/server/routes/balance.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "endpoints.js",
          "path": "api/server/routes/endpoints.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "tokenizer.js",
          "path": "api/server/routes/tokenizer.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "search.js",
          "path": "api/server/routes/search.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Keyv = require('keyv');"
          }
        },
        {
          "name": "static.js",
          "path": "api/server/routes/static.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "messages.js",
          "path": "api/server/routes/messages.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "share.js",
          "path": "api/server/routes/share.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        }
      ],
      "subfolders": [
        "types",
        "assistants",
        "ask",
        "agents",
        "bedrock",
        "edit",
        "__tests__",
        "files"
      ]
    },
    {
      "folder": "api/server/routes/types",
      "files": [
        {
          "name": "assistants.js",
          "path": "api/server/routes/types/assistants.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes/assistants",
      "files": [
        {
          "name": "documents.js",
          "path": "api/server/routes/assistants/documents.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "tools.js",
          "path": "api/server/routes/assistants/tools.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "actions.js",
          "path": "api/server/routes/assistants/actions.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "v1.js",
          "path": "api/server/routes/assistants/v1.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/routes/assistants/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "chatV2.js",
          "path": "api/server/routes/assistants/chatV2.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "v2.js",
          "path": "api/server/routes/assistants/v2.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "chatV1.js",
          "path": "api/server/routes/assistants/chatV1.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes/ask",
      "files": [
        {
          "name": "google.js",
          "path": "api/server/routes/ask/google.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/routes/ask/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "custom.js",
          "path": "api/server/routes/ask/custom.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "gptPlugins.js",
          "path": "api/server/routes/ask/gptPlugins.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "openAI.js",
          "path": "api/server/routes/ask/openAI.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "anthropic.js",
          "path": "api/server/routes/ask/anthropic.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "addToCache.js",
          "path": "api/server/routes/ask/addToCache.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Keyv = require('keyv');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes/agents",
      "files": [
        {
          "name": "tools.js",
          "path": "api/server/routes/agents/tools.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "actions.js",
          "path": "api/server/routes/agents/actions.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "v1.js",
          "path": "api/server/routes/agents/v1.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/routes/agents/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "chat.js",
          "path": "api/server/routes/agents/chat.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes/bedrock",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/routes/bedrock/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "chat.js",
          "path": "api/server/routes/bedrock/chat.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes/edit",
      "files": [
        {
          "name": "google.js",
          "path": "api/server/routes/edit/google.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/routes/edit/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "custom.js",
          "path": "api/server/routes/edit/custom.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "gptPlugins.js",
          "path": "api/server/routes/edit/gptPlugins.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "openAI.js",
          "path": "api/server/routes/edit/openAI.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "anthropic.js",
          "path": "api/server/routes/edit/anthropic.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes/__tests__",
      "files": [
        {
          "name": "config.spec.js",
          "path": "api/server/routes/__tests__/config.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "jest.mock('~/cache/getLogStores');"
          }
        },
        {
          "name": "ldap.spec.js",
          "path": "api/server/routes/__tests__/ldap.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const request = require('supertest');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/routes/files",
      "files": [
        {
          "name": "avatar.js",
          "path": "api/server/routes/files/avatar.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs').promises;"
          }
        },
        {
          "name": "files.js",
          "path": "api/server/routes/files/files.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs').promises;"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/routes/files/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "images.js",
          "path": "api/server/routes/files/images.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "multer.js",
          "path": "api/server/routes/files/multer.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        }
      ],
      "subfolders": [
        "speech"
      ]
    },
    {
      "folder": "api/server/routes/files/speech",
      "files": [
        {
          "name": "tts.js",
          "path": "api/server/routes/files/speech/tts.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const multer = require('multer');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/routes/files/speech/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "customConfigSpeech.js",
          "path": "api/server/routes/files/speech/customConfigSpeech.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        },
        {
          "name": "stt.js",
          "path": "api/server/routes/files/speech/stt.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const express = require('express');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services",
      "files": [
        {
          "name": "UserService.js",
          "path": "api/server/services/UserService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ErrorTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "domains.js",
          "path": "api/server/services/domains.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getCustomConfig } = require('~/server/services/Config');"
          }
        },
        {
          "name": "PluginService.js",
          "path": "api/server/services/PluginService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const PluginAuth = require('~/models/schema/pluginAuthSchema');"
          }
        },
        {
          "name": "ToolService.js",
          "path": "api/server/services/ToolService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "Tokenizer.spec.js",
          "path": "api/server/services/Tokenizer.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "ActionService.js",
          "path": "api/server/services/ActionService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const jwt = require('jsonwebtoken');"
          }
        },
        {
          "name": "cleanup.js",
          "path": "api/server/services/cleanup.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { logger } = require('~/config');"
          }
        },
        {
          "name": "AppService.spec.js",
          "path": "api/server/services/AppService.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "createRunBody.js",
          "path": "api/server/services/createRunBody.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "twoFactorService.js",
          "path": "api/server/services/twoFactorService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { sign } = require('jsonwebtoken');"
          }
        },
        {
          "name": "AppService.js",
          "path": "api/server/services/AppService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "signPayload.js",
          "path": "api/server/services/signPayload.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const jwt = require('jsonwebtoken');"
          }
        },
        {
          "name": "ModelService.spec.js",
          "path": "api/server/services/ModelService.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "ActionService.spec.js",
          "path": "api/server/services/ActionService.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Constants, EModelEndpoint, actionDomainSeparator } = require('librechat-data-provider');"
          }
        },
        {
          "name": "AppService.interface.spec.js",
          "path": "api/server/services/AppService.interface.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "jest.mock('~/models/Role', () => ({"
          }
        },
        {
          "name": "ModelService.js",
          "path": "api/server/services/ModelService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "AssistantService.js",
          "path": "api/server/services/AssistantService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { klona } = require('klona');"
          }
        },
        {
          "name": "MCP.js",
          "path": "api/server/services/MCP.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "TokenService.js",
          "path": "api/server/services/TokenService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "AuthService.js",
          "path": "api/server/services/AuthService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const bcrypt = require('bcryptjs');"
          }
        },
        {
          "name": "Tokenizer.js",
          "path": "api/server/services/Tokenizer.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { encoding_for_model: encodingForModel, get_encoding: getEncoding } = require('tiktoken');"
          }
        },
        {
          "name": "domains.spec.js",
          "path": "api/server/services/domains.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEmailDomainAllowed, isActionDomainAllowed } = require('~/server/services/domains');"
          }
        }
      ],
      "subfolders": [
        "Artifacts",
        "Tools",
        "Endpoints",
        "Config",
        "start",
        "Threads",
        "Files",
        "Runs"
      ]
    },
    {
      "folder": "api/server/services/Artifacts",
      "files": [
        {
          "name": "update.spec.js",
          "path": "api/server/services/Artifacts/update.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "update.js",
          "path": "api/server/services/Artifacts/update.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const ARTIFACT_START = ':::artifact';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Tools",
      "files": [
        {
          "name": "credentials.js",
          "path": "api/server/services/Tools/credentials.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getUserPluginAuthValue } = require('~/server/services/PluginService');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/assistants",
      "files": [
        {
          "name": "initalize.js",
          "path": "api/server/services/Endpoints/assistants/initalize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const OpenAI = require('openai');"
          }
        },
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/assistants/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.spec.js",
          "path": "api/server/services/Endpoints/assistants/initialize.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// const OpenAI = require('openai');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/assistants/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addTitle = require('./title');"
          }
        },
        {
          "name": "title.js",
          "path": "api/server/services/Endpoints/assistants/title.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/google",
      "files": [
        {
          "name": "llm.js",
          "path": "api/server/services/Endpoints/google/llm.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Providers } = require('@librechat/agents');"
          }
        },
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/google/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/google/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint, AuthKeys } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.spec.js",
          "path": "api/server/services/Endpoints/google/initialize.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// file deepcode ignore HardcodedNonCryptoSecret: No hardcoded secrets"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/google/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addTitle = require('./title');"
          }
        },
        {
          "name": "title.js",
          "path": "api/server/services/Endpoints/google/title.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint, CacheKeys, Constants, googleSettings } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/agents",
      "files": [
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/agents/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { loadAgent } = require('~/models/Agent');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/agents/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { createContentAggregator, Providers } = require('@librechat/agents');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/agents/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const build = require('./build');"
          }
        },
        {
          "name": "title.js",
          "path": "api/server/services/Endpoints/agents/title.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/bedrock",
      "files": [
        {
          "name": "options.js",
          "path": "api/server/services/Endpoints/bedrock/options.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { HttpsProxyAgent } = require('https-proxy-agent');"
          }
        },
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/bedrock/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/bedrock/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { createContentAggregator } = require('@librechat/agents');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/bedrock/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const build = require('./build');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/anthropic",
      "files": [
        {
          "name": "llm.spec.js",
          "path": "api/server/services/Endpoints/anthropic/llm.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { anthropicSettings } = require('librechat-data-provider');"
          }
        },
        {
          "name": "llm.js",
          "path": "api/server/services/Endpoints/anthropic/llm.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { HttpsProxyAgent } = require('https-proxy-agent');"
          }
        },
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/anthropic/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues, anthropicSettings } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/anthropic/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint } = require('librechat-data-provider');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/anthropic/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addTitle = require('./title');"
          }
        },
        {
          "name": "title.js",
          "path": "api/server/services/Endpoints/anthropic/title.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys } = require('librechat-data-provider');"
          }
        },
        {
          "name": "helpers.js",
          "path": "api/server/services/Endpoints/anthropic/helpers.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint, anthropicSettings } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/azureAssistants",
      "files": [
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/azureAssistants/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/azureAssistants/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const OpenAI = require('openai');"
          }
        },
        {
          "name": "initialize.spec.js",
          "path": "api/server/services/Endpoints/azureAssistants/initialize.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// const OpenAI = require('openai');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/azureAssistants/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const buildOptions = require('./build');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/custom",
      "files": [
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/custom/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/custom/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/custom/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const initializeClient = require('./initialize');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/gptPlugins",
      "files": [
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/gptPlugins/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/gptPlugins/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "initialize.spec.js",
          "path": "api/server/services/Endpoints/gptPlugins/initialize.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// gptPlugins/initializeClient.spec.js"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/gptPlugins/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const buildOptions = require('./build');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Endpoints/openAI",
      "files": [
        {
          "name": "llm.js",
          "path": "api/server/services/Endpoints/openAI/llm.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { HttpsProxyAgent } = require('https-proxy-agent');"
          }
        },
        {
          "name": "build.js",
          "path": "api/server/services/Endpoints/openAI/build.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { removeNullishValues } = require('librechat-data-provider');"
          }
        },
        {
          "name": "initialize.js",
          "path": "api/server/services/Endpoints/openAI/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "initialize.spec.js",
          "path": "api/server/services/Endpoints/openAI/initialize.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "jest.mock('~/cache/getLogStores');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Endpoints/openAI/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const addTitle = require('./title');"
          }
        },
        {
          "name": "title.js",
          "path": "api/server/services/Endpoints/openAI/title.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Config",
      "files": [
        {
          "name": "loadConfigEndpoints.js",
          "path": "api/server/services/Config/loadConfigEndpoints.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint, extractEnvVariable } = require('librechat-data-provider');"
          }
        },
        {
          "name": "loadAsyncEndpoints.js",
          "path": "api/server/services/Config/loadAsyncEndpoints.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint } = require('librechat-data-provider');"
          }
        },
        {
          "name": "loadCustomConfig.js",
          "path": "api/server/services/Config/loadCustomConfig.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Config/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { config } = require('./EndpointService');"
          }
        },
        {
          "name": "getEndpointsConfig.js",
          "path": "api/server/services/Config/getEndpointsConfig.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys, EModelEndpoint, orderEndpointsConfig } = require('librechat-data-provider');"
          }
        },
        {
          "name": "handleRateLimits.js",
          "path": "api/server/services/Config/handleRateLimits.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { RateLimitPrefix } = require('librechat-data-provider');"
          }
        },
        {
          "name": "ldap.js",
          "path": "api/server/services/Config/ldap.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEnabled } = require('~/server/utils');"
          }
        },
        {
          "name": "loadOverrideConfig.js",
          "path": "api/server/services/Config/loadOverrideConfig.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// fetch some remote config"
          }
        },
        {
          "name": "loadDefaultModels.js",
          "path": "api/server/services/Config/loadDefaultModels.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint } = require('librechat-data-provider');"
          }
        },
        {
          "name": "loadConfigModels.js",
          "path": "api/server/services/Config/loadConfigModels.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint, extractEnvVariable } = require('librechat-data-provider');"
          }
        },
        {
          "name": "loadCustomConfig.spec.js",
          "path": "api/server/services/Config/loadCustomConfig.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "jest.mock('axios');"
          }
        },
        {
          "name": "loadDefaultEConfig.js",
          "path": "api/server/services/Config/loadDefaultEConfig.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint, getEnabledEndpoints } = require('librechat-data-provider');"
          }
        },
        {
          "name": "loadConfigModels.spec.js",
          "path": "api/server/services/Config/loadConfigModels.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { fetchModels } = require('~/server/services/ModelService');"
          }
        },
        {
          "name": "EndpointService.js",
          "path": "api/server/services/Config/EndpointService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint } = require('librechat-data-provider');"
          }
        },
        {
          "name": "getCustomConfig.js",
          "path": "api/server/services/Config/getCustomConfig.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys, EModelEndpoint } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/start",
      "files": [
        {
          "name": "interface.js",
          "path": "api/server/services/start/interface.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "checks.js",
          "path": "api/server/services/start/checks.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "agents.js",
          "path": "api/server/services/start/agents.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint, agentsEndpointSChema } = require('librechat-data-provider');"
          }
        },
        {
          "name": "assistants.js",
          "path": "api/server/services/start/assistants.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "azureOpenAI.js",
          "path": "api/server/services/start/azureOpenAI.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "interface.spec.js",
          "path": "api/server/services/start/interface.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { SystemRoles, Permissions, PermissionTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "modelSpecs.js",
          "path": "api/server/services/start/modelSpecs.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint } = require('librechat-data-provider');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Threads",
      "files": [
        {
          "name": "processMessages.spec.js",
          "path": "api/server/services/Threads/processMessages.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { retrieveAndProcessFile } = require('~/server/services/Files/process');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Threads/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const manage = require('./manage');"
          }
        },
        {
          "name": "manage.js",
          "path": "api/server/services/Threads/manage.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files",
      "files": [
        {
          "name": "strategies.js",
          "path": "api/server/services/Files/strategies.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { FileSources } = require('librechat-data-provider');"
          }
        },
        {
          "name": "process.js",
          "path": "api/server/services/Files/process.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        }
      ],
      "subfolders": [
        "MistralOCR",
        "images",
        "VectorDB",
        "Code",
        "Local",
        "Firebase",
        "Audio",
        "OpenAI"
      ]
    },
    {
      "folder": "api/server/services/Files/MistralOCR",
      "files": [
        {
          "name": "crud.spec.js",
          "path": "api/server/services/Files/MistralOCR/crud.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Files/MistralOCR/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crud = require('./crud');"
          }
        },
        {
          "name": "crud.js",
          "path": "api/server/services/Files/MistralOCR/crud.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// ~/server/services/Files/MistralOCR/crud.js"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files/images",
      "files": [
        {
          "name": "convert.js",
          "path": "api/server/services/Files/images/convert.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "avatar.js",
          "path": "api/server/services/Files/images/avatar.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const sharp = require('sharp');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Files/images/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const avatar = require('./avatar');"
          }
        },
        {
          "name": "encode.js",
          "path": "api/server/services/Files/images/encode.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "parse.js",
          "path": "api/server/services/Files/images/parse.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const URL = require('url').URL;"
          }
        },
        {
          "name": "resize.js",
          "path": "api/server/services/Files/images/resize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const sharp = require('sharp');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files/VectorDB",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/services/Files/VectorDB/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crud = require('./crud');"
          }
        },
        {
          "name": "crud.js",
          "path": "api/server/services/Files/VectorDB/crud.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files/Code",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/services/Files/Code/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crud = require('./crud');"
          }
        },
        {
          "name": "crud.js",
          "path": "api/server/services/Files/Code/crud.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const FormData = require('form-data');"
          }
        },
        {
          "name": "process.js",
          "path": "api/server/services/Files/Code/process.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const path = require('path');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files/Local",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/services/Files/Local/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const images = require('./images');"
          }
        },
        {
          "name": "crud.js",
          "path": "api/server/services/Files/Local/crud.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "images.js",
          "path": "api/server/services/Files/Local/images.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files/Firebase",
      "files": [
        {
          "name": "initialize.js",
          "path": "api/server/services/Files/Firebase/initialize.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const firebase = require('firebase/app');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Files/Firebase/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crud = require('./crud');"
          }
        },
        {
          "name": "crud.js",
          "path": "api/server/services/Files/Firebase/crud.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        },
        {
          "name": "images.js",
          "path": "api/server/services/Files/Firebase/images.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files/Audio",
      "files": [
        {
          "name": "streamAudio.spec.js",
          "path": "api/server/services/Files/Audio/streamAudio.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { createChunkProcessor, splitTextIntoChunks } = require('./streamAudio');"
          }
        },
        {
          "name": "TTSService.js",
          "path": "api/server/services/Files/Audio/TTSService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Files/Audio/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const getCustomConfigSpeech = require('./getCustomConfigSpeech');"
          }
        },
        {
          "name": "streamAudio.js",
          "path": "api/server/services/Files/Audio/streamAudio.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CacheKeys, findLastSeparatorIndex, SEPARATORS, Time } = require('librechat-data-provider');"
          }
        },
        {
          "name": "getVoices.js",
          "path": "api/server/services/Files/Audio/getVoices.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { TTSProviders } = require('librechat-data-provider');"
          }
        },
        {
          "name": "STTService.js",
          "path": "api/server/services/Files/Audio/STTService.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "getCustomConfigSpeech.js",
          "path": "api/server/services/Files/Audio/getCustomConfigSpeech.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { getCustomConfig } = require('~/server/services/Config');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Files/OpenAI",
      "files": [
        {
          "name": "index.js",
          "path": "api/server/services/Files/OpenAI/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const crud = require('./crud');"
          }
        },
        {
          "name": "crud.js",
          "path": "api/server/services/Files/OpenAI/crud.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/server/services/Runs",
      "files": [
        {
          "name": "handle.js",
          "path": "api/server/services/Runs/handle.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { RunStatus, defaultOrderQuery, CacheKeys } = require('librechat-data-provider');"
          }
        },
        {
          "name": "methods.js",
          "path": "api/server/services/Runs/methods.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "index.js",
          "path": "api/server/services/Runs/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const handle = require('./handle');"
          }
        },
        {
          "name": "RunManager.js",
          "path": "api/server/services/Runs/RunManager.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ToolCallTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "StreamRunManager.js",
          "path": "api/server/services/Runs/StreamRunManager.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/utils",
      "files": [
        {
          "name": "extractBaseURL.js",
          "path": "api/utils/extractBaseURL.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { CohereConstants } = require('librechat-data-provider');"
          }
        },
        {
          "name": "axios.js",
          "path": "api/utils/axios.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { logger } = require('~/config');"
          }
        },
        {
          "name": "tokens.js",
          "path": "api/utils/tokens.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const z = require('zod');"
          }
        },
        {
          "name": "logger.js",
          "path": "api/utils/logger.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const winston = require('winston');"
          }
        },
        {
          "name": "extractBaseURL.spec.js",
          "path": "api/utils/extractBaseURL.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const extractBaseURL = require('./extractBaseURL');"
          }
        },
        {
          "name": "LoggingSystem.js",
          "path": "api/utils/LoggingSystem.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const logger = require('./logger');"
          }
        },
        {
          "name": "tokens.spec.js",
          "path": "api/utils/tokens.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint } = require('librechat-data-provider');"
          }
        },
        {
          "name": "findMessageContent.js",
          "path": "api/utils/findMessageContent.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { logger } = require('~/config');"
          }
        },
        {
          "name": "index.js",
          "path": "api/utils/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const loadYaml = require('./loadYaml');"
          }
        },
        {
          "name": "deriveBaseURL.spec.js",
          "path": "api/utils/deriveBaseURL.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const axios = require('axios');"
          }
        },
        {
          "name": "azureUtils.spec.js",
          "path": "api/utils/azureUtils.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "azureUtils.js",
          "path": "api/utils/azureUtils.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { isEnabled } = require('~/server/utils');"
          }
        },
        {
          "name": "deriveBaseURL.js",
          "path": "api/utils/deriveBaseURL.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { logger } = require('~/config');"
          }
        },
        {
          "name": "loadYaml.js",
          "path": "api/utils/loadYaml.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const fs = require('fs');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/models",
      "files": [
        {
          "name": "Assistant.js",
          "path": "api/models/Assistant.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "ToolCall.js",
          "path": "api/models/ToolCall.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Categories.js",
          "path": "api/models/Categories.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { logger } = require('~/config');"
          }
        },
        {
          "name": "Key.js",
          "path": "api/models/Key.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Transaction.js",
          "path": "api/models/Transaction.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Agent.spec.js",
          "path": "api/models/Agent.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Conversation.js",
          "path": "api/models/Conversation.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Conversation = require('./schema/convoSchema');"
          }
        },
        {
          "name": "Action.js",
          "path": "api/models/Action.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "checkBalance.js",
          "path": "api/models/checkBalance.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { ViolationTypes } = require('librechat-data-provider');"
          }
        },
        {
          "name": "userMethods.js",
          "path": "api/models/userMethods.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const bcrypt = require('bcryptjs');"
          }
        },
        {
          "name": "Preset.js",
          "path": "api/models/Preset.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const Preset = require('./schema/presetSchema');"
          }
        },
        {
          "name": "Role.js",
          "path": "api/models/Role.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Message.js",
          "path": "api/models/Message.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { z } = require('zod');"
          }
        },
        {
          "name": "Session.js",
          "path": "api/models/Session.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "User.js",
          "path": "api/models/User.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "index.js",
          "path": "api/models/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const {"
          }
        },
        {
          "name": "Config.js",
          "path": "api/models/Config.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Token.js",
          "path": "api/models/Token.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "inviteUser.js",
          "path": "api/models/inviteUser.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "convoStructure.spec.js",
          "path": "api/models/convoStructure.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Role.spec.js",
          "path": "api/models/Role.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Prompt.js",
          "path": "api/models/Prompt.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Project.js",
          "path": "api/models/Project.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { model } = require('mongoose');"
          }
        },
        {
          "name": "tx.spec.js",
          "path": "api/models/tx.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { EModelEndpoint } = require('librechat-data-provider');"
          }
        },
        {
          "name": "Banner.js",
          "path": "api/models/Banner.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Balance.js",
          "path": "api/models/Balance.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "tx.js",
          "path": "api/models/tx.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { matchModelName } = require('../utils');"
          }
        },
        {
          "name": "File.js",
          "path": "api/models/File.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "spendTokens.js",
          "path": "api/models/spendTokens.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { Transaction } = require('./Transaction');"
          }
        },
        {
          "name": "ConversationTag.js",
          "path": "api/models/ConversationTag.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Message.spec.js",
          "path": "api/models/Message.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Transaction.spec.js",
          "path": "api/models/Transaction.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Agent.js",
          "path": "api/models/Agent.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "Share.js",
          "path": "api/models/Share.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "spendTokens.spec.js",
          "path": "api/models/spendTokens.spec.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        }
      ],
      "subfolders": [
        "plugins",
        "schema"
      ]
    },
    {
      "folder": "api/models/plugins",
      "files": [
        {
          "name": "mongoMeili.js",
          "path": "api/models/plugins/mongoMeili.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const _ = require('lodash');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/models/schema",
      "files": [
        {
          "name": "convoSchema.js",
          "path": "api/models/schema/convoSchema.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "messageSchema.js",
          "path": "api/models/schema/messageSchema.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "presetSchema.js",
          "path": "api/models/schema/presetSchema.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        },
        {
          "name": "pluginAuthSchema.js",
          "path": "api/models/schema/pluginAuthSchema.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mongoose = require('mongoose');"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/lib/utils",
      "files": [
        {
          "name": "misc.js",
          "path": "api/lib/utils/misc.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const cleanUpPrimaryKeyValue = (value) => {"
          }
        },
        {
          "name": "reduceHits.js",
          "path": "api/lib/utils/reduceHits.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const mergeSort = require('./mergeSort');"
          }
        },
        {
          "name": "mergeSort.js",
          "path": "api/lib/utils/mergeSort.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "function mergeSort(arr, compareFn) {"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "api/lib/db",
      "files": [
        {
          "name": "indexSync.js",
          "path": "api/lib/db/indexSync.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const { MeiliSearch } = require('meilisearch');"
          }
        },
        {
          "name": "index.js",
          "path": "api/lib/db/index.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "const connectDb = require('./connectDb');"
          }
        },
        {
          "name": "connectDb.js",
          "path": "api/lib/db/connectDb.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "require('dotenv').config();"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "e2e",
      "files": [
        {
          "name": "jestSetup.js",
          "path": "e2e/jestSetup.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "// v0.7.7"
          }
        },
        {
          "name": "playwright.config.local.ts",
          "path": "e2e/playwright.config.local.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { PlaywrightTestConfig } from '@playwright/test';"
          }
        },
        {
          "name": "config.local.example.ts",
          "path": "e2e/config.local.example.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// copy as `config.local.ts`"
          }
        },
        {
          "name": "types.ts",
          "path": "e2e/types.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export type User = { email: string; name: string; password: string };"
          }
        },
        {
          "name": "playwright.config.a11y.ts",
          "path": "e2e/playwright.config.a11y.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { PlaywrightTestConfig } from '@playwright/test';"
          }
        },
        {
          "name": "playwright.config.ts",
          "path": "e2e/playwright.config.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { defineConfig, devices } from '@playwright/test';"
          }
        }
      ],
      "subfolders": [
        "specs",
        "setup"
      ]
    },
    {
      "folder": "e2e/specs",
      "files": [
        {
          "name": "a11y.spec.ts",
          "path": "e2e/specs/a11y.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { expect, test } from '@playwright/test';"
          }
        },
        {
          "name": "landing.spec.ts",
          "path": "e2e/specs/landing.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { expect, test } from '@playwright/test';"
          }
        },
        {
          "name": "messages.spec.ts",
          "path": "e2e/specs/messages.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { expect, test } from '@playwright/test';"
          }
        },
        {
          "name": "keys.spec.ts",
          "path": "e2e/specs/keys.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { expect, test } from '@playwright/test';"
          }
        },
        {
          "name": "popup.spec.ts",
          "path": "e2e/specs/popup.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { expect, test } from '@playwright/test';"
          }
        },
        {
          "name": "settings.spec.ts",
          "path": "e2e/specs/settings.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { expect, test } from '@playwright/test';"
          }
        },
        {
          "name": "nav.spec.ts",
          "path": "e2e/specs/nav.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { expect, test } from '@playwright/test';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "e2e/setup",
      "files": [
        {
          "name": "authenticate.ts",
          "path": "e2e/setup/authenticate.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Page, FullConfig, chromium } from '@playwright/test';"
          }
        },
        {
          "name": "global-setup.local.ts",
          "path": "e2e/setup/global-setup.local.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { FullConfig } from '@playwright/test';"
          }
        },
        {
          "name": "global-setup.ts",
          "path": "e2e/setup/global-setup.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { FullConfig } from '@playwright/test';"
          }
        },
        {
          "name": "cleanupUser.ts",
          "path": "e2e/setup/cleanupUser.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import connectDb from '@librechat/backend/lib/db/connectDb';"
          }
        },
        {
          "name": "global-teardown.ts",
          "path": "e2e/setup/global-teardown.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import cleanupUser from './cleanupUser';"
          }
        },
        {
          "name": "global-teardown.local.ts",
          "path": "e2e/setup/global-teardown.local.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import localUser from '../config.local';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client",
      "files": [
        {
          "name": "index.html",
          "path": "client/index.html",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".html",
            "ai_description": "HTML web page file",
            "extracted_description": "<!DOCTYPE html>"
          }
        },
        {
          "name": "check_updates.sh",
          "path": "client/check_updates.sh",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".sh",
            "ai_description": "Shell script file",
            "extracted_description": "#!/bin/bash"
          }
        },
        {
          "name": "postcss.config.cjs",
          "path": "client/postcss.config.cjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".cjs",
            "ai_description": "File with .cjs extension",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "jest.config.cjs",
          "path": "client/jest.config.cjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".cjs",
            "ai_description": "File with .cjs extension",
            "extracted_description": "module.exports = {"
          }
        },
        {
          "name": "tailwind.config.cjs",
          "path": "client/tailwind.config.cjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".cjs",
            "ai_description": "File with .cjs extension",
            "extracted_description": "// const { fontFamily } = require('tailwindcss/defaultTheme');"
          }
        },
        {
          "name": "package.json",
          "path": "client/package.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "Node.js package configuration and dependencies",
            "extracted_description": "{"
          }
        },
        {
          "name": "tsconfig.json",
          "path": "client/tsconfig.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "TypeScript compiler configuration",
            "extracted_description": "{"
          }
        },
        {
          "name": "nginx.conf",
          "path": "client/nginx.conf",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".conf",
            "ai_description": "File with .conf extension",
            "extracted_description": "# Secure default configuration generated by Mozilla SSL Configuration Generator"
          }
        },
        {
          "name": "vite.config.ts",
          "path": "client/vite.config.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import path, { resolve } from 'path';"
          }
        },
        {
          "name": "babel.config.cjs",
          "path": "client/babel.config.cjs",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".cjs",
            "ai_description": "File with .cjs extension",
            "extracted_description": "/*"
          }
        }
      ],
      "subfolders": [
        "test",
        "public",
        "src"
      ]
    },
    {
      "folder": "client/test",
      "files": [
        {
          "name": "resizeObserver.mock",
          "path": "client/test/resizeObserver.mock",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mock",
            "ai_description": "File with .mock extension",
            "extracted_description": "Object.defineProperty(window, 'ResizeObserver', {"
          }
        },
        {
          "name": "matchMedia.mock",
          "path": "client/test/matchMedia.mock",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mock",
            "ai_description": "File with .mock extension",
            "extracted_description": "Object.defineProperty(window, 'matchMedia', {"
          }
        },
        {
          "name": "localStorage.mock",
          "path": "client/test/localStorage.mock",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mock",
            "ai_description": "File with .mock extension",
            "extracted_description": "let store = {};"
          }
        },
        {
          "name": "layout-test-utils.tsx",
          "path": "client/test/layout-test-utils.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import './matchMedia.mock';"
          }
        },
        {
          "name": "setupTests.js",
          "path": "client/test/setupTests.js",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".js",
            "ai_description": "JavaScript source code file",
            "extracted_description": "/* This file is automatically executed before running tests"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/public",
      "files": [
        {
          "name": "robots.txt",
          "path": "client/public/robots.txt",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".txt",
            "ai_description": "Plain text file",
            "extracted_description": "User-agent: *"
          }
        }
      ],
      "subfolders": [
        "fonts",
        "assets"
      ]
    },
    {
      "folder": "client/public/fonts",
      "files": [
        {
          "name": "Inter-Regular.woff2",
          "path": "client/public/fonts/Inter-Regular.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "Inter-SemiBold.woff2",
          "path": "client/public/fonts/Inter-SemiBold.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "Inter-BoldItalic.woff2",
          "path": "client/public/fonts/Inter-BoldItalic.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "Inter-Bold.woff2",
          "path": "client/public/fonts/Inter-Bold.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "Inter-Italic.woff2",
          "path": "client/public/fonts/Inter-Italic.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "roboto-mono-latin-400-italic.woff2",
          "path": "client/public/fonts/roboto-mono-latin-400-italic.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "roboto-mono-latin-400-normal.woff2",
          "path": "client/public/fonts/roboto-mono-latin-400-normal.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "Inter-SemiBoldItalic.woff2",
          "path": "client/public/fonts/Inter-SemiBoldItalic.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "roboto-mono-latin-700-normal.woff2",
          "path": "client/public/fonts/roboto-mono-latin-700-normal.woff2",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".woff2",
            "ai_description": "File with .woff2 extension",
            "extracted_description": "(Binary file)"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/public/assets",
      "files": [
        {
          "name": "fortran.svg",
          "path": "client/public/assets/fortran.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "favicon-16x16.png",
          "path": "client/public/assets/favicon-16x16.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "icon-192x192.png",
          "path": "client/public/assets/icon-192x192.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "mistral.png",
          "path": "client/public/assets/mistral.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "fireworks.png",
          "path": "client/public/assets/fireworks.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "rust.svg",
          "path": "client/public/assets/rust.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "web-browser.svg",
          "path": "client/public/assets/web-browser.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "silence.mp3",
          "path": "client/public/assets/silence.mp3",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".mp3",
            "ai_description": "File with .mp3 extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "tsnode.svg",
          "path": "client/public/assets/tsnode.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "huggingface.svg",
          "path": "client/public/assets/huggingface.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "groq.png",
          "path": "client/public/assets/groq.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "xai.svg",
          "path": "client/public/assets/xai.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "python.svg",
          "path": "client/public/assets/python.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "unify.webp",
          "path": "client/public/assets/unify.webp",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".webp",
            "ai_description": "File with .webp extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "nodedotjs.svg",
          "path": "client/public/assets/nodedotjs.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "apple-touch-icon-180x180.png",
          "path": "client/public/assets/apple-touch-icon-180x180.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "deepseek.svg",
          "path": "client/public/assets/deepseek.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "perplexity.png",
          "path": "client/public/assets/perplexity.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "bingai-jb.png",
          "path": "client/public/assets/bingai-jb.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "maskable-icon.png",
          "path": "client/public/assets/maskable-icon.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "r.svg",
          "path": "client/public/assets/r.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "cohere.png",
          "path": "client/public/assets/cohere.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "ollama.png",
          "path": "client/public/assets/ollama.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "php.svg",
          "path": "client/public/assets/php.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "google-palm.svg",
          "path": "client/public/assets/google-palm.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "mlx.png",
          "path": "client/public/assets/mlx.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "c.svg",
          "path": "client/public/assets/c.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "together.png",
          "path": "client/public/assets/together.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "openrouter.png",
          "path": "client/public/assets/openrouter.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "openweather.png",
          "path": "client/public/assets/openweather.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "anyscale.png",
          "path": "client/public/assets/anyscale.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "logo.svg",
          "path": "client/public/assets/logo.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "bingai.png",
          "path": "client/public/assets/bingai.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "go.svg",
          "path": "client/public/assets/go.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "favicon-32x32.png",
          "path": "client/public/assets/favicon-32x32.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "shuttleai.png",
          "path": "client/public/assets/shuttleai.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "apipie.png",
          "path": "client/public/assets/apipie.png",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".png",
            "ai_description": "File with .png extension",
            "extracted_description": "(Binary file)"
          }
        },
        {
          "name": "cplusplus.svg",
          "path": "client/public/assets/cplusplus.svg",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".svg",
            "ai_description": "File with .svg extension",
            "extracted_description": "(Binary file)"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src",
      "files": [
        {
          "name": "vite-env.d.ts",
          "path": "client/src/vite-env.d.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/// <reference types=\"vite/client\" />"
          }
        },
        {
          "name": "main.jsx",
          "path": "client/src/main.jsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".jsx",
            "ai_description": "React JavaScript component file",
            "extracted_description": "import 'regenerator-runtime/runtime';"
          }
        },
        {
          "name": "style.css",
          "path": "client/src/style.css",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".css",
            "ai_description": "CSS stylesheet file",
            "extracted_description": "@tailwind base;"
          }
        },
        {
          "name": "App.jsx",
          "path": "client/src/App.jsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".jsx",
            "ai_description": "React JavaScript component file",
            "extracted_description": "import { RecoilRoot } from 'recoil';"
          }
        },
        {
          "name": "mobile.css",
          "path": "client/src/mobile.css",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".css",
            "ai_description": "CSS stylesheet file",
            "extracted_description": ".hover-button.active {"
          }
        }
      ],
      "subfolders": [
        "@types",
        "locales",
        "Providers",
        "utils",
        "components",
        "common",
        "hooks",
        "a11y",
        "routes",
        "data-provider",
        "store"
      ]
    },
    {
      "folder": "client/src/@types",
      "files": [
        {
          "name": "i18next.d.ts",
          "path": "client/src/@types/i18next.d.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { defaultNS, resources } from '~/locales/i18n';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales",
      "files": [
        {
          "name": "i18n.ts",
          "path": "client/src/locales/i18n.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import i18n from 'i18next';"
          }
        },
        {
          "name": "Translation.spec.ts",
          "path": "client/src/locales/Translation.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// Translation.spec.ts"
          }
        }
      ],
      "subfolders": [
        "zh-Hans",
        "zh-Hant",
        "pl",
        "vi",
        "sv",
        "he",
        "ja",
        "it",
        "cs",
        "ru",
        "pt-PT",
        "ar",
        "pt-BR",
        "nl",
        "ka",
        "de",
        "ko",
        "fi",
        "id",
        "fr",
        "es",
        "et",
        "en",
        "th",
        "tr"
      ]
    },
    {
      "folder": "client/src/locales/zh-Hans",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/zh-Hans/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/zh-Hant",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/zh-Hant/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/pl",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/pl/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/vi",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/vi/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/sv",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/sv/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/he",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/he/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/ja",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/ja/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/it",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/it/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/cs",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/cs/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/ru",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/ru/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/pt-PT",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/pt-PT/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/ar",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/ar/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/pt-BR",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/pt-BR/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/nl",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/nl/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/ka",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/ka/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/de",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/de/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/ko",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/ko/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/fi",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/fi/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/id",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/id/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/fr",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/fr/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/es",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/es/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/et",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/et/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/en",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/en/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/th",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/th/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/locales/tr",
      "files": [
        {
          "name": "translation.json",
          "path": "client/src/locales/tr/translation.json",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".json",
            "ai_description": "JSON configuration or data file",
            "extracted_description": "{"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/Providers",
      "files": [
        {
          "name": "SearchContext.tsx",
          "path": "client/src/Providers/SearchContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "AgentsContext.tsx",
          "path": "client/src/Providers/AgentsContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useForm, FormProvider } from 'react-hook-form';"
          }
        },
        {
          "name": "CustomFormContext.tsx",
          "path": "client/src/Providers/CustomFormContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { createContext, PropsWithChildren, ReactElement, useContext, useMemo } from 'react';"
          }
        },
        {
          "name": "ChatFormContext.tsx",
          "path": "client/src/Providers/ChatFormContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createFormContext } from './CustomFormContext';"
          }
        },
        {
          "name": "SetConvoContext.tsx",
          "path": "client/src/Providers/SetConvoContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext, useRef } from 'react';"
          }
        },
        {
          "name": "ShareContext.tsx",
          "path": "client/src/Providers/ShareContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "AssistantsContext.tsx",
          "path": "client/src/Providers/AssistantsContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useForm, FormProvider } from 'react-hook-form';"
          }
        },
        {
          "name": "FileMapContext.tsx",
          "path": "client/src/Providers/FileMapContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "AddedChatContext.tsx",
          "path": "client/src/Providers/AddedChatContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "ToastContext.tsx",
          "path": "client/src/Providers/ToastContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "MessageContext.tsx",
          "path": "client/src/Providers/MessageContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "AnnouncerContext.tsx",
          "path": "client/src/Providers/AnnouncerContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "// AnnouncerContext.tsx"
          }
        },
        {
          "name": "AssistantsMapContext.tsx",
          "path": "client/src/Providers/AssistantsMapContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "ChatContext.tsx",
          "path": "client/src/Providers/ChatContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "EditorContext.tsx",
          "path": "client/src/Providers/EditorContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { createContext, useContext, useState } from 'react';"
          }
        },
        {
          "name": "DashboardContext.tsx",
          "path": "client/src/Providers/DashboardContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/Providers/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as ToastProvider } from './ToastContext';"
          }
        },
        {
          "name": "CodeBlockContext.tsx",
          "path": "client/src/Providers/CodeBlockContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext, ReactNode, useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "BookmarkContext.tsx",
          "path": "client/src/Providers/BookmarkContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "ToolCallsMapContext.tsx",
          "path": "client/src/Providers/ToolCallsMapContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "ArtifactContext.tsx",
          "path": "client/src/Providers/ArtifactContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext, ReactNode, useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "AgentsMapContext.tsx",
          "path": "client/src/Providers/AgentsMapContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/utils",
      "files": [
        {
          "name": "endpoints.ts",
          "path": "client/src/utils/endpoints.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "json.ts",
          "path": "client/src/utils/json.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export function isJson(str: string) {"
          }
        },
        {
          "name": "languages.ts",
          "path": "client/src/utils/languages.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export const languages = new Set(["
          }
        },
        {
          "name": "latex.ts",
          "path": "client/src/utils/latex.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// Regex to check if the processed content contains any potential LaTeX patterns"
          }
        },
        {
          "name": "convos.fakeData.ts",
          "path": "client/src/utils/convos.fakeData.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// eslint-disable-next-line @typescript-eslint/ban-ts-comment"
          }
        },
        {
          "name": "localStorage.ts",
          "path": "client/src/utils/localStorage.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { LocalStorageKeys, TConversation } from 'librechat-data-provider';"
          }
        },
        {
          "name": "cleanupPreset.ts",
          "path": "client/src/utils/cleanupPreset.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { parseConvo } from 'librechat-data-provider';"
          }
        },
        {
          "name": "artifacts.ts",
          "path": "client/src/utils/artifacts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import dedent from 'dedent';"
          }
        },
        {
          "name": "cn.ts",
          "path": "client/src/utils/cn.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { twMerge } from 'tailwind-merge';"
          }
        },
        {
          "name": "messages.ts",
          "path": "client/src/utils/messages.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { ContentTypes, Constants } from 'librechat-data-provider';"
          }
        },
        {
          "name": "conversationTags.spec.ts",
          "path": "client/src/utils/conversationTags.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { TConversationTagsResponse } from 'librechat-data-provider';"
          }
        },
        {
          "name": "collection.ts",
          "path": "client/src/utils/collection.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { InfiniteData, QueryClient } from '@tanstack/react-query';"
          }
        },
        {
          "name": "artifacts.spec.ts",
          "path": "client/src/utils/artifacts.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { preprocessCodeArtifacts } from './artifacts';"
          }
        },
        {
          "name": "resetConvo.ts",
          "path": "client/src/utils/resetConvo.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { TMessage } from 'librechat-data-provider';"
          }
        },
        {
          "name": "convos.spec.ts",
          "path": "client/src/utils/convos.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Constants } from 'librechat-data-provider';"
          }
        },
        {
          "name": "map.ts",
          "path": "client/src/utils/map.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type * as t from 'librechat-data-provider';"
          }
        },
        {
          "name": "buildDefaultConvo.ts",
          "path": "client/src/utils/buildDefaultConvo.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "prompts.ts",
          "path": "client/src/utils/prompts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { format } from 'date-fns';"
          }
        },
        {
          "name": "getLoginError.ts",
          "path": "client/src/utils/getLoginError.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "const getLoginError = (errorText: string) => {"
          }
        },
        {
          "name": "logger.ts",
          "path": "client/src/utils/logger.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "const isDevelopment = import.meta.env.MODE === 'development';"
          }
        },
        {
          "name": "latex.spec.ts",
          "path": "client/src/utils/latex.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "(Empty content)"
          }
        },
        {
          "name": "presets.ts",
          "path": "client/src/utils/presets.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { TPreset, TPlugin } from 'librechat-data-provider';"
          }
        },
        {
          "name": "getDefaultEndpoint.ts",
          "path": "client/src/utils/getDefaultEndpoint.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type {"
          }
        },
        {
          "name": "mermaid.ts",
          "path": "client/src/utils/mermaid.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import dedent from 'dedent';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/utils/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "promptGroups.ts",
          "path": "client/src/utils/promptGroups.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { InfiniteCollections, QueryKeys } from 'librechat-data-provider';"
          }
        },
        {
          "name": "theme.ts",
          "path": "client/src/utils/theme.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export const applyFontSize = (val: string) => {"
          }
        },
        {
          "name": "convos.ts",
          "path": "client/src/utils/convos.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "forms.tsx",
          "path": "client/src/utils/forms.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { EarthIcon } from 'lucide-react';"
          }
        },
        {
          "name": "endpoints.spec.ts",
          "path": "client/src/utils/endpoints.spec.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EModelEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "conversationTags.ts",
          "path": "client/src/utils/conversationTags.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "textarea.ts",
          "path": "client/src/utils/textarea.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/**"
          }
        },
        {
          "name": "files.ts",
          "path": "client/src/utils/files.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "buildTree.ts",
          "path": "client/src/utils/buildTree.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { TFile, TMessage } from 'librechat-data-provider';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components",
      "files": [
        {
          "name": "index.ts",
          "path": "client/src/components/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './ui';"
          }
        }
      ],
      "subfolders": [
        "svg",
        "ui",
        "Artifacts",
        "Tools",
        "Messages",
        "Endpoints",
        "Chat",
        "Auth",
        "Input",
        "Plugins",
        "SidePanel",
        "Banners",
        "Audio",
        "Bookmarks",
        "Conversations",
        "Prompts",
        "Files",
        "Nav",
        "Share"
      ]
    },
    {
      "folder": "client/src/components/svg",
      "files": [
        {
          "name": "PaLMinimalIcon.tsx",
          "path": "client/src/components/svg/PaLMinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "PaLMIcon.tsx",
          "path": "client/src/components/svg/PaLMIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function PaLMIcon({"
          }
        },
        {
          "name": "BirthdayIcon.tsx",
          "path": "client/src/components/svg/BirthdayIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "GearIcon.tsx",
          "path": "client/src/components/svg/GearIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "EditIcon.tsx",
          "path": "client/src/components/svg/EditIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "Clipboard.tsx",
          "path": "client/src/components/svg/Clipboard.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "PinIcon.tsx",
          "path": "client/src/components/svg/PinIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function PinIcon({ unpin = false }: { unpin?: boolean }) {"
          }
        },
        {
          "name": "GoogleIconChat.tsx",
          "path": "client/src/components/svg/GoogleIconChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "SaveIcon.tsx",
          "path": "client/src/components/svg/SaveIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "Blocks.tsx",
          "path": "client/src/components/svg/Blocks.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "VolumeMuteIcon.tsx",
          "path": "client/src/components/svg/VolumeMuteIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "ConvoIcon.tsx",
          "path": "client/src/components/svg/ConvoIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CircleHelpIcon.tsx",
          "path": "client/src/components/svg/CircleHelpIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "ChatIcon.tsx",
          "path": "client/src/components/svg/ChatIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AttachmentIcon.tsx",
          "path": "client/src/components/svg/AttachmentIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function AttachmentIcon({ className = '' }) {"
          }
        },
        {
          "name": "DarkModeIcon.tsx",
          "path": "client/src/components/svg/DarkModeIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CheckMark.tsx",
          "path": "client/src/components/svg/CheckMark.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "CautionIcon.tsx",
          "path": "client/src/components/svg/CautionIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CodeyIcon.tsx",
          "path": "client/src/components/svg/CodeyIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "CrossIcon.tsx",
          "path": "client/src/components/svg/CrossIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "RenameIcon.tsx",
          "path": "client/src/components/svg/RenameIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function RenameIcon() {"
          }
        },
        {
          "name": "SunIcon.tsx",
          "path": "client/src/components/svg/SunIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LightningIcon.tsx",
          "path": "client/src/components/svg/LightningIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "OpenAIMinimalIcon.tsx",
          "path": "client/src/components/svg/OpenAIMinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function OpenAIMinimalIcon({ className = 'h-4 w-4' }) {"
          }
        },
        {
          "name": "SpeechIcon.tsx",
          "path": "client/src/components/svg/SpeechIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "RegenerateIcon.tsx",
          "path": "client/src/components/svg/RegenerateIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "Sparkles.tsx",
          "path": "client/src/components/svg/Sparkles.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "AnthropicIcon.tsx",
          "path": "client/src/components/svg/AnthropicIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "OpenIDIcon.tsx",
          "path": "client/src/components/svg/OpenIDIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "SendMessageIcon.tsx",
          "path": "client/src/components/svg/SendMessageIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "GeminiIcon.tsx",
          "path": "client/src/components/svg/GeminiIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function GeminiIcon({"
          }
        },
        {
          "name": "GPTIcon.tsx",
          "path": "client/src/components/svg/GPTIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "Plugin.tsx",
          "path": "client/src/components/svg/Plugin.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "AnthropicMinimalIcon.tsx",
          "path": "client/src/components/svg/AnthropicMinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "SwitchIcon.tsx",
          "path": "client/src/components/svg/SwitchIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AzureMinimalIcon.tsx",
          "path": "client/src/components/svg/AzureMinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "(Empty content)"
          }
        },
        {
          "name": "AssistantIcon.tsx",
          "path": "client/src/components/svg/AssistantIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "Panel.tsx",
          "path": "client/src/components/svg/Panel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function Panel({ open = false }) {"
          }
        },
        {
          "name": "MessagesSquared.tsx",
          "path": "client/src/components/svg/MessagesSquared.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "DotsIcon.tsx",
          "path": "client/src/components/svg/DotsIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "ListeningIcon.tsx",
          "path": "client/src/components/svg/ListeningIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "LinkIcon.tsx",
          "path": "client/src/components/svg/LinkIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function LinkIcon() {"
          }
        },
        {
          "name": "TrashIcon.tsx",
          "path": "client/src/components/svg/TrashIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "NewChatIcon.tsx",
          "path": "client/src/components/svg/NewChatIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "FacebookIcon.tsx",
          "path": "client/src/components/svg/FacebookIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "UserIcon.tsx",
          "path": "client/src/components/svg/UserIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function UserIcon() {"
          }
        },
        {
          "name": "ArchiveIcon.tsx",
          "path": "client/src/components/svg/ArchiveIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function ArchiveIcon({ className = 'icon-md' }) {"
          }
        },
        {
          "name": "AppleIcon.tsx",
          "path": "client/src/components/svg/AppleIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/svg/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as ArchiveIcon } from './ArchiveIcon';"
          }
        },
        {
          "name": "DislikeIcon.tsx",
          "path": "client/src/components/svg/DislikeIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LogOutIcon.tsx",
          "path": "client/src/components/svg/LogOutIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CustomMinimalIcon.tsx",
          "path": "client/src/components/svg/CustomMinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "DiscordIcon.tsx",
          "path": "client/src/components/svg/DiscordIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LightModeIcon.tsx",
          "path": "client/src/components/svg/LightModeIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "ContinueIcon.tsx",
          "path": "client/src/components/svg/ContinueIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "DataIcon.tsx",
          "path": "client/src/components/svg/DataIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function DataIcon({ className = 'icon-sm' }: { className?: string }) {"
          }
        },
        {
          "name": "GoogleIcon.tsx",
          "path": "client/src/components/svg/GoogleIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "MinimalPlugin.tsx",
          "path": "client/src/components/svg/MinimalPlugin.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function MinimalPlugin({"
          }
        },
        {
          "name": "SendIcon.tsx",
          "path": "client/src/components/svg/SendIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "GoogleMinimalIcon.tsx",
          "path": "client/src/components/svg/GoogleMinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "Spinner.tsx",
          "path": "client/src/components/svg/Spinner.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils/';"
          }
        },
        {
          "name": "BedrockIcon.tsx",
          "path": "client/src/components/svg/BedrockIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "ChatGPTMinimalIcon.tsx",
          "path": "client/src/components/svg/ChatGPTMinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "StopGeneratingIcon.tsx",
          "path": "client/src/components/svg/StopGeneratingIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "VolumeIcon.tsx",
          "path": "client/src/components/svg/VolumeIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "GithubIcon.tsx",
          "path": "client/src/components/svg/GithubIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LockIcon.tsx",
          "path": "client/src/components/svg/LockIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function LockIcon() {"
          }
        },
        {
          "name": "ExperimentIcon.tsx",
          "path": "client/src/components/svg/ExperimentIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function ExperimentIcon() {"
          }
        },
        {
          "name": "LikeIcon.tsx",
          "path": "client/src/components/svg/LikeIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": [
        "Files"
      ]
    },
    {
      "folder": "client/src/components/svg/Files",
      "files": [
        {
          "name": "CodePaths.tsx",
          "path": "client/src/components/svg/Files/CodePaths.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function CodePaths() {"
          }
        },
        {
          "name": "FilePaths.tsx",
          "path": "client/src/components/svg/Files/FilePaths.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function FilePaths() {"
          }
        },
        {
          "name": "TextPaths.tsx",
          "path": "client/src/components/svg/Files/TextPaths.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function TextPaths() {"
          }
        },
        {
          "name": "FileIcon.tsx",
          "path": "client/src/components/svg/Files/FileIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TFile } from 'librechat-data-provider';"
          }
        },
        {
          "name": "SheetPaths.tsx",
          "path": "client/src/components/svg/Files/SheetPaths.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function SheetPaths() {"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/ui",
      "files": [
        {
          "name": "Prompt.tsx",
          "path": "client/src/components/ui/Prompt.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useLocalize } from '~/hooks';"
          }
        },
        {
          "name": "OriginalDialog.tsx",
          "path": "client/src/components/ui/OriginalDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "DialogTemplate.tsx",
          "path": "client/src/components/ui/DialogTemplate.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { forwardRef, ReactNode, Ref } from 'react';"
          }
        },
        {
          "name": "DropdownPopup.tsx",
          "path": "client/src/components/ui/DropdownPopup.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "DataTableColumnHeader.tsx",
          "path": "client/src/components/ui/DataTableColumnHeader.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { ArrowDownIcon, ArrowUpIcon, CaretSortIcon, EyeNoneIcon } from '@radix-ui/react-icons';"
          }
        },
        {
          "name": "Pagination.tsx",
          "path": "client/src/components/ui/Pagination.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "AlertDialog.tsx",
          "path": "client/src/components/ui/AlertDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "DropdownNoState.tsx",
          "path": "client/src/components/ui/DropdownNoState.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { FC } from 'react';"
          }
        },
        {
          "name": "Tabs.tsx",
          "path": "client/src/components/ui/Tabs.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Slider.tsx",
          "path": "client/src/components/ui/Slider.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Progress.tsx",
          "path": "client/src/components/ui/Progress.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "DialogTemplate.spec.tsx",
          "path": "client/src/components/ui/DialogTemplate.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import 'test/matchMedia.mock';"
          }
        },
        {
          "name": "SelectDropDownPop.tsx",
          "path": "client/src/components/ui/SelectDropDownPop.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "ThemeSelector.tsx",
          "path": "client/src/components/ui/ThemeSelector.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useContext, useCallback, useEffect, useState } from 'react';"
          }
        },
        {
          "name": "SelectDropDown.tsx",
          "path": "client/src/components/ui/SelectDropDown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useRef } from 'react';"
          }
        },
        {
          "name": "MultiSearch.tsx",
          "path": "client/src/components/ui/MultiSearch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Search, X } from 'lucide-react';"
          }
        },
        {
          "name": "Resizable.tsx",
          "path": "client/src/components/ui/Resizable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { GripVertical } from 'lucide-react';"
          }
        },
        {
          "name": "Label.tsx",
          "path": "client/src/components/ui/Label.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Accordion.tsx",
          "path": "client/src/components/ui/Accordion.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Tooltip.tsx",
          "path": "client/src/components/ui/Tooltip.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Ariakit from '@ariakit/react';"
          }
        },
        {
          "name": "Combobox.tsx",
          "path": "client/src/components/ui/Combobox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { startTransition } from 'react';"
          }
        },
        {
          "name": "Tag.tsx",
          "path": "client/src/components/ui/Tag.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "HoverCard.tsx",
          "path": "client/src/components/ui/HoverCard.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Switch.tsx",
          "path": "client/src/components/ui/Switch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "FileUpload.tsx",
          "path": "client/src/components/ui/FileUpload.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { forwardRef } from 'react';"
          }
        },
        {
          "name": "Breadcrumb.tsx",
          "path": "client/src/components/ui/Breadcrumb.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "ControlCombobox.tsx",
          "path": "client/src/components/ui/ControlCombobox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Ariakit from '@ariakit/react';"
          }
        },
        {
          "name": "TermsAndConditionsModal.tsx",
          "path": "client/src/components/ui/TermsAndConditionsModal.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "Dropdown.tsx",
          "path": "client/src/components/ui/Dropdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "InputWithDropDown.tsx",
          "path": "client/src/components/ui/InputWithDropDown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "InputOTP.tsx",
          "path": "client/src/components/ui/InputOTP.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "AnimatedSearchInput.tsx",
          "path": "client/src/components/ui/AnimatedSearchInput.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "DataTable.tsx",
          "path": "client/src/components/ui/DataTable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useCallback, useEffect, useRef, useState, memo, useMemo } from 'react';"
          }
        },
        {
          "name": "DelayedRender.tsx",
          "path": "client/src/components/ui/DelayedRender.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useDelayedRender } from '~/hooks';"
          }
        },
        {
          "name": "Dialog.tsx",
          "path": "client/src/components/ui/Dialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "OGDialogTemplate.tsx",
          "path": "client/src/components/ui/OGDialogTemplate.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { forwardRef, ReactNode, Ref } from 'react';"
          }
        },
        {
          "name": "InputCombobox.tsx",
          "path": "client/src/components/ui/InputCombobox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "DropdownMenu.tsx",
          "path": "client/src/components/ui/DropdownMenu.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Table.tsx",
          "path": "client/src/components/ui/Table.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/ui/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './AlertDialog';"
          }
        },
        {
          "name": "MultiSelectDropDown.tsx",
          "path": "client/src/components/ui/MultiSelectDropDown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useRef } from 'react';"
          }
        },
        {
          "name": "Separator.tsx",
          "path": "client/src/components/ui/Separator.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "ModelParameters.tsx",
          "path": "client/src/components/ui/ModelParameters.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useCallback, useRef, useEffect } from 'react';"
          }
        },
        {
          "name": "Button.tsx",
          "path": "client/src/components/ui/Button.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "TextareaAutosize.tsx",
          "path": "client/src/components/ui/TextareaAutosize.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "Toast.tsx",
          "path": "client/src/components/ui/Toast.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as RadixToast from '@radix-ui/react-toast';"
          }
        },
        {
          "name": "Checkbox.tsx",
          "path": "client/src/components/ui/Checkbox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Collapsible.tsx",
          "path": "client/src/components/ui/Collapsible.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as CollapsiblePrimitive from '@radix-ui/react-collapsible';"
          }
        },
        {
          "name": "Select.tsx",
          "path": "client/src/components/ui/Select.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "'use client';"
          }
        },
        {
          "name": "Textarea.tsx",
          "path": "client/src/components/ui/Textarea.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "/* eslint-disable */"
          }
        },
        {
          "name": "Input.tsx",
          "path": "client/src/components/ui/Input.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "QuestionMark.tsx",
          "path": "client/src/components/ui/QuestionMark.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "InputNumber.tsx",
          "path": "client/src/components/ui/InputNumber.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "Skeleton.tsx",
          "path": "client/src/components/ui/Skeleton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "MultiSelectPop.tsx",
          "path": "client/src/components/ui/MultiSelectPop.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Wrench } from 'lucide-react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Artifacts",
      "files": [
        {
          "name": "ArtifactButton.tsx",
          "path": "client/src/components/Artifacts/ArtifactButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "useDebounceCodeBlock.ts",
          "path": "client/src/components/Artifacts/useDebounceCodeBlock.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// client/src/hooks/useDebounceCodeBlock.ts"
          }
        },
        {
          "name": "Code.tsx",
          "path": "client/src/components/Artifacts/Code.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { memo, useEffect, useRef, useState } from 'react';"
          }
        },
        {
          "name": "DownloadArtifact.tsx",
          "path": "client/src/components/Artifacts/DownloadArtifact.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "ArtifactPreview.tsx",
          "path": "client/src/components/Artifacts/ArtifactPreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { memo, useMemo } from 'react';"
          }
        },
        {
          "name": "Mermaid.tsx",
          "path": "client/src/components/Artifacts/Mermaid.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect, useRef, useState } from 'react';"
          }
        },
        {
          "name": "ArtifactCodeEditor.tsx",
          "path": "client/src/components/Artifacts/ArtifactCodeEditor.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "ArtifactTabs.tsx",
          "path": "client/src/components/Artifacts/ArtifactTabs.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRef } from 'react';"
          }
        },
        {
          "name": "Artifact.tsx",
          "path": "client/src/components/Artifacts/Artifact.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect, useCallback, useRef, useState } from 'react';"
          }
        },
        {
          "name": "Thinking.tsx",
          "path": "client/src/components/Artifacts/Thinking.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useMemo, memo, useCallback } from 'react';"
          }
        },
        {
          "name": "Artifacts.tsx",
          "path": "client/src/components/Artifacts/Artifacts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRef, useState, useEffect } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Tools",
      "files": [
        {
          "name": "ToolSelectDialog.tsx",
          "path": "client/src/components/Tools/ToolSelectDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "ToolItem.tsx",
          "path": "client/src/components/Tools/ToolItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { TPlugin } from 'librechat-data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Tools/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as ToolSelectDialog } from './ToolSelectDialog';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Messages",
      "files": [
        {
          "name": "ContentRender.tsx",
          "path": "client/src/components/Messages/ContentRender.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "MessageContent.tsx",
          "path": "client/src/components/Messages/MessageContent.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "ScrollToBottom.tsx",
          "path": "client/src/components/Messages/ScrollToBottom.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": [
        "Content"
      ]
    },
    {
      "folder": "client/src/components/Messages/Content",
      "files": [
        {
          "name": "ResultSwitcher.tsx",
          "path": "client/src/components/Messages/Content/ResultSwitcher.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "interface ResultSwitcherProps {"
          }
        },
        {
          "name": "RunCode.tsx",
          "path": "client/src/components/Messages/Content/RunCode.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "Container.tsx",
          "path": "client/src/components/Messages/Content/Container.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "// Container Component"
          }
        },
        {
          "name": "Plugin.tsx",
          "path": "client/src/components/Messages/Content/Plugin.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Disclosure, DisclosureButton, DisclosurePanel } from '@headlessui/react';"
          }
        },
        {
          "name": "Error.tsx",
          "path": "client/src/components/Messages/Content/Error.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "// file deepcode ignore HardcodedNonCryptoSecret: No hardcoded secrets"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Messages/Content/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as SubRow } from './SubRow';"
          }
        },
        {
          "name": "SubRow.tsx",
          "path": "client/src/components/Messages/Content/SubRow.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "type TSubRowProps = {"
          }
        },
        {
          "name": "CodeBlock.tsx",
          "path": "client/src/components/Messages/Content/CodeBlock.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import copy from 'copy-to-clipboard';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Endpoints",
      "files": [
        {
          "name": "MessageEndpointIcon.tsx",
          "path": "client/src/components/Endpoints/MessageEndpointIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "EndpointSettings.tsx",
          "path": "client/src/components/Endpoints/EndpointSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "AlternativeSettings.tsx",
          "path": "client/src/components/Endpoints/AlternativeSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "ConvoIcon.tsx",
          "path": "client/src/components/Endpoints/ConvoIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo } from 'react';"
          }
        },
        {
          "name": "SaveAsPresetDialog.tsx",
          "path": "client/src/components/Endpoints/SaveAsPresetDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect, useState } from 'react';"
          }
        },
        {
          "name": "Icon.tsx",
          "path": "client/src/components/Endpoints/Icon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { memo } from 'react';"
          }
        },
        {
          "name": "URLIcon.tsx",
          "path": "client/src/components/Endpoints/URLIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { memo } from 'react';"
          }
        },
        {
          "name": "EndpointIcon.tsx",
          "path": "client/src/components/Endpoints/EndpointIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { isAssistantsEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "ConvoIconURL.tsx",
          "path": "client/src/components/Endpoints/ConvoIconURL.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useMemo } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Endpoints/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as Icon } from './Icon';"
          }
        },
        {
          "name": "MinimalIcon.tsx",
          "path": "client/src/components/Endpoints/MinimalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Feather } from 'lucide-react';"
          }
        }
      ],
      "subfolders": [
        "Settings"
      ]
    },
    {
      "folder": "client/src/components/Endpoints/Settings",
      "files": [
        {
          "name": "OpenAI.tsx",
          "path": "client/src/components/Endpoints/Settings/OpenAI.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "Assistants.tsx",
          "path": "client/src/components/Endpoints/Settings/Assistants.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useMemo, useEffect } from 'react';"
          }
        },
        {
          "name": "Bedrock.tsx",
          "path": "client/src/components/Endpoints/Settings/Bedrock.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "Plugins.tsx",
          "path": "client/src/components/Endpoints/Settings/Plugins.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "settings.ts",
          "path": "client/src/components/Endpoints/Settings/settings.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EModelEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "Examples.tsx",
          "path": "client/src/components/Endpoints/Settings/Examples.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AgentSettings.tsx",
          "path": "client/src/components/Endpoints/Settings/AgentSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TModelSelectProps } from '~/common';"
          }
        },
        {
          "name": "OptionHover.tsx",
          "path": "client/src/components/Endpoints/Settings/OptionHover.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Endpoints/Settings/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as Advanced } from './Advanced';"
          }
        },
        {
          "name": "Anthropic.tsx",
          "path": "client/src/components/Endpoints/Settings/Anthropic.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "Advanced.tsx",
          "path": "client/src/components/Endpoints/Settings/Advanced.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import TextareaAutosize from 'react-textarea-autosize';"
          }
        },
        {
          "name": "Google.tsx",
          "path": "client/src/components/Endpoints/Settings/Google.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import TextareaAutosize from 'react-textarea-autosize';"
          }
        }
      ],
      "subfolders": [
        "MultiView"
      ]
    },
    {
      "folder": "client/src/components/Endpoints/Settings/MultiView",
      "files": [
        {
          "name": "PluginSettings.tsx",
          "path": "client/src/components/Endpoints/Settings/MultiView/PluginSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import Settings from '../Plugins';"
          }
        },
        {
          "name": "GoogleSettings.tsx",
          "path": "client/src/components/Endpoints/Settings/MultiView/GoogleSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import Settings from '../Google';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Endpoints/Settings/MultiView/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as GoogleSettings } from './GoogleSettings';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat",
      "files": [
        {
          "name": "ConvoStarter.tsx",
          "path": "client/src/components/Chat/ConvoStarter.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "interface ConvoStarterProps {"
          }
        },
        {
          "name": "AddMultiConvo.tsx",
          "path": "client/src/components/Chat/AddMultiConvo.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { PlusCircle } from 'lucide-react';"
          }
        },
        {
          "name": "Prompts.tsx",
          "path": "client/src/components/Chat/Prompts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { ChevronLeft, ChevronRight } from 'lucide-react';"
          }
        },
        {
          "name": "Presentation.tsx",
          "path": "client/src/components/Chat/Presentation.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "Footer.tsx",
          "path": "client/src/components/Chat/Footer.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect } from 'react';"
          }
        },
        {
          "name": "ChatView.tsx",
          "path": "client/src/components/Chat/ChatView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useCallback } from 'react';"
          }
        },
        {
          "name": "PromptCard.tsx",
          "path": "client/src/components/Chat/PromptCard.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { TPromptGroup } from 'librechat-data-provider';"
          }
        },
        {
          "name": "Header.tsx",
          "path": "client/src/components/Chat/Header.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "Landing.tsx",
          "path": "client/src/components/Chat/Landing.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "ExportAndShareMenu.tsx",
          "path": "client/src/components/Chat/ExportAndShareMenu.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useId, useRef } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Messages",
        "Input",
        "Menus"
      ]
    },
    {
      "folder": "client/src/components/Chat/Messages",
      "files": [
        {
          "name": "MessagesView.tsx",
          "path": "client/src/components/Chat/Messages/MessagesView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "SiblingSwitch.tsx",
          "path": "client/src/components/Chat/Messages/SiblingSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TMessageProps } from '~/common';"
          }
        },
        {
          "name": "SearchButtons.tsx",
          "path": "client/src/components/Chat/Messages/SearchButtons.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Link } from 'lucide-react';"
          }
        },
        {
          "name": "HoverButtons.tsx",
          "path": "client/src/components/Chat/Messages/HoverButtons.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "MinimalMessages.tsx",
          "path": "client/src/components/Chat/Messages/MinimalMessages.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "MessageParts.tsx",
          "path": "client/src/components/Chat/Messages/MessageParts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo } from 'react';"
          }
        },
        {
          "name": "MessageAudio.tsx",
          "path": "client/src/components/Chat/Messages/MessageAudio.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "SearchMessage.tsx",
          "path": "client/src/components/Chat/Messages/SearchMessage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "MultiMessage.tsx",
          "path": "client/src/components/Chat/Messages/MultiMessage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "Message.tsx",
          "path": "client/src/components/Chat/Messages/Message.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "SubRow.tsx",
          "path": "client/src/components/Chat/Messages/SubRow.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn } from '~/utils';"
          }
        },
        {
          "name": "MinimalHoverButtons.tsx",
          "path": "client/src/components/Chat/Messages/MinimalHoverButtons.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "MessageIcon.tsx",
          "path": "client/src/components/Chat/Messages/MessageIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo, memo } from 'react';"
          }
        }
      ],
      "subfolders": [
        "ui",
        "Content"
      ]
    },
    {
      "folder": "client/src/components/Chat/Messages/ui",
      "files": [
        {
          "name": "MessageRender.tsx",
          "path": "client/src/components/Chat/Messages/ui/MessageRender.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "PlaceholderRow.tsx",
          "path": "client/src/components/Chat/Messages/ui/PlaceholderRow.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat/Messages/Content",
      "files": [
        {
          "name": "ProgressCircle.tsx",
          "path": "client/src/components/Chat/Messages/Content/ProgressCircle.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function ProgressCircle({"
          }
        },
        {
          "name": "Markdown.tsx",
          "path": "client/src/components/Chat/Messages/Content/Markdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { memo, useMemo, useRef, useEffect } from 'react';"
          }
        },
        {
          "name": "Container.tsx",
          "path": "client/src/components/Chat/Messages/Content/Container.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { TMessage } from 'librechat-data-provider';"
          }
        },
        {
          "name": "RetrievalIcon.tsx",
          "path": "client/src/components/Chat/Messages/Content/RetrievalIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function RetrievalIcon() {"
          }
        },
        {
          "name": "ProgressText.tsx",
          "path": "client/src/components/Chat/Messages/Content/ProgressText.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Popover from '@radix-ui/react-popover';"
          }
        },
        {
          "name": "WrenchIcon.tsx",
          "path": "client/src/components/Chat/Messages/Content/WrenchIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useEffect } from 'react';"
          }
        },
        {
          "name": "CodeAnalyze.tsx",
          "path": "client/src/components/Chat/Messages/Content/CodeAnalyze.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "Files.tsx",
          "path": "client/src/components/Chat/Messages/Content/Files.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, memo } from 'react';"
          }
        },
        {
          "name": "ImageGen.tsx",
          "path": "client/src/components/Chat/Messages/Content/ImageGen.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "InProgressCall.tsx",
          "path": "client/src/components/Chat/Messages/Content/InProgressCall.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import CancelledIcon from './CancelledIcon';"
          }
        },
        {
          "name": "ToolCall.tsx",
          "path": "client/src/components/Chat/Messages/Content/ToolCall.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "CancelledIcon.tsx",
          "path": "client/src/components/Chat/Messages/Content/CancelledIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function CancelledIcon() {"
          }
        },
        {
          "name": "MessageContent.tsx",
          "path": "client/src/components/Chat/Messages/Content/MessageContent.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, Suspense, useMemo } from 'react';"
          }
        },
        {
          "name": "ToolPopover.tsx",
          "path": "client/src/components/Chat/Messages/Content/ToolPopover.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Popover from '@radix-ui/react-popover';"
          }
        },
        {
          "name": "Part.tsx",
          "path": "client/src/components/Chat/Messages/Content/Part.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "DialogImage.tsx",
          "path": "client/src/components/Chat/Messages/Content/DialogImage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Dialog from '@radix-ui/react-dialog';"
          }
        },
        {
          "name": "Image.tsx",
          "path": "client/src/components/Chat/Messages/Content/Image.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useRef, useMemo } from 'react';"
          }
        },
        {
          "name": "FinishedIcon.tsx",
          "path": "client/src/components/Chat/Messages/Content/FinishedIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function FinishedIcon() {"
          }
        },
        {
          "name": "ContentParts.tsx",
          "path": "client/src/components/Chat/Messages/Content/ContentParts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useMemo, useState } from 'react';"
          }
        },
        {
          "name": "RetrievalCall.tsx",
          "path": "client/src/components/Chat/Messages/Content/RetrievalCall.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import ProgressCircle from './ProgressCircle';"
          }
        },
        {
          "name": "MarkdownLite.tsx",
          "path": "client/src/components/Chat/Messages/Content/MarkdownLite.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "ActionIcon.tsx",
          "path": "client/src/components/Chat/Messages/Content/ActionIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function ActionIcon() {"
          }
        },
        {
          "name": "EditMessage.tsx",
          "path": "client/src/components/Chat/Messages/Content/EditMessage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRef, useEffect, useCallback } from 'react';"
          }
        },
        {
          "name": "SearchContent.tsx",
          "path": "client/src/components/Chat/Messages/Content/SearchContent.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Suspense } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Parts"
      ]
    },
    {
      "folder": "client/src/components/Chat/Messages/Content/Parts",
      "files": [
        {
          "name": "Reasoning.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/Reasoning.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useMemo } from 'react';"
          }
        },
        {
          "name": "ExecuteCode.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/ExecuteCode.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo, useState } from 'react';"
          }
        },
        {
          "name": "LogContent.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/LogContent.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { isAfter } from 'date-fns';"
          }
        },
        {
          "name": "Text.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/Text.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useMemo, ReactElement } from 'react';"
          }
        },
        {
          "name": "CodeProgress.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/CodeProgress.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import ProgressCircle from '~/components/Chat/Messages/Content/ProgressCircle';"
          }
        },
        {
          "name": "EditTextPart.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/EditTextPart.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useForm } from 'react-hook-form';"
          }
        },
        {
          "name": "Attachment.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/Attachment.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { imageExtRegex } from 'librechat-data-provider';"
          }
        },
        {
          "name": "LogLink.tsx",
          "path": "client/src/components/Chat/Messages/Content/Parts/LogLink.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat/Input",
      "files": [
        {
          "name": "HeaderOptions.tsx",
          "path": "client/src/components/Chat/Input/HeaderOptions.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "PopoverButtons.tsx",
          "path": "client/src/components/Chat/Input/PopoverButtons.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "PromptsCommand.tsx",
          "path": "client/src/components/Chat/Input/PromptsCommand.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef, useEffect, useMemo, memo, useCallback } from 'react';"
          }
        },
        {
          "name": "CircleRender.tsx",
          "path": "client/src/components/Chat/Input/CircleRender.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CollapseChat.tsx",
          "path": "client/src/components/Chat/Input/CollapseChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AddedConvo.tsx",
          "path": "client/src/components/Chat/Input/AddedConvo.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "OptionsPopover.tsx",
          "path": "client/src/components/Chat/Input/OptionsPopover.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRef } from 'react';"
          }
        },
        {
          "name": "StopButton.tsx",
          "path": "client/src/components/Chat/Input/StopButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { TooltipAnchor } from '~/components/ui';"
          }
        },
        {
          "name": "SendButton.tsx",
          "path": "client/src/components/Chat/Input/SendButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { forwardRef } from 'react';"
          }
        },
        {
          "name": "Mention.tsx",
          "path": "client/src/components/Chat/Input/Mention.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef, useEffect } from 'react';"
          }
        },
        {
          "name": "TemporaryChat.tsx",
          "path": "client/src/components/Chat/Input/TemporaryChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { MessageCircleDashed, X } from 'lucide-react';"
          }
        },
        {
          "name": "MentionItem.tsx",
          "path": "client/src/components/Chat/Input/MentionItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "StreamAudio.tsx",
          "path": "client/src/components/Chat/Input/StreamAudio.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useParams } from 'react-router-dom';"
          }
        },
        {
          "name": "TextareaHeader.tsx",
          "path": "client/src/components/Chat/Input/TextareaHeader.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import AddedConvo from './AddedConvo';"
          }
        },
        {
          "name": "ActiveSetting.tsx",
          "path": "client/src/components/Chat/Input/ActiveSetting.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function ActiveSetting() {"
          }
        },
        {
          "name": "AudioRecorder.tsx",
          "path": "client/src/components/Chat/Input/AudioRecorder.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "ChatForm.tsx",
          "path": "client/src/components/Chat/Input/ChatForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useRef, useMemo, useEffect, useState } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Files"
      ]
    },
    {
      "folder": "client/src/components/Chat/Input/Files",
      "files": [
        {
          "name": "ProgressCircle.tsx",
          "path": "client/src/components/Chat/Input/Files/ProgressCircle.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function ProgressCircle({"
          }
        },
        {
          "name": "AttachFile.tsx",
          "path": "client/src/components/Chat/Input/Files/AttachFile.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useRef } from 'react';"
          }
        },
        {
          "name": "FilePreview.tsx",
          "path": "client/src/components/Chat/Input/Files/FilePreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TFile } from 'librechat-data-provider';"
          }
        },
        {
          "name": "DragDropModal.tsx",
          "path": "client/src/components/Chat/Input/Files/DragDropModal.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo } from 'react';"
          }
        },
        {
          "name": "AttachFileMenu.tsx",
          "path": "client/src/components/Chat/Input/Files/AttachFileMenu.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Ariakit from '@ariakit/react';"
          }
        },
        {
          "name": "FileContainer.tsx",
          "path": "client/src/components/Chat/Input/Files/FileContainer.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TFile } from 'librechat-data-provider';"
          }
        },
        {
          "name": "FileFormWrapper.tsx",
          "path": "client/src/components/Chat/Input/Files/FileFormWrapper.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useMemo } from 'react';"
          }
        },
        {
          "name": "FileUpload.tsx",
          "path": "client/src/components/Chat/Input/Files/FileUpload.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "FileRow.tsx",
          "path": "client/src/components/Chat/Input/Files/FileRow.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "ImagePreview.tsx",
          "path": "client/src/components/Chat/Input/Files/ImagePreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useEffect, useCallback } from 'react';"
          }
        },
        {
          "name": "DragDropOverlay.tsx",
          "path": "client/src/components/Chat/Input/Files/DragDropOverlay.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function DragDropOverlay() {"
          }
        },
        {
          "name": "FilesView.tsx",
          "path": "client/src/components/Chat/Input/Files/FilesView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { FileSources, FileContext } from 'librechat-data-provider';"
          }
        },
        {
          "name": "DragDropWrapper.tsx",
          "path": "client/src/components/Chat/Input/Files/DragDropWrapper.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useDragHelpers } from '~/hooks';"
          }
        },
        {
          "name": "SourceIcon.tsx",
          "path": "client/src/components/Chat/Input/Files/SourceIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Terminal, Type, Database } from 'lucide-react';"
          }
        },
        {
          "name": "RemoveFile.tsx",
          "path": "client/src/components/Chat/Input/Files/RemoveFile.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export default function RemoveFile({ onRemove }: { onRemove: () => void }) {"
          }
        },
        {
          "name": "Image.tsx",
          "path": "client/src/components/Chat/Input/Files/Image.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { FileSources } from 'librechat-data-provider';"
          }
        }
      ],
      "subfolders": [
        "Table"
      ]
    },
    {
      "folder": "client/src/components/Chat/Input/Files/Table",
      "files": [
        {
          "name": "fakeData.ts",
          "path": "client/src/components/Chat/Input/Files/Table/fakeData.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { FileSources } from 'librechat-data-provider';"
          }
        },
        {
          "name": "Columns.tsx",
          "path": "client/src/components/Chat/Input/Files/Table/Columns.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "(Empty content)"
          }
        },
        {
          "name": "TemplateTable.tsx",
          "path": "client/src/components/Chat/Input/Files/Table/TemplateTable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { DotsIcon, TrashIcon } from '~/components/svg';"
          }
        },
        {
          "name": "SortFilterHeader.tsx",
          "path": "client/src/components/Chat/Input/Files/Table/SortFilterHeader.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Column } from '@tanstack/react-table';"
          }
        },
        {
          "name": "DataTable.tsx",
          "path": "client/src/components/Chat/Input/Files/Table/DataTable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Chat/Input/Files/Table/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { columns } from './Columns';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat/Menus",
      "files": [
        {
          "name": "BookmarkMenu.tsx",
          "path": "client/src/components/Chat/Menus/BookmarkMenu.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useId, useCallback, useMemo, useRef } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Chat/Menus/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as PresetsMenu } from './PresetsMenu';"
          }
        },
        {
          "name": "EndpointsMenu.tsx",
          "path": "client/src/components/Chat/Menus/EndpointsMenu.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "PresetsMenu.tsx",
          "path": "client/src/components/Chat/Menus/PresetsMenu.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { FC } from 'react';"
          }
        },
        {
          "name": "HeaderNewChat.tsx",
          "path": "client/src/components/Chat/Menus/HeaderNewChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useQueryClient } from '@tanstack/react-query';"
          }
        }
      ],
      "subfolders": [
        "UI",
        "Endpoints",
        "Models",
        "Bookmarks",
        "Presets"
      ]
    },
    {
      "folder": "client/src/components/Chat/Menus/UI",
      "files": [
        {
          "name": "MenuSeparator.tsx",
          "path": "client/src/components/Chat/Menus/UI/MenuSeparator.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { FC } from 'react';"
          }
        },
        {
          "name": "MenuItem.tsx",
          "path": "client/src/components/Chat/Menus/UI/MenuItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { FC } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Chat/Menus/UI/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as MenuItem } from './MenuItem';"
          }
        },
        {
          "name": "TitleButton.tsx",
          "path": "client/src/components/Chat/Menus/UI/TitleButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat/Menus/Endpoints",
      "files": [
        {
          "name": "MenuItems.tsx",
          "path": "client/src/components/Chat/Menus/Endpoints/MenuItems.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { FC } from 'react';"
          }
        },
        {
          "name": "MenuItem.tsx",
          "path": "client/src/components/Chat/Menus/Endpoints/MenuItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "Icons.tsx",
          "path": "client/src/components/Chat/Menus/Endpoints/Icons.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { EModelEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "UnknownIcon.tsx",
          "path": "client/src/components/Chat/Menus/Endpoints/UnknownIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat/Menus/Models",
      "files": [
        {
          "name": "fakeData.ts",
          "path": "client/src/components/Chat/Menus/Models/fakeData.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EModelEndpoint, AuthType } from 'librechat-data-provider';"
          }
        },
        {
          "name": "MenuButton.tsx",
          "path": "client/src/components/Chat/Menus/Models/MenuButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "SpecIcon.tsx",
          "path": "client/src/components/Chat/Menus/Models/SpecIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { memo } from 'react';"
          }
        },
        {
          "name": "ModelSpecsMenu.tsx",
          "path": "client/src/components/Chat/Menus/Models/ModelSpecsMenu.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "ModelSpecs.tsx",
          "path": "client/src/components/Chat/Menus/Models/ModelSpecs.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { FC } from 'react';"
          }
        },
        {
          "name": "ModelSpec.tsx",
          "path": "client/src/components/Chat/Menus/Models/ModelSpec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useMemo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat/Menus/Bookmarks",
      "files": [
        {
          "name": "BookmarkMenuItems.tsx",
          "path": "client/src/components/Chat/Menus/Bookmarks/BookmarkMenuItems.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Chat/Menus/Presets",
      "files": [
        {
          "name": "PresetItems.tsx",
          "path": "client/src/components/Chat/Menus/Presets/PresetItems.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "EditPresetDialog.tsx",
          "path": "client/src/components/Chat/Menus/Presets/EditPresetDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Chat/Menus/Presets/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as EditPresetDialog } from './EditPresetDialog';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Auth",
      "files": [
        {
          "name": "SocialButton.tsx",
          "path": "client/src/components/Auth/SocialButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LoginForm.tsx",
          "path": "client/src/components/Auth/LoginForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useForm } from 'react-hook-form';"
          }
        },
        {
          "name": "AuthLayout.tsx",
          "path": "client/src/components/Auth/AuthLayout.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { TranslationKeys, useLocalize } from '~/hooks';"
          }
        },
        {
          "name": "Login.tsx",
          "path": "client/src/components/Auth/Login.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useOutletContext } from 'react-router-dom';"
          }
        },
        {
          "name": "ErrorMessage.tsx",
          "path": "client/src/components/Auth/ErrorMessage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export const ErrorMessage = ({ children }: { children: React.ReactNode }) => ("
          }
        },
        {
          "name": "RequestPasswordReset.tsx",
          "path": "client/src/components/Auth/RequestPasswordReset.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useForm } from 'react-hook-form';"
          }
        },
        {
          "name": "Footer.tsx",
          "path": "client/src/components/Auth/Footer.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useLocalize } from '~/hooks';"
          }
        },
        {
          "name": "ResetPassword.tsx",
          "path": "client/src/components/Auth/ResetPassword.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useForm } from 'react-hook-form';"
          }
        },
        {
          "name": "SocialLoginRender.tsx",
          "path": "client/src/components/Auth/SocialLoginRender.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { GoogleIcon, FacebookIcon, OpenIDIcon, GithubIcon, DiscordIcon, AppleIcon } from '~/componen"
          }
        },
        {
          "name": "ApiErrorWatcher.tsx",
          "path": "client/src/components/Auth/ApiErrorWatcher.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Auth/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as Login } from './Login';"
          }
        },
        {
          "name": "Registration.tsx",
          "path": "client/src/components/Auth/Registration.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useForm } from 'react-hook-form';"
          }
        },
        {
          "name": "BlinkAnimation.tsx",
          "path": "client/src/components/Auth/BlinkAnimation.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export const BlinkAnimation = ({"
          }
        },
        {
          "name": "TwoFactorScreen.tsx",
          "path": "client/src/components/Auth/TwoFactorScreen.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useCallback } from 'react';"
          }
        },
        {
          "name": "VerifyEmail.tsx",
          "path": "client/src/components/Auth/VerifyEmail.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useSearchParams, useNavigate } from 'react-router-dom';"
          }
        }
      ],
      "subfolders": [
        "__tests__"
      ]
    },
    {
      "folder": "client/src/components/Auth/__tests__",
      "files": [
        {
          "name": "Login.spec.tsx",
          "path": "client/src/components/Auth/__tests__/Login.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import reactRouter from 'react-router-dom';"
          }
        },
        {
          "name": "LoginForm.spec.tsx",
          "path": "client/src/components/Auth/__tests__/LoginForm.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { render, getByTestId } from 'test/layout-test-utils';"
          }
        },
        {
          "name": "Registration.spec.tsx",
          "path": "client/src/components/Auth/__tests__/Registration.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import reactRouter from 'react-router-dom';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Input/SetKeyDialog",
      "files": [
        {
          "name": "InputWithLabel.tsx",
          "path": "client/src/components/Input/SetKeyDialog/InputWithLabel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { forwardRef } from 'react';"
          }
        },
        {
          "name": "OpenAIConfig.tsx",
          "path": "client/src/components/Input/SetKeyDialog/OpenAIConfig.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { EModelEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "CustomEndpoint.tsx",
          "path": "client/src/components/Input/SetKeyDialog/CustomEndpoint.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { EModelEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "GoogleConfig.tsx",
          "path": "client/src/components/Input/SetKeyDialog/GoogleConfig.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "OtherConfig.tsx",
          "path": "client/src/components/Input/SetKeyDialog/OtherConfig.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "HelpText.tsx",
          "path": "client/src/components/Input/SetKeyDialog/HelpText.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Input/SetKeyDialog/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as SetKeyDialog } from './SetKeyDialog';"
          }
        },
        {
          "name": "SetKeyDialog.tsx",
          "path": "client/src/components/Input/SetKeyDialog/SetKeyDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Input/ModelSelect",
      "files": [
        {
          "name": "OpenAI.tsx",
          "path": "client/src/components/Input/ModelSelect/OpenAI.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { SelectDropDown, SelectDropDownPop } from '~/components/ui';"
          }
        },
        {
          "name": "ModelSelect.tsx",
          "path": "client/src/components/Input/ModelSelect/ModelSelect.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useGetModelsQuery } from 'librechat-data-provider/react-query';"
          }
        },
        {
          "name": "PluginsByIndex.tsx",
          "path": "client/src/components/Input/ModelSelect/PluginsByIndex.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "TemporaryChat.tsx",
          "path": "client/src/components/Input/ModelSelect/TemporaryChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Input/ModelSelect/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as ModelSelect } from './ModelSelect';"
          }
        },
        {
          "name": "Anthropic.tsx",
          "path": "client/src/components/Input/ModelSelect/Anthropic.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { SelectDropDown, SelectDropDownPop } from '~/components/ui';"
          }
        },
        {
          "name": "Google.tsx",
          "path": "client/src/components/Input/ModelSelect/Google.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { SelectDropDown, SelectDropDownPop } from '~/components/ui';"
          }
        },
        {
          "name": "ChatGPT.tsx",
          "path": "client/src/components/Input/ModelSelect/ChatGPT.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { SelectDropDown, SelectDropDownPop } from '~/components/ui';"
          }
        },
        {
          "name": "options.ts",
          "path": "client/src/components/Input/ModelSelect/options.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EModelEndpoint } from 'librechat-data-provider';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Input/Generations",
      "files": [
        {
          "name": "Continue.tsx",
          "path": "client/src/components/Input/Generations/Continue.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TGenButtonProps } from '~/common';"
          }
        },
        {
          "name": "Stop.tsx",
          "path": "client/src/components/Input/Generations/Stop.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TGenButtonProps } from '~/common';"
          }
        },
        {
          "name": "Regenerate.tsx",
          "path": "client/src/components/Input/Generations/Regenerate.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TGenButtonProps } from '~/common';"
          }
        },
        {
          "name": "Button.tsx",
          "path": "client/src/components/Input/Generations/Button.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { cn, removeFocusOutlines } from '~/utils/';"
          }
        }
      ],
      "subfolders": [
        "__tests__"
      ]
    },
    {
      "folder": "client/src/components/Input/Generations/__tests__",
      "files": [
        {
          "name": "Continue.spec.tsx",
          "path": "client/src/components/Input/Generations/__tests__/Continue.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { render, fireEvent } from 'test/layout-test-utils';"
          }
        },
        {
          "name": "Regenerate.spec.tsx",
          "path": "client/src/components/Input/Generations/__tests__/Regenerate.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { render, fireEvent } from 'test/layout-test-utils';"
          }
        },
        {
          "name": "Button.spec.tsx",
          "path": "client/src/components/Input/Generations/__tests__/Button.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { render, fireEvent } from '@testing-library/react';"
          }
        },
        {
          "name": "Stop.spec.tsx",
          "path": "client/src/components/Input/Generations/__tests__/Stop.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { render, fireEvent } from 'test/layout-test-utils';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Plugins",
      "files": [
        {
          "name": "index.ts",
          "path": "client/src/components/Plugins/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './Store';"
          }
        }
      ],
      "subfolders": [
        "Store"
      ]
    },
    {
      "folder": "client/src/components/Plugins/Store",
      "files": [
        {
          "name": "PluginStoreLinkButton.tsx",
          "path": "client/src/components/Plugins/Store/PluginStoreLinkButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "type TPluginStoreLinkButtonProps = {"
          }
        },
        {
          "name": "PluginAuthForm.tsx",
          "path": "client/src/components/Plugins/Store/PluginAuthForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Save } from 'lucide-react';"
          }
        },
        {
          "name": "styles.module.css",
          "path": "client/src/components/Plugins/Store/styles.module.css",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".css",
            "ai_description": "CSS stylesheet file",
            "extracted_description": "a {"
          }
        },
        {
          "name": "PluginPagination.tsx",
          "path": "client/src/components/Plugins/Store/PluginPagination.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "PluginStoreDialog.tsx",
          "path": "client/src/components/Plugins/Store/PluginStoreDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Search, X } from 'lucide-react';"
          }
        },
        {
          "name": "PluginTooltip.tsx",
          "path": "client/src/components/Plugins/Store/PluginTooltip.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { HoverCardPortal, HoverCardContent } from '~/components/ui';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Plugins/Store/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as PluginStoreDialog } from './PluginStoreDialog';"
          }
        },
        {
          "name": "PluginStoreItem.tsx",
          "path": "client/src/components/Plugins/Store/PluginStoreItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { TPlugin } from 'librechat-data-provider';"
          }
        }
      ],
      "subfolders": [
        "__tests__"
      ]
    },
    {
      "folder": "client/src/components/Plugins/Store/__tests__",
      "files": [
        {
          "name": "PluginAuthForm.spec.tsx",
          "path": "client/src/components/Plugins/Store/__tests__/PluginAuthForm.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { render, screen } from 'test/layout-test-utils';"
          }
        },
        {
          "name": "PluginStoreItem.spec.tsx",
          "path": "client/src/components/Plugins/Store/__tests__/PluginStoreItem.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import 'test/matchMedia.mock';"
          }
        },
        {
          "name": "PluginPagination.spec.tsx",
          "path": "client/src/components/Plugins/Store/__tests__/PluginPagination.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import 'test/matchMedia.mock';"
          }
        },
        {
          "name": "PluginStoreDialog.spec.tsx",
          "path": "client/src/components/Plugins/Store/__tests__/PluginStoreDialog.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { render, screen, fireEvent } from 'test/layout-test-utils';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/SidePanel",
      "files": [
        {
          "name": "Nav.tsx",
          "path": "client/src/components/SidePanel/Nav.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "AgentSwitcher.tsx",
          "path": "client/src/components/SidePanel/AgentSwitcher.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "SidePanel.tsx",
          "path": "client/src/components/SidePanel/SidePanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useCallback, useMemo, memo } from 'react';"
          }
        },
        {
          "name": "Switcher.tsx",
          "path": "client/src/components/SidePanel/Switcher.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { isAssistantsEndpoint, isAgentsEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "AssistantSwitcher.tsx",
          "path": "client/src/components/SidePanel/AssistantSwitcher.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "data.tsx",
          "path": "client/src/components/SidePanel/data.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "export const accounts = ["
          }
        },
        {
          "name": "SidePanelGroup.tsx",
          "path": "client/src/components/SidePanel/SidePanelGroup.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef, useCallback, useEffect, useMemo, memo } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/SidePanel/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as SidePanelGroup } from './SidePanelGroup';"
          }
        },
        {
          "name": "ModelSwitcher.tsx",
          "path": "client/src/components/SidePanel/ModelSwitcher.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, useRef, useCallback } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Agents",
        "Bookmarks",
        "Parameters",
        "Files",
        "Builder"
      ]
    },
    {
      "folder": "client/src/components/SidePanel/Agents",
      "files": [
        {
          "name": "DeleteButton.tsx",
          "path": "client/src/components/SidePanel/Agents/DeleteButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { Agent, AgentCreateParams } from 'librechat-data-provider';"
          }
        },
        {
          "name": "ActionsPanel.tsx",
          "path": "client/src/components/SidePanel/Agents/ActionsPanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "AgentAvatar.tsx",
          "path": "client/src/components/SidePanel/Agents/AgentAvatar.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Popover from '@radix-ui/react-popover';"
          }
        },
        {
          "name": "AgentTool.tsx",
          "path": "client/src/components/SidePanel/Agents/AgentTool.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "ShareAgent.tsx",
          "path": "client/src/components/SidePanel/Agents/ShareAgent.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "DuplicateAgent.tsx",
          "path": "client/src/components/SidePanel/Agents/DuplicateAgent.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { CopyIcon } from 'lucide-react';"
          }
        },
        {
          "name": "AgentPanel.tsx",
          "path": "client/src/components/SidePanel/Agents/AgentPanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Plus } from 'lucide-react';"
          }
        },
        {
          "name": "AgentSelect.tsx",
          "path": "client/src/components/SidePanel/Agents/AgentSelect.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { EarthIcon } from 'lucide-react';"
          }
        },
        {
          "name": "FileSearch.tsx",
          "path": "client/src/components/SidePanel/Agents/FileSearch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef } from 'react';"
          }
        },
        {
          "name": "FileSearchCheckbox.tsx",
          "path": "client/src/components/SidePanel/Agents/FileSearchCheckbox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { AgentCapabilities } from 'librechat-data-provider';"
          }
        },
        {
          "name": "Retrieval.tsx",
          "path": "client/src/components/SidePanel/Agents/Retrieval.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "ModelPanel.tsx",
          "path": "client/src/components/SidePanel/Agents/ModelPanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo, useEffect } from 'react';"
          }
        },
        {
          "name": "ActionsInput.tsx",
          "path": "client/src/components/SidePanel/Agents/ActionsInput.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "FileContext.tsx",
          "path": "client/src/components/SidePanel/Agents/FileContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef } from 'react';"
          }
        },
        {
          "name": "AgentPanelSkeleton.tsx",
          "path": "client/src/components/SidePanel/Agents/AgentPanelSkeleton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AdminSettings.tsx",
          "path": "client/src/components/SidePanel/Agents/AdminSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Ariakit from '@ariakit/react';"
          }
        },
        {
          "name": "Artifacts.tsx",
          "path": "client/src/components/SidePanel/Agents/Artifacts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useFormContext } from 'react-hook-form';"
          }
        },
        {
          "name": "ImageVision.tsx",
          "path": "client/src/components/SidePanel/Agents/ImageVision.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useFormContext, Controller } from 'react-hook-form';"
          }
        },
        {
          "name": "AgentPanelSwitch.tsx",
          "path": "client/src/components/SidePanel/Agents/AgentPanelSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "Images.tsx",
          "path": "client/src/components/SidePanel/Agents/Images.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRef } from 'react';"
          }
        },
        {
          "name": "AgentConfig.tsx",
          "path": "client/src/components/SidePanel/Agents/AgentConfig.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useMemo, useCallback } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Sequential",
        "Code",
        "ActionsTable"
      ]
    },
    {
      "folder": "client/src/components/SidePanel/Agents/Sequential",
      "files": [
        {
          "name": "SequentialAgents.tsx",
          "path": "client/src/components/SidePanel/Agents/Sequential/SequentialAgents.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Plus, X } from 'lucide-react';"
          }
        },
        {
          "name": "HideSequential.tsx",
          "path": "client/src/components/SidePanel/Agents/Sequential/HideSequential.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { AgentCapabilities } from 'librechat-data-provider';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/SidePanel/Agents/Code",
      "files": [
        {
          "name": "Action.tsx",
          "path": "client/src/components/SidePanel/Agents/Code/Action.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { KeyRoundIcon } from 'lucide-react';"
          }
        },
        {
          "name": "Files.tsx",
          "path": "client/src/components/SidePanel/Agents/Code/Files.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef } from 'react';"
          }
        },
        {
          "name": "ApiKeyDialog.tsx",
          "path": "client/src/components/SidePanel/Agents/Code/ApiKeyDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { UseFormRegister, UseFormHandleSubmit } from 'react-hook-form';"
          }
        },
        {
          "name": "Form.tsx",
          "path": "client/src/components/SidePanel/Agents/Code/Form.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Tools } from 'librechat-data-provider';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/SidePanel/Agents/ActionsTable",
      "files": [
        {
          "name": "Columns.tsx",
          "path": "client/src/components/SidePanel/Agents/ActionsTable/Columns.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { ColumnDef } from '@tanstack/react-table';"
          }
        },
        {
          "name": "Table.tsx",
          "path": "client/src/components/SidePanel/Agents/ActionsTable/Table.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useReactTable, flexRender, getCoreRowModel } from '@tanstack/react-table';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/SidePanel/Agents/ActionsTable/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as ActionsTable } from './Table';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/SidePanel/Bookmarks",
      "files": [
        {
          "name": "BookmarkTableRow.tsx",
          "path": "client/src/components/SidePanel/Bookmarks/BookmarkTableRow.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useRef } from 'react';"
          }
        },
        {
          "name": "BookmarkPanel.tsx",
          "path": "client/src/components/SidePanel/Bookmarks/BookmarkPanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useConversationTagsQuery } from '~/data-provider';"
          }
        },
        {
          "name": "BookmarkTable.tsx",
          "path": "client/src/components/SidePanel/Bookmarks/BookmarkTable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useCallback, useEffect, useState } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/SidePanel/Parameters",
      "files": [
        {
          "name": "DynamicCheckbox.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicCheckbox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, useState } from 'react';"
          }
        },
        {
          "name": "DynamicTextarea.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicTextarea.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { OptionTypes } from 'librechat-data-provider';"
          }
        },
        {
          "name": "DynamicInput.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicInput.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { OptionTypes } from 'librechat-data-provider';"
          }
        },
        {
          "name": "DynamicSlider.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicSlider.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, useCallback } from 'react';"
          }
        },
        {
          "name": "settings.ts",
          "path": "client/src/components/SidePanel/Parameters/settings.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "DynamicDropdown.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicDropdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, useState } from 'react';"
          }
        },
        {
          "name": "DynamicCombobox.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicCombobox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, useState, useCallback } from 'react';"
          }
        },
        {
          "name": "Panel.tsx",
          "path": "client/src/components/SidePanel/Parameters/Panel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { RotateCcw } from 'lucide-react';"
          }
        },
        {
          "name": "DynamicTags.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicTags.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useMemo, useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "OptionHover.tsx",
          "path": "client/src/components/SidePanel/Parameters/OptionHover.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "components.tsx",
          "path": "client/src/components/SidePanel/Parameters/components.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { ComponentTypes } from 'librechat-data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/SidePanel/Parameters/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as DynamicCombobox } from './DynamicCombobox';"
          }
        },
        {
          "name": "DynamicSwitch.tsx",
          "path": "client/src/components/SidePanel/Parameters/DynamicSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useMemo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/SidePanel/Files",
      "files": [
        {
          "name": "PanelColumns.tsx",
          "path": "client/src/components/SidePanel/Files/PanelColumns.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { ArrowUpDown } from 'lucide-react';"
          }
        },
        {
          "name": "PanelTable.tsx",
          "path": "client/src/components/SidePanel/Files/PanelTable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useCallback, useMemo } from 'react';"
          }
        },
        {
          "name": "PanelFileCell.tsx",
          "path": "client/src/components/SidePanel/Files/PanelFileCell.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { Row } from '@tanstack/react-table';"
          }
        },
        {
          "name": "Panel.tsx",
          "path": "client/src/components/SidePanel/Files/Panel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TFile } from 'librechat-data-provider';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/SidePanel/Builder",
      "files": [
        {
          "name": "PanelSwitch.tsx",
          "path": "client/src/components/SidePanel/Builder/PanelSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "Knowledge.tsx",
          "path": "client/src/components/SidePanel/Builder/Knowledge.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef, useEffect } from 'react';"
          }
        },
        {
          "name": "ActionsAuth.tsx",
          "path": "client/src/components/SidePanel/Builder/ActionsAuth.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "AssistantSelect.tsx",
          "path": "client/src/components/SidePanel/Builder/AssistantSelect.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Plus } from 'lucide-react';"
          }
        },
        {
          "name": "Action.tsx",
          "path": "client/src/components/SidePanel/Builder/Action.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "ContextButton.tsx",
          "path": "client/src/components/SidePanel/Builder/ContextButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { Assistant, AssistantCreateParams, AssistantsEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "ActionsPanel.tsx",
          "path": "client/src/components/SidePanel/Builder/ActionsPanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "CodeFiles.tsx",
          "path": "client/src/components/SidePanel/Builder/CodeFiles.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef, useEffect } from 'react';"
          }
        },
        {
          "name": "Code.tsx",
          "path": "client/src/components/SidePanel/Builder/Code.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Capabilities } from 'librechat-data-provider';"
          }
        },
        {
          "name": "AssistantAvatar.tsx",
          "path": "client/src/components/SidePanel/Builder/AssistantAvatar.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Popover from '@radix-ui/react-popover';"
          }
        },
        {
          "name": "Retrieval.tsx",
          "path": "client/src/components/SidePanel/Builder/Retrieval.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "CapabilitiesForm.tsx",
          "path": "client/src/components/SidePanel/Builder/CapabilitiesForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "AssistantPanel.tsx",
          "path": "client/src/components/SidePanel/Builder/AssistantPanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useMemo } from 'react';"
          }
        },
        {
          "name": "ActionsInput.tsx",
          "path": "client/src/components/SidePanel/Builder/ActionsInput.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "ActionCallback.tsx",
          "path": "client/src/components/SidePanel/Builder/ActionCallback.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "AssistantTool.tsx",
          "path": "client/src/components/SidePanel/Builder/AssistantTool.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "AppendDateCheckbox.tsx",
          "path": "client/src/components/SidePanel/Builder/AppendDateCheckbox.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Control, Controller, UseFormSetValue, UseFormGetValues } from 'react-hook-form';"
          }
        },
        {
          "name": "ImageVision.tsx",
          "path": "client/src/components/SidePanel/Builder/ImageVision.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useFormContext, Controller } from 'react-hook-form';"
          }
        },
        {
          "name": "Images.tsx",
          "path": "client/src/components/SidePanel/Builder/Images.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRef } from 'react';"
          }
        },
        {
          "name": "AssistantConversationStarters.tsx",
          "path": "client/src/components/SidePanel/Builder/AssistantConversationStarters.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useRef, useState } from 'react';"
          }
        }
      ],
      "subfolders": [
        "ActionsTable"
      ]
    },
    {
      "folder": "client/src/components/SidePanel/Builder/ActionsTable",
      "files": [
        {
          "name": "Columns.tsx",
          "path": "client/src/components/SidePanel/Builder/ActionsTable/Columns.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { ColumnDef } from '@tanstack/react-table';"
          }
        },
        {
          "name": "Table.tsx",
          "path": "client/src/components/SidePanel/Builder/ActionsTable/Table.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useReactTable, flexRender, getCoreRowModel } from '@tanstack/react-table';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/SidePanel/Builder/ActionsTable/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as ActionsTable } from './Table';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Banners",
      "files": [
        {
          "name": "Banner.tsx",
          "path": "client/src/components/Banners/Banner.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Banners/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { Banner } from './Banner';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Audio",
      "files": [
        {
          "name": "TTS.tsx",
          "path": "client/src/components/Audio/TTS.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "/* eslint-disable jsx-a11y/media-has-caption */"
          }
        },
        {
          "name": "Voices.tsx",
          "path": "client/src/components/Audio/Voices.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Bookmarks",
      "files": [
        {
          "name": "BookmarkItems.tsx",
          "path": "client/src/components/Bookmarks/BookmarkItems.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { FC } from 'react';"
          }
        },
        {
          "name": "EditBookmarkButton.tsx",
          "path": "client/src/components/Bookmarks/EditBookmarkButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "DeleteBookmarkButton.tsx",
          "path": "client/src/components/Bookmarks/DeleteBookmarkButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useCallback, useState } from 'react';"
          }
        },
        {
          "name": "BookmarkItem.tsx",
          "path": "client/src/components/Bookmarks/BookmarkItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Bookmarks/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as DeleteBookmarkButton } from './DeleteBookmarkButton';"
          }
        },
        {
          "name": "BookmarkForm.tsx",
          "path": "client/src/components/Bookmarks/BookmarkForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect } from 'react';"
          }
        },
        {
          "name": "BookmarkEditDialog.tsx",
          "path": "client/src/components/Bookmarks/BookmarkEditDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useRef, Dispatch, SetStateAction } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Conversations",
      "files": [
        {
          "name": "ToggleContext.ts",
          "path": "client/src/components/Conversations/ToggleContext.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { createContext, useContext } from 'react';"
          }
        },
        {
          "name": "Convo.tsx",
          "path": "client/src/components/Conversations/Convo.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';"
          }
        },
        {
          "name": "Conversations.tsx",
          "path": "client/src/components/Conversations/Conversations.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, memo } from 'react';"
          }
        },
        {
          "name": "HoverToggle.tsx",
          "path": "client/src/components/Conversations/HoverToggle.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Conversations/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as Fork } from './Fork';"
          }
        },
        {
          "name": "Pages.tsx",
          "path": "client/src/components/Conversations/Pages.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "Fork.tsx",
          "path": "client/src/components/Conversations/Fork.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useRef } from 'react';"
          }
        }
      ],
      "subfolders": [
        "ConvoOptions"
      ]
    },
    {
      "folder": "client/src/components/Conversations/ConvoOptions",
      "files": [
        {
          "name": "DeleteButton.tsx",
          "path": "client/src/components/Conversations/ConvoOptions/DeleteButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useCallback } from 'react';"
          }
        },
        {
          "name": "SharedLinkButton.tsx",
          "path": "client/src/components/Conversations/ConvoOptions/SharedLinkButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useCallback } from 'react';"
          }
        },
        {
          "name": "ConvoOptions.tsx",
          "path": "client/src/components/Conversations/ConvoOptions/ConvoOptions.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useId, useRef, memo } from 'react';"
          }
        },
        {
          "name": "ShareButton.tsx",
          "path": "client/src/components/Conversations/ConvoOptions/ShareButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useEffect } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Conversations/ConvoOptions/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './DeleteButton';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Prompts",
      "files": [
        {
          "name": "PreviewPrompt.tsx",
          "path": "client/src/components/Prompts/PreviewPrompt.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TPromptGroup } from 'librechat-data-provider';"
          }
        },
        {
          "name": "PromptsAccordion.tsx",
          "path": "client/src/components/Prompts/PromptsAccordion.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import PromptSidePanel from '~/components/Prompts/Groups/GroupSidePanel';"
          }
        },
        {
          "name": "Markdown.tsx",
          "path": "client/src/components/Prompts/Markdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "ManagePrompts.tsx",
          "path": "client/src/components/Prompts/ManagePrompts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "PromptVersions.tsx",
          "path": "client/src/components/Prompts/PromptVersions.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "PromptForm.tsx",
          "path": "client/src/components/Prompts/PromptForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "EmptyPromptPreview.tsx",
          "path": "client/src/components/Prompts/EmptyPromptPreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AdvancedSwitch.tsx",
          "path": "client/src/components/Prompts/AdvancedSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState, useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "SharePrompt.tsx",
          "path": "client/src/components/Prompts/SharePrompt.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect, useMemo } from 'react';"
          }
        },
        {
          "name": "PromptName.tsx",
          "path": "client/src/components/Prompts/PromptName.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect, useState, useRef } from 'react';"
          }
        },
        {
          "name": "Description.tsx",
          "path": "client/src/components/Prompts/Description.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useEffect } from 'react';"
          }
        },
        {
          "name": "Command.tsx",
          "path": "client/src/components/Prompts/Command.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { SquareSlash } from 'lucide-react';"
          }
        },
        {
          "name": "SkeletonForm.tsx",
          "path": "client/src/components/Prompts/SkeletonForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Skeleton } from '~/components/ui';"
          }
        },
        {
          "name": "PromptDetails.tsx",
          "path": "client/src/components/Prompts/PromptDetails.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo } from 'react';"
          }
        },
        {
          "name": "DeleteVersion.tsx",
          "path": "client/src/components/Prompts/DeleteVersion.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Trash2 } from 'lucide-react';"
          }
        },
        {
          "name": "AdminSettings.tsx",
          "path": "client/src/components/Prompts/AdminSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as Ariakit from '@ariakit/react';"
          }
        },
        {
          "name": "PromptsView.tsx",
          "path": "client/src/components/Prompts/PromptsView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, useEffect } from 'react';"
          }
        },
        {
          "name": "PromptVariables.tsx",
          "path": "client/src/components/Prompts/PromptVariables.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Prompts/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as PromptName } from './PromptName';"
          }
        },
        {
          "name": "PreviewLabels.tsx",
          "path": "client/src/components/Prompts/PreviewLabels.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "BackToChat.tsx",
          "path": "client/src/components/Prompts/BackToChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useNavigate } from 'react-router-dom';"
          }
        },
        {
          "name": "PromptEditor.tsx",
          "path": "client/src/components/Prompts/PromptEditor.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, memo } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Groups"
      ]
    },
    {
      "folder": "client/src/components/Prompts/Groups",
      "files": [
        {
          "name": "AutoSendPrompt.tsx",
          "path": "client/src/components/Prompts/Groups/AutoSendPrompt.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "NoPromptGroup.tsx",
          "path": "client/src/components/Prompts/Groups/NoPromptGroup.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useNavigate } from 'react-router-dom';"
          }
        },
        {
          "name": "PanelNavigation.tsx",
          "path": "client/src/components/Prompts/Groups/PanelNavigation.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "ChatGroupItem.tsx",
          "path": "client/src/components/Prompts/Groups/ChatGroupItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useMemo, memo } from 'react';"
          }
        },
        {
          "name": "FilterPrompts.tsx",
          "path": "client/src/components/Prompts/Groups/FilterPrompts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { ListFilter, User, Share2 } from 'lucide-react';"
          }
        },
        {
          "name": "List.tsx",
          "path": "client/src/components/Prompts/Groups/List.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Plus } from 'lucide-react';"
          }
        },
        {
          "name": "CategorySelector.tsx",
          "path": "client/src/components/Prompts/Groups/CategorySelector.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo } from 'react';"
          }
        },
        {
          "name": "VariableDialog.tsx",
          "path": "client/src/components/Prompts/Groups/VariableDialog.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useMemo } from 'react';"
          }
        },
        {
          "name": "ListCard.tsx",
          "path": "client/src/components/Prompts/Groups/ListCard.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CategoryIcon.tsx",
          "path": "client/src/components/Prompts/Groups/CategoryIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "GroupSidePanel.tsx",
          "path": "client/src/components/Prompts/Groups/GroupSidePanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "VariableForm.tsx",
          "path": "client/src/components/Prompts/Groups/VariableForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "CreatePromptForm.tsx",
          "path": "client/src/components/Prompts/Groups/CreatePromptForm.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "DashGroupItem.tsx",
          "path": "client/src/components/Prompts/Groups/DashGroupItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo, useState, useRef, useMemo, useCallback, KeyboardEvent } from 'react';"
          }
        },
        {
          "name": "AlwaysMakeProd.tsx",
          "path": "client/src/components/Prompts/Groups/AlwaysMakeProd.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Files",
      "files": [
        {
          "name": "FilesSectionSelector.tsx",
          "path": "client/src/components/Files/FilesSectionSelector.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "FilesListView.tsx",
          "path": "client/src/components/Files/FilesListView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "VectorStoreView.tsx",
          "path": "client/src/components/Files/VectorStoreView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "DeleteIconButton.tsx",
          "path": "client/src/components/Files/DeleteIconButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "ActionButton.tsx",
          "path": "client/src/components/Files/ActionButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "FileDashboardView.tsx",
          "path": "client/src/components/Files/FileDashboardView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": [
        "FileList",
        "VectorStore"
      ]
    },
    {
      "folder": "client/src/components/Files/FileList",
      "files": [
        {
          "name": "FileSidePanel.tsx",
          "path": "client/src/components/Files/FileList/FileSidePanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "DataTableFilePreview.tsx",
          "path": "client/src/components/Files/FileList/DataTableFilePreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "FilePreview.tsx",
          "path": "client/src/components/Files/FileList/FilePreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { TFile } from 'librechat-data-provider/dist/types';"
          }
        },
        {
          "name": "FileListItem.tsx",
          "path": "client/src/components/Files/FileList/FileListItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TFile } from 'librechat-data-provider';"
          }
        },
        {
          "name": "UploadFileButton.tsx",
          "path": "client/src/components/Files/FileList/UploadFileButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { PlusIcon } from 'lucide-react';"
          }
        },
        {
          "name": "FileList.tsx",
          "path": "client/src/components/Files/FileList/FileList.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TFile } from 'librechat-data-provider';"
          }
        },
        {
          "name": "FileTableColumns.tsx",
          "path": "client/src/components/Files/FileList/FileTableColumns.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "/* eslint-disable react-hooks/rules-of-hooks */"
          }
        },
        {
          "name": "FileListItem2.tsx",
          "path": "client/src/components/Files/FileList/FileListItem2.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import type { TFile } from 'librechat-data-provider';"
          }
        },
        {
          "name": "UploadFileModal.tsx",
          "path": "client/src/components/Files/FileList/UploadFileModal.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, ChangeEvent } from 'react';"
          }
        },
        {
          "name": "DataTableFile.tsx",
          "path": "client/src/components/Files/FileList/DataTableFile.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import * as React from 'react';"
          }
        },
        {
          "name": "EmptyFilePreview.tsx",
          "path": "client/src/components/Files/FileList/EmptyFilePreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Files/VectorStore",
      "files": [
        {
          "name": "VectorStoreButton.tsx",
          "path": "client/src/components/Files/VectorStore/VectorStoreButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { PlusIcon } from 'lucide-react';"
          }
        },
        {
          "name": "EmptyVectorStorePreview.tsx",
          "path": "client/src/components/Files/VectorStore/EmptyVectorStorePreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "VectorStoreSidePanel.tsx",
          "path": "client/src/components/Files/VectorStore/VectorStoreSidePanel.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "VectorStorePreview.tsx",
          "path": "client/src/components/Files/VectorStore/VectorStorePreview.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "VectorStoreFilter.tsx",
          "path": "client/src/components/Files/VectorStore/VectorStoreFilter.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "VectorStoreList.tsx",
          "path": "client/src/components/Files/VectorStore/VectorStoreList.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "VectorStoreListItem.tsx",
          "path": "client/src/components/Files/VectorStore/VectorStoreListItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav",
      "files": [
        {
          "name": "Settings.tsx",
          "path": "client/src/components/Nav/Settings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useRef } from 'react';"
          }
        },
        {
          "name": "Nav.spec.tsx",
          "path": "client/src/components/Nav/Nav.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import 'test/resizeObserver.mock';"
          }
        },
        {
          "name": "Nav.tsx",
          "path": "client/src/components/Nav/Nav.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useCallback, useEffect, useState, useMemo, memo } from 'react';"
          }
        },
        {
          "name": "NewChat.tsx",
          "path": "client/src/components/Nav/NewChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Search } from 'lucide-react';"
          }
        },
        {
          "name": "SearchBar.tsx",
          "path": "client/src/components/Nav/SearchBar.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "NavLink.tsx",
          "path": "client/src/components/Nav/NavLink.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { FC, forwardRef } from 'react';"
          }
        },
        {
          "name": "MobileNav.tsx",
          "path": "client/src/components/Nav/MobileNav.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AccountSettings.tsx",
          "path": "client/src/components/Nav/AccountSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Nav/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './ExportConversation';"
          }
        },
        {
          "name": "NavToggle.tsx",
          "path": "client/src/components/Nav/NavToggle.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useLocalize } from '~/hooks';"
          }
        }
      ],
      "subfolders": [
        "SettingsTabs",
        "Bookmarks",
        "ExportConversation"
      ]
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs",
      "files": [
        {
          "name": "HoverCardSettings.tsx",
          "path": "client/src/components/Nav/SettingsTabs/HoverCardSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Nav/SettingsTabs/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as General } from './General/General';"
          }
        },
        {
          "name": "DangerButton.tsx",
          "path": "client/src/components/Nav/SettingsTabs/DangerButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { forwardRef } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Beta",
        "Chat",
        "General",
        "Speech",
        "Commands",
        "Account",
        "Data"
      ]
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Beta",
      "files": [
        {
          "name": "Beta.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Beta/Beta.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "CodeArtifacts.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Beta/CodeArtifacts.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Chat",
      "files": [
        {
          "name": "EnterToSend.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/EnterToSend.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "ModularChat.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/ModularChat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "ShowThinking.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/ShowThinking.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "ChatDirection.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/ChatDirection.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "SaveDraft.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/SaveDraft.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "ScrollButton.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/ScrollButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "ShowCodeSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/ShowCodeSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "LaTeXParsing.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/LaTeXParsing.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "FontSizeSelector.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/FontSizeSelector.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "Chat.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/Chat.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "MaximizeChatSpace.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/MaximizeChatSpace.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "ForkSettings.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Chat/ForkSettings.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/General",
      "files": [
        {
          "name": "UserMsgMarkdownSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/UserMsgMarkdownSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "ArchivedChats.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/ArchivedChats.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useLocalize } from '~/hooks';"
          }
        },
        {
          "name": "AutoScrollSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/AutoScrollSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "HideSidePanelSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/HideSidePanelSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "AutoScrollSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/AutoScrollSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "LangSelector.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/LangSelector.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import 'test/matchMedia.mock';"
          }
        },
        {
          "name": "ThemeSelector.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/ThemeSelector.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "// ThemeSelector.spec.tsx"
          }
        },
        {
          "name": "ArchivedChatsTable.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/ArchivedChatsTable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useCallback, useMemo } from 'react';"
          }
        },
        {
          "name": "General.tsx",
          "path": "client/src/components/Nav/SettingsTabs/General/General.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Speech",
      "files": [
        {
          "name": "ConversationModeSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/ConversationModeSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState, useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "ConversationModeSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/ConversationModeSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "Speech.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/Speech.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": [
        "TTS",
        "STT"
      ]
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Speech/TTS",
      "files": [
        {
          "name": "VoiceDropdown.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/VoiceDropdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "EngineTTSDropdown.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/EngineTTSDropdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CacheTTSSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/CacheTTSSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "CloudBrowserVoicesSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/CloudBrowserVoicesSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as CloudBrowserVoicesSwitch } from './CloudBrowserVoicesSwitch';"
          }
        },
        {
          "name": "TextToSpeechSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/TextToSpeechSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "AutomaticPlaybackSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/AutomaticPlaybackSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "PlaybackRate.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/PlaybackRate.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": [
        "__tests__"
      ]
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Speech/TTS/__tests__",
      "files": [
        {
          "name": "TextToSpeechSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/__tests__/TextToSpeechSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CacheTTSSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/__tests__/CacheTTSSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "CloudBrowserVoicesSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/__tests__/CloudBrowserVoicesSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AutomaticPlaybackSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/TTS/__tests__/AutomaticPlaybackSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Speech/STT",
      "files": [
        {
          "name": "AutoTranscribeAudioSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/AutoTranscribeAudioSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState, useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "DecibelSelector.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/DecibelSelector.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LanguageSTTDropdown.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/LanguageSTTDropdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "AutoSendTextSelector.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/AutoSendTextSelector.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as AutoSendTextSelector } from './AutoSendTextSelector';"
          }
        },
        {
          "name": "EngineSTTDropdown.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/EngineSTTDropdown.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "SpeechToTextSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/SpeechToTextSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": [
        "__tests__"
      ]
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Speech/STT/__tests__",
      "files": [
        {
          "name": "SpeechToTextSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/__tests__/SpeechToTextSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "AutoTranscribeAudioSwitch.spec.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Speech/STT/__tests__/AutoTranscribeAudioSwitch.spec.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Commands",
      "files": [
        {
          "name": "AtCommandSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Commands/AtCommandSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "SlashCommandSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Commands/SlashCommandSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "Commands.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Commands/Commands.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "PlusCommandSwitch.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Commands/PlusCommandSwitch.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Account",
      "files": [
        {
          "name": "DisableTwoFactorToggle.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/DisableTwoFactorToggle.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "Account.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/Account.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "DeleteAccount.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/DeleteAccount.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { LockIcon, Trash } from 'lucide-react';"
          }
        },
        {
          "name": "TwoFactorAuthentication.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/TwoFactorAuthentication.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useCallback, useState } from 'react';"
          }
        },
        {
          "name": "DisplayUsernameMessages.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/DisplayUsernameMessages.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "BackupCodesItem.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/BackupCodesItem.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "Avatar.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/Avatar.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useRef, useCallback } from 'react';"
          }
        }
      ],
      "subfolders": [
        "TwoFactorPhases"
      ]
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Account/TwoFactorPhases",
      "files": [
        {
          "name": "VerifyPhase.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/TwoFactorPhases/VerifyPhase.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "BackupPhase.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/TwoFactorPhases/BackupPhase.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "QRPhase.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/TwoFactorPhases/QRPhase.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "SetupPhase.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/TwoFactorPhases/SetupPhase.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Nav/SettingsTabs/Account/TwoFactorPhases/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './BackupPhase';"
          }
        },
        {
          "name": "DisablePhase.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Account/TwoFactorPhases/DisablePhase.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/SettingsTabs/Data",
      "files": [
        {
          "name": "ImportConversations.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Data/ImportConversations.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef } from 'react';"
          }
        },
        {
          "name": "ClearChats.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Data/ClearChats.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "DeleteCache.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Data/DeleteCache.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useCallback, useRef, useEffect } from 'react';"
          }
        },
        {
          "name": "RevokeAllKeys.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Data/RevokeAllKeys.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "Data.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Data/Data.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useRef } from 'react';"
          }
        },
        {
          "name": "RevokeKeysButton.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Data/RevokeKeysButton.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "SharedLinks.tsx",
          "path": "client/src/components/Nav/SettingsTabs/Data/SharedLinks.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useCallback, useState, useMemo, useEffect } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/Bookmarks",
      "files": [
        {
          "name": "BookmarkNavItems.tsx",
          "path": "client/src/components/Nav/Bookmarks/BookmarkNavItems.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useState, type FC } from 'react';"
          }
        },
        {
          "name": "BookmarkNav.tsx",
          "path": "client/src/components/Nav/Bookmarks/BookmarkNav.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { type FC } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Nav/ExportConversation",
      "files": [
        {
          "name": "ExportModal.tsx",
          "path": "client/src/components/Nav/ExportConversation/ExportModal.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import filenamify from 'filenamify';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/components/Nav/ExportConversation/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as ExportModal } from './ExportModal';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/components/Share",
      "files": [
        {
          "name": "MessagesView.tsx",
          "path": "client/src/components/Share/MessagesView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "MultiMessage.tsx",
          "path": "client/src/components/Share/MultiMessage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "ShareView.tsx",
          "path": "client/src/components/Share/ShareView.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { memo } from 'react';"
          }
        },
        {
          "name": "Message.tsx",
          "path": "client/src/components/Share/Message.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "MessageIcon.tsx",
          "path": "client/src/components/Share/MessageIcon.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/common",
      "files": [
        {
          "name": "agents-types.ts",
          "path": "client/src/common/agents-types.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { AgentCapabilities, ArtifactModes } from 'librechat-data-provider';"
          }
        },
        {
          "name": "a11y.ts",
          "path": "client/src/common/a11y.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export interface AnnounceOptions {"
          }
        },
        {
          "name": "menus.ts",
          "path": "client/src/common/menus.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* eslint-disable @typescript-eslint/no-explicit-any */"
          }
        },
        {
          "name": "artifacts.ts",
          "path": "client/src/common/artifacts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export interface CodeBlock {"
          }
        },
        {
          "name": "assistants-types.ts",
          "path": "client/src/common/assistants-types.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { Capabilities, EModelEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "types.ts",
          "path": "client/src/common/types.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { RefObject } from 'react';"
          }
        },
        {
          "name": "tools.ts",
          "path": "client/src/common/tools.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { AuthType } from 'librechat-data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/common/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './a11y';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks",
      "files": [
        {
          "name": "useGenerationsByLatest.ts",
          "path": "client/src/hooks/useGenerationsByLatest.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EModelEndpoint, isAssistantsEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "useToast.ts",
          "path": "client/src/hooks/useToast.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilState } from 'recoil';"
          }
        },
        {
          "name": "useOnClickOutside.ts",
          "path": "client/src/hooks/useOnClickOutside.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, RefObject } from 'react';"
          }
        },
        {
          "name": "ApiErrorBoundaryContext.tsx",
          "path": "client/src/hooks/ApiErrorBoundaryContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState } from 'react';"
          }
        },
        {
          "name": "useDocumentTitle.ts",
          "path": "client/src/hooks/useDocumentTitle.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// useDocumentTitle.js"
          }
        },
        {
          "name": "useLocalStorage.tsx",
          "path": "client/src/hooks/useLocalStorage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "/* `useLocalStorage`"
          }
        },
        {
          "name": "useScrollToRef.ts",
          "path": "client/src/hooks/useScrollToRef.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { RefObject, useCallback } from 'react';"
          }
        },
        {
          "name": "useDelayedRender.tsx",
          "path": "client/src/hooks/useDelayedRender.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useState, useRef, useEffect } from 'react';"
          }
        },
        {
          "name": "useTimeout.tsx",
          "path": "client/src/hooks/useTimeout.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "ThemeContext.tsx",
          "path": "client/src/hooks/ThemeContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "//ThemeContext.js"
          }
        },
        {
          "name": "AuthContext.tsx",
          "path": "client/src/hooks/AuthContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "ScreenshotContext.tsx",
          "path": "client/src/hooks/ScreenshotContext.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createContext, useRef, useContext, RefObject } from 'react';"
          }
        },
        {
          "name": "useLocalize.ts",
          "path": "client/src/hooks/useLocalize.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './Audio';"
          }
        },
        {
          "name": "useNewConvo.ts",
          "path": "client/src/hooks/useNewConvo.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "useMediaQuery.tsx",
          "path": "client/src/hooks/useMediaQuery.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useState } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Artifacts",
        "SSE",
        "Messages",
        "Chat",
        "Assistants",
        "Config",
        "Input",
        "Plugins",
        "Agents",
        "Roles",
        "Audio",
        "Conversations",
        "Prompts",
        "Files",
        "Generic",
        "Nav"
      ]
    },
    {
      "folder": "client/src/hooks/Artifacts",
      "files": [
        {
          "name": "useArtifactProps.ts",
          "path": "client/src/hooks/Artifacts/useArtifactProps.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "useAutoScroll.ts",
          "path": "client/src/hooks/Artifacts/useAutoScroll.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// hooks/useAutoScroll.ts"
          }
        },
        {
          "name": "useArtifacts.ts",
          "path": "client/src/hooks/Artifacts/useArtifacts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo, useState, useEffect, useRef } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/SSE",
      "files": [
        {
          "name": "useSSE.ts",
          "path": "client/src/hooks/SSE/useSSE.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, useState } from 'react';"
          }
        },
        {
          "name": "useEventHandlers.ts",
          "path": "client/src/hooks/SSE/useEventHandlers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { v4 } from 'uuid';"
          }
        },
        {
          "name": "useStepHandler.ts",
          "path": "client/src/hooks/SSE/useStepHandler.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "useAttachmentHandler.ts",
          "path": "client/src/hooks/SSE/useAttachmentHandler.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/SSE/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useSSE } from './useSSE';"
          }
        },
        {
          "name": "useContentHandler.ts",
          "path": "client/src/hooks/SSE/useContentHandler.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useMemo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Messages",
      "files": [
        {
          "name": "useBuildMessageTree.ts",
          "path": "client/src/hooks/Messages/useBuildMessageTree.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilCallback } from 'recoil';"
          }
        },
        {
          "name": "useMessageActions.tsx",
          "path": "client/src/hooks/Messages/useMessageActions.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "useAvatar.ts",
          "path": "client/src/hooks/Messages/useAvatar.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "useMessageScrolling.ts",
          "path": "client/src/hooks/Messages/useMessageScrolling.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "useProgress.ts",
          "path": "client/src/hooks/Messages/useProgress.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useState, useEffect, useMemo, useCallback } from 'react';"
          }
        },
        {
          "name": "useSubmitMessage.ts",
          "path": "client/src/hooks/Messages/useSubmitMessage.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { v4 } from 'uuid';"
          }
        },
        {
          "name": "useCopyToClipboard.ts",
          "path": "client/src/hooks/Messages/useCopyToClipboard.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Messages/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useAvatar } from './useAvatar';"
          }
        },
        {
          "name": "useMessageProcess.tsx",
          "path": "client/src/hooks/Messages/useMessageProcess.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import throttle from 'lodash/throttle';"
          }
        },
        {
          "name": "useMessageHelpers.tsx",
          "path": "client/src/hooks/Messages/useMessageHelpers.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import throttle from 'lodash/throttle';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Chat",
      "files": [
        {
          "name": "useAddedResponse.ts",
          "path": "client/src/hooks/Chat/useAddedResponse.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "useAddedHelpers.ts",
          "path": "client/src/hooks/Chat/useAddedHelpers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "useChatHelpers.ts",
          "path": "client/src/hooks/Chat/useChatHelpers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useState } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Chat/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useChatHelpers } from './useChatHelpers';"
          }
        },
        {
          "name": "useChatFunctions.ts",
          "path": "client/src/hooks/Chat/useChatFunctions.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { v4 } from 'uuid';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Assistants",
      "files": [
        {
          "name": "useAssistantsMap.ts",
          "path": "client/src/hooks/Assistants/useAssistantsMap.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EModelEndpoint } from 'librechat-data-provider';"
          }
        },
        {
          "name": "useSelectAssistant.ts",
          "path": "client/src/hooks/Assistants/useSelectAssistant.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "useAssistantListMap.ts",
          "path": "client/src/hooks/Assistants/useAssistantListMap.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Assistants/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useAssistantsMap } from './useAssistantsMap';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Config",
      "files": [
        {
          "name": "useConfigOverride.ts",
          "path": "client/src/hooks/Config/useConfigOverride.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "useAppStartup.ts",
          "path": "client/src/hooks/Config/useAppStartup.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "useClearStates.ts",
          "path": "client/src/hooks/Config/useClearStates.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilCallback } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Config/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useAppStartup } from './useAppStartup';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Input",
      "files": [
        {
          "name": "useHandleKeyUp.ts",
          "path": "client/src/hooks/Input/useHandleKeyUp.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useMemo } from 'react';"
          }
        },
        {
          "name": "useSpeechToTextExternal.ts",
          "path": "client/src/hooks/Input/useSpeechToTextExternal.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useState, useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "useAutoSave.ts",
          "path": "client/src/hooks/Input/useAutoSave.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "useQueryParams.ts",
          "path": "client/src/hooks/Input/useQueryParams.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "useSpeechToTextBrowser.ts",
          "path": "client/src/hooks/Input/useSpeechToTextBrowser.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, useRef, useMemo } from 'react';"
          }
        },
        {
          "name": "useTextToSpeechEdge.ts",
          "path": "client/src/hooks/Input/useTextToSpeechEdge.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "useTextToSpeechBrowser.ts",
          "path": "client/src/hooks/Input/useTextToSpeechBrowser.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "useTextarea.ts",
          "path": "client/src/hooks/Input/useTextarea.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "useCombobox.ts",
          "path": "client/src/hooks/Input/useCombobox.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo, useState } from 'react';"
          }
        },
        {
          "name": "useSelectMention.ts",
          "path": "client/src/hooks/Input/useSelectMention.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "useSpeechToText.ts",
          "path": "client/src/hooks/Input/useSpeechToText.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import useSpeechToTextBrowser from './useSpeechToTextBrowser';"
          }
        },
        {
          "name": "useUserKey.ts",
          "path": "client/src/hooks/Input/useUserKey.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo, useCallback } from 'react';"
          }
        },
        {
          "name": "useMentions.ts",
          "path": "client/src/hooks/Input/useMentions.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "useDebounce.ts",
          "path": "client/src/hooks/Input/useDebounce.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useState, useEffect } from 'react';"
          }
        },
        {
          "name": "useRequiresKey.ts",
          "path": "client/src/hooks/Input/useRequiresKey.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useChatContext } from '~/Providers/ChatContext';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Input/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './useAutoSave';"
          }
        },
        {
          "name": "useTextToSpeechExternal.ts",
          "path": "client/src/hooks/Input/useTextToSpeechExternal.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "useTextToSpeech.ts",
          "path": "client/src/hooks/Input/useTextToSpeech.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilState, useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "useMultipleKeys.ts",
          "path": "client/src/hooks/Input/useMultipleKeys.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { isJson } from '~/utils/json';"
          }
        },
        {
          "name": "useGetAudioSettings.ts",
          "path": "client/src/hooks/Input/useGetAudioSettings.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Plugins",
      "files": [
        {
          "name": "useAuthCodeTool.ts",
          "path": "client/src/hooks/Plugins/useAuthCodeTool.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "useToolCallsMap.ts",
          "path": "client/src/hooks/Plugins/useToolCallsMap.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { ToolCallResult } from 'librechat-data-provider';"
          }
        },
        {
          "name": "usePluginInstall.ts",
          "path": "client/src/hooks/Plugins/usePluginInstall.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// hooks/Plugins/usePluginInstall.ts"
          }
        },
        {
          "name": "useCodeApiKeyForm.ts",
          "path": "client/src/hooks/Plugins/useCodeApiKeyForm.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// client/src/hooks/Plugins/useCodeApiKeyForm.ts"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Plugins/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useAuthCodeTool } from './useAuthCodeTool';"
          }
        },
        {
          "name": "usePluginDialogHelpers.ts",
          "path": "client/src/hooks/Plugins/usePluginDialogHelpers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useState, useCallback } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Agents",
      "files": [
        {
          "name": "useSelectAgent.ts",
          "path": "client/src/hooks/Agents/useSelectAgent.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useState } from 'react';"
          }
        },
        {
          "name": "useAgentsMap.ts",
          "path": "client/src/hooks/Agents/useAgentsMap.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { TAgentsMap } from 'librechat-data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Agents/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useAgentsMap } from './useAgentsMap';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Roles",
      "files": [
        {
          "name": "useHasAccess.ts",
          "path": "client/src/hooks/Roles/useHasAccess.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo, useCallback, useContext } from 'react';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Roles/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useHasAccess } from './useHasAccess';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Audio",
      "files": [
        {
          "name": "useTTSEdge.ts",
          "path": "client/src/hooks/Audio/useTTSEdge.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// client/src/hooks/Audio/useTTSEdge.ts"
          }
        },
        {
          "name": "usePauseGlobalAudio.ts",
          "path": "client/src/hooks/Audio/usePauseGlobalAudio.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "useAudioRef.ts",
          "path": "client/src/hooks/Audio/useAudioRef.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "useTTSBrowser.ts",
          "path": "client/src/hooks/Audio/useTTSBrowser.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// client/src/hooks/Audio/useTTSBrowser.ts"
          }
        },
        {
          "name": "MediaSourceAppender.ts",
          "path": "client/src/hooks/Audio/MediaSourceAppender.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export class MediaSourceAppender {"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Audio/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './MediaSourceAppender';"
          }
        },
        {
          "name": "useCustomAudioRef.ts",
          "path": "client/src/hooks/Audio/useCustomAudioRef.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "useTTSExternal.ts",
          "path": "client/src/hooks/Audio/useTTSExternal.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// client/src/hooks/Audio/useTTSExternal.ts"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Conversations",
      "files": [
        {
          "name": "useBookmarkSuccess.ts",
          "path": "client/src/hooks/Conversations/useBookmarkSuccess.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "useExportConversation.ts",
          "path": "client/src/hooks/Conversations/useExportConversation.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import download from 'downloadjs';"
          }
        },
        {
          "name": "useNavigateToConvo.tsx",
          "path": "client/src/hooks/Conversations/useNavigateToConvo.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "useArchiveHandler.ts",
          "path": "client/src/hooks/Conversations/useArchiveHandler.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useParams, useNavigate } from 'react-router-dom';"
          }
        },
        {
          "name": "useUpdateTagsInConvo.ts",
          "path": "client/src/hooks/Conversations/useUpdateTagsInConvo.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useQueryClient } from '@tanstack/react-query';"
          }
        },
        {
          "name": "useSetIndexOptions.ts",
          "path": "client/src/hooks/Conversations/useSetIndexOptions.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue, useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "useGetSender.ts",
          "path": "client/src/hooks/Conversations/useGetSender.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback } from 'react';"
          }
        },
        {
          "name": "useSearch.ts",
          "path": "client/src/hooks/Conversations/useSearch.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, useState, useCallback } from 'react';"
          }
        },
        {
          "name": "usePresets.ts",
          "path": "client/src/hooks/Conversations/usePresets.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import filenamify from 'filenamify';"
          }
        },
        {
          "name": "useGenerateConvo.ts",
          "path": "client/src/hooks/Conversations/useGenerateConvo.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "useDefaultConvo.ts",
          "path": "client/src/hooks/Conversations/useDefaultConvo.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useGetModelsQuery } from 'librechat-data-provider/react-query';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Conversations/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useSearch } from './useSearch';"
          }
        },
        {
          "name": "useParameterEffects.ts",
          "path": "client/src/hooks/Conversations/useParameterEffects.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "useDebouncedInput.ts",
          "path": "client/src/hooks/Conversations/useDebouncedInput.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        },
        {
          "name": "usePresetIndexOptions.ts",
          "path": "client/src/hooks/Conversations/usePresetIndexOptions.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue, useSetRecoilState } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Prompts",
      "files": [
        {
          "name": "useCategories.tsx",
          "path": "client/src/hooks/Prompts/useCategories.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useGetCategories } from '~/data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Prompts/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useCategories } from './useCategories';"
          }
        },
        {
          "name": "usePromptGroupsNav.ts",
          "path": "client/src/hooks/Prompts/usePromptGroupsNav.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilState, useRecoilValue } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Files",
      "files": [
        {
          "name": "useDelayedUploadToast.ts",
          "path": "client/src/hooks/Files/useDelayedUploadToast.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useState } from 'react';"
          }
        },
        {
          "name": "useFileHandling.ts",
          "path": "client/src/hooks/Files/useFileHandling.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { v4 } from 'uuid';"
          }
        },
        {
          "name": "useDragHelpers.ts",
          "path": "client/src/hooks/Files/useDragHelpers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useState, useMemo } from 'react';"
          }
        },
        {
          "name": "useUpdateFiles.ts",
          "path": "client/src/hooks/Files/useUpdateFiles.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import type { ExtendedFile, FileSetter } from '~/common';"
          }
        },
        {
          "name": "useDeleteFilesFromTable.tsx",
          "path": "client/src/hooks/Files/useDeleteFilesFromTable.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useQueryClient } from '@tanstack/react-query';"
          }
        },
        {
          "name": "useFileMap.ts",
          "path": "client/src/hooks/Files/useFileMap.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useGetFiles } from '~/data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Files/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useDeleteFilesFromTable } from './useDeleteFilesFromTable';"
          }
        },
        {
          "name": "useSetFilesToDelete.ts",
          "path": "client/src/hooks/Files/useSetFilesToDelete.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { LocalStorageKeys } from 'librechat-data-provider';"
          }
        },
        {
          "name": "useFileDeletion.ts",
          "path": "client/src/hooks/Files/useFileDeletion.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import debounce from 'lodash/debounce';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Generic",
      "files": [
        {
          "name": "useLazyEffect.ts",
          "path": "client/src/hooks/Generic/useLazyEffect.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "/* eslint-disable react-hooks/exhaustive-deps */"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Generic/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './useLazyEffect';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/hooks/Nav",
      "files": [
        {
          "name": "useNavScrolling.ts",
          "path": "client/src/hooks/Nav/useNavScrolling.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import throttle from 'lodash/throttle';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/hooks/Nav/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as useNavScrolling } from './useNavScrolling';"
          }
        },
        {
          "name": "useNavHelpers.ts",
          "path": "client/src/hooks/Nav/useNavHelpers.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useEffect, useRef } from 'react';"
          }
        },
        {
          "name": "useSideNavLinks.ts",
          "path": "client/src/hooks/Nav/useSideNavLinks.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/a11y",
      "files": [
        {
          "name": "MessageBlock.tsx",
          "path": "client/src/a11y/MessageBlock.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LiveMessage.tsx",
          "path": "client/src/a11y/LiveMessage.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useEffect, useContext } from 'react';"
          }
        },
        {
          "name": "LiveMessenger.tsx",
          "path": "client/src/a11y/LiveMessenger.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React from 'react';"
          }
        },
        {
          "name": "LiveAnnouncer.tsx",
          "path": "client/src/a11y/LiveAnnouncer.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "// client/src/a11y/LiveAnnouncer.tsx"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/a11y/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export { default as LiveAnnouncer } from './LiveAnnouncer';"
          }
        },
        {
          "name": "Announcer.tsx",
          "path": "client/src/a11y/Announcer.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "// client/src/a11y/Announcer.tsx"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/routes",
      "files": [
        {
          "name": "useAuthRedirect.ts",
          "path": "client/src/routes/useAuthRedirect.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "index.tsx",
          "path": "client/src/routes/index.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { createBrowserRouter, Navigate, Outlet } from 'react-router-dom';"
          }
        },
        {
          "name": "Dashboard.tsx",
          "path": "client/src/routes/Dashboard.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { Navigate } from 'react-router-dom';"
          }
        },
        {
          "name": "RouteErrorBoundary.tsx",
          "path": "client/src/routes/RouteErrorBoundary.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useRouteError } from 'react-router-dom';"
          }
        },
        {
          "name": "Search.tsx",
          "path": "client/src/routes/Search.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo } from 'react';"
          }
        },
        {
          "name": "Root.tsx",
          "path": "client/src/routes/Root.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import React, { useState, useEffect } from 'react';"
          }
        },
        {
          "name": "ShareRoute.tsx",
          "path": "client/src/routes/ShareRoute.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import ShareView from '~/components/Share/ShareView';"
          }
        },
        {
          "name": "ChatRoute.tsx",
          "path": "client/src/routes/ChatRoute.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        }
      ],
      "subfolders": [
        "Layouts"
      ]
    },
    {
      "folder": "client/src/routes/Layouts",
      "files": [
        {
          "name": "Login.tsx",
          "path": "client/src/routes/Layouts/Login.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "Dashboard.tsx",
          "path": "client/src/routes/Layouts/Dashboard.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useState } from 'react';"
          }
        },
        {
          "name": "Startup.tsx",
          "path": "client/src/routes/Layouts/Startup.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useEffect, useState } from 'react';"
          }
        },
        {
          "name": "DashBreadcrumb.tsx",
          "path": "client/src/routes/Layouts/DashBreadcrumb.tsx",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".tsx",
            "ai_description": "React TypeScript component file",
            "extracted_description": "import { useMemo, useCallback } from 'react';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/data-provider",
      "files": [
        {
          "name": "queries.ts",
          "path": "client/src/data-provider/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "connection.ts",
          "path": "client/src/data-provider/connection.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useCallback, useRef } from 'react';"
          }
        },
        {
          "name": "prompts.ts",
          "path": "client/src/data-provider/prompts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "mutations.ts",
          "path": "client/src/data-provider/mutations.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import {"
          }
        },
        {
          "name": "roles.ts",
          "path": "client/src/data-provider/roles.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './Auth';"
          }
        },
        {
          "name": "tags.ts",
          "path": "client/src/data-provider/tags.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useQuery } from '@tanstack/react-query';"
          }
        }
      ],
      "subfolders": [
        "Misc",
        "Tools",
        "Messages",
        "Endpoints",
        "Auth",
        "Agents",
        "Files"
      ]
    },
    {
      "folder": "client/src/data-provider/Misc",
      "files": [
        {
          "name": "queries.ts",
          "path": "client/src/data-provider/Misc/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/Misc/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './queries';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/data-provider/Tools",
      "files": [
        {
          "name": "queries.ts",
          "path": "client/src/data-provider/Tools/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useQuery } from '@tanstack/react-query';"
          }
        },
        {
          "name": "mutations.ts",
          "path": "client/src/data-provider/Tools/mutations.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { dataService, QueryKeys, Tools } from 'librechat-data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/Tools/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './queries';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/data-provider/Messages",
      "files": [
        {
          "name": "mutations.ts",
          "path": "client/src/data-provider/Messages/mutations.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMutation, useQueryClient } from '@tanstack/react-query';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/Messages/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "// export * from './queries';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/data-provider/Endpoints",
      "files": [
        {
          "name": "queries.ts",
          "path": "client/src/data-provider/Endpoints/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/Endpoints/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './queries';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/data-provider/Auth",
      "files": [
        {
          "name": "queries.ts",
          "path": "client/src/data-provider/Auth/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "mutations.ts",
          "path": "client/src/data-provider/Auth/mutations.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useResetRecoilState, useSetRecoilState } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/Auth/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './queries';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/data-provider/Agents",
      "files": [
        {
          "name": "queries.ts",
          "path": "client/src/data-provider/Agents/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { QueryKeys, dataService, EModelEndpoint, defaultOrderQuery } from 'librechat-data-provider';"
          }
        },
        {
          "name": "mutations.ts",
          "path": "client/src/data-provider/Agents/mutations.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useMutation, useQueryClient } from '@tanstack/react-query';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/Agents/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './queries';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/data-provider/Files",
      "files": [
        {
          "name": "queries.ts",
          "path": "client/src/data-provider/Files/queries.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useRecoilValue } from 'recoil';"
          }
        },
        {
          "name": "mutations.ts",
          "path": "client/src/data-provider/Files/mutations.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { EToolResources } from 'librechat-data-provider';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/data-provider/Files/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "export * from './queries';"
          }
        }
      ],
      "subfolders": []
    },
    {
      "folder": "client/src/store",
      "files": [
        {
          "name": "endpoints.ts",
          "path": "client/src/store/endpoints.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom, selector } from 'recoil';"
          }
        },
        {
          "name": "artifacts.ts",
          "path": "client/src/store/artifacts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "search.ts",
          "path": "client/src/store/search.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "toast.ts",
          "path": "client/src/store/toast.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "settings.ts",
          "path": "client/src/store/settings.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "text.ts",
          "path": "client/src/store/text.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "temporary.ts",
          "path": "client/src/store/temporary.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atomWithLocalStorage } from '~/store/utils';"
          }
        },
        {
          "name": "language.ts",
          "path": "client/src/store/language.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import Cookies from 'js-cookie';"
          }
        },
        {
          "name": "utils.ts",
          "path": "client/src/store/utils.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "prompts.ts",
          "path": "client/src/store/prompts.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "preset.ts",
          "path": "client/src/store/preset.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "families.ts",
          "path": "client/src/store/families.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { useEffect } from 'react';"
          }
        },
        {
          "name": "submission.ts",
          "path": "client/src/store/submission.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "index.ts",
          "path": "client/src/store/index.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import * as artifacts from './artifacts';"
          }
        },
        {
          "name": "user.ts",
          "path": "client/src/store/user.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        },
        {
          "name": "misc.ts",
          "path": "client/src/store/misc.ts",
          "metadata": {
            "modified": "2025-03-11T11:44:54",
            "type": ".ts",
            "ai_description": "TypeScript source code file",
            "extracted_description": "import { atom } from 'recoil';"
          }
        }
      ],
      "subfolders": []
    }
  ],
  "files_scanned": 2002,
  "files_processed": 1834
}